{
    "name": "fastly",
    "description": "A Pulumi package for creating and managing fastly cloud resources.",
    "keywords": [
        "pulumi",
        "fastly"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`fastly` Terraform Provider](https://github.com/fastly/terraform-provider-fastly).",
    "repository": "https://github.com/pulumi/pulumi-fastly",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "description": "Fastly API Key from https://app.fastly.com/#account\n",
                "defaultInfo": {
                    "environment": [
                        "FASTLY_API_KEY"
                    ]
                }
            },
            "baseUrl": {
                "type": "string",
                "description": "Fastly API URL\n",
                "default": "https://api.fastly.com",
                "defaultInfo": {
                    "environment": [
                        "FASTLY_API_URL"
                    ]
                }
            }
        }
    },
    "types": {
        "fastly:index/ServiceACLEntriesv1Entry:ServiceACLEntriesv1Entry": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "A personal freeform descriptive note\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "description": "An IP address that is the focus for the ACL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negated": {
                    "type": "boolean",
                    "description": "A boolean that will negate the match if true\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnet": {
                    "type": "string",
                    "description": "An optional subnet mask applied to the IP address\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ip"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "ip"
                    ]
                }
            }
        },
        "fastly:index/ServiceComputeBackend:ServiceComputeBackend": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The SFTP address to stream logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoLoadbalance": {
                    "type": "boolean",
                    "description": "Denotes if this Backend should be\nincluded in the pool of backends that requests are load balanced against.\nDefault `true`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "betweenBytesTimeout": {
                    "type": "integer",
                    "description": "How long to wait between bytes in milliseconds. Default `10000`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectTimeout": {
                    "type": "integer",
                    "description": "How long to wait for a timeout in milliseconds.\nDefault `1000`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorThreshold": {
                    "type": "integer",
                    "description": "Number of errors to allow before the Backend is marked as down. Default `0`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "firstByteTimeout": {
                    "type": "integer",
                    "description": "How long to wait for the first bytes in milliseconds. Default `15000`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthcheck": {
                    "type": "string",
                    "description": "Name of a defined `healthcheck` to assign to this backend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConn": {
                    "type": "integer",
                    "description": "Maximum number of connections for this Backend.\nDefault `200`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxTlsVersion": {
                    "type": "string",
                    "description": "Maximum allowed TLS version on SSL connections to this backend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minTlsVersion": {
                    "type": "string",
                    "description": "Minimum allowed TLS version on SSL connections to this backend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideHost": {
                    "type": "string",
                    "description": "The hostname to override the Host header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port the SFTP service listens on. (Default: `22`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shield": {
                    "type": "string",
                    "description": "The POP of the shield designated to reduce inbound load. Valid values for `shield` are included in the [`GET /datacenters`](https://developer.fastly.com/reference/api/utils/datacenter/) API response.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCaCert": {
                    "type": "string",
                    "description": "CA certificate attached to origin.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCertHostname": {
                    "type": "string",
                    "description": "Overrides ssl_hostname, but only for cert verification. Does not affect SNI at all.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCheckCert": {
                    "type": "boolean",
                    "description": "Be strict about checking SSL certs. Default `true`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCiphers": {
                    "type": "string",
                    "description": "Comma separated list of OpenSSL Ciphers to try when negotiating to the backend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientCert": {
                    "type": "string",
                    "description": "Client certificate attached to origin. Used when connecting to the backend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientKey": {
                    "type": "string",
                    "description": "Client key attached to origin. Used when connecting to the backend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslHostname": {
                    "type": "string",
                    "description": "Used for both SNI during the TLS handshake and to validate the cert.\n",
                    "deprecationMessage": "Use ssl_cert_hostname and ssl_sni_hostname instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslSniHostname": {
                    "type": "string",
                    "description": "Overrides ssl_hostname, but only for SNI in the handshake. Does not affect cert validation at all.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Whether or not to use SSL to reach the backend. Default `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "description": "The [portion of traffic](https://docs.fastly.com/en/guides/load-balancing-configuration#how-weight-affects-load-balancing) to send to this Backend. Each Backend receives `weight / total` of the traffic. Default `100`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name"
            ]
        },
        "fastly:index/ServiceComputeBigquerylogging:ServiceComputeBigquerylogging": {
            "properties": {
                "dataset": {
                    "type": "string",
                    "description": "The Honeycomb Dataset you want to log to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "email": {
                    "type": "string",
                    "description": "The email for the service account with write access to your BigQuery dataset. If not provided, this will be pulled from a `FASTLY_BQ_EMAIL` environment variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of your Google Cloud Platform project.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "Your DigitalOcean Spaces account secret key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "table": {
                    "type": "string",
                    "description": "The ID of your BigQuery table.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataset",
                "email",
                "name",
                "projectId",
                "secretKey",
                "table"
            ]
        },
        "fastly:index/ServiceComputeBlobstoragelogging:ServiceComputeBlobstoragelogging": {
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "The unique Azure Blob Storage namespace in which your data objects are stored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "container": {
                    "type": "string",
                    "description": "The name of the Azure Blob Storage container in which to store logs.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "What level of GZIP encoding to have when dumping logs (default 0, no compression).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sasToken": {
                    "type": "string",
                    "description": "The Azure shared access signature providing write access to the blob service objects. Be sure to update your token before it expires or the logging functionality will not work.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The strftime specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accountName",
                "container",
                "name",
                "sasToken"
            ]
        },
        "fastly:index/ServiceComputeDomain:ServiceComputeDomain": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "An optional comment about the Domain.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "fastly:index/ServiceComputeGcslogging:ServiceComputeGcslogging": {
            "properties": {
                "bucketName": {
                    "type": "string",
                    "description": "The name of your Cloud Files container.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "email": {
                    "type": "string",
                    "description": "The email for the service account with write access to your BigQuery dataset. If not provided, this will be pulled from a `FASTLY_BQ_EMAIL` environment variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "What level of GZIP encoding to have when dumping logs (default 0, no compression).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "Your DigitalOcean Spaces account secret key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The strftime specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucketName",
                "name"
            ]
        },
        "fastly:index/ServiceComputeHealthcheck:ServiceComputeHealthcheck": {
            "properties": {
                "checkInterval": {
                    "type": "integer",
                    "description": "How often to run the Healthcheck in milliseconds. Default `5000`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expectedResponse": {
                    "type": "integer",
                    "description": "The status code expected from the host. Default `200`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "The Host header to send for this Healthcheck.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpVersion": {
                    "type": "string",
                    "description": "Whether to use version 1.0 or 1.1 HTTP. Default `1.1`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "initial": {
                    "type": "integer",
                    "description": "When loading a config, the initial number of probes to be seen as OK. Default `2`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "HTTP method used for request. Can be either `POST` or `PUT`. Default `POST`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "integer",
                    "description": "How many Healthchecks must succeed to be considered healthy. Default `3`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout in milliseconds. Default `500`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "integer",
                    "description": "The number of most recent Healthcheck queries to keep for this Healthcheck. Default `5`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "host",
                "name",
                "path"
            ]
        },
        "fastly:index/ServiceComputeHttpslogging:ServiceComputeHttpslogging": {
            "properties": {
                "contentType": {
                    "type": "string",
                    "description": "Value of the `Content-Type` header sent with the request.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headerName": {
                    "type": "string",
                    "description": "Custom header sent with the request.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headerValue": {
                    "type": "string",
                    "description": "Value of the custom header sent with the request.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jsonFormat": {
                    "type": "string",
                    "description": "Formats log entries as JSON. Can be either disabled (`0`), array of json (`1`), or newline delimited json (`2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "HTTP method used for request. Can be either `POST` or `PUT`. Default `POST`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxBytes": {
                    "type": "integer",
                    "description": "The maximum number of bytes sent in one request. Defaults to `0` for unbounded.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxEntries": {
                    "type": "integer",
                    "description": "The maximum number of logs sent in one request. Defaults to `0` for unbounded.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your OpenStack auth url.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "url"
            ]
        },
        "fastly:index/ServiceComputeLogentry:ServiceComputeLogentry": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port the SFTP service listens on. (Default: `22`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTls": {
                    "type": "boolean",
                    "description": "Whether to use TLS for secure logging. Can be either true or false.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceComputeLoggingCloudfile:ServiceComputeLoggingCloudfile": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Your Cloud File account access key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of your Cloud Files container.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "What level of GZIP encoding to have when dumping logs (default 0, no compression).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region to stream logs to. One of: DFW (Dallas), ORD (Chicago), IAD (Northern Virginia), LON (London), SYD (Sydney), HKG (Hong Kong).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The strftime specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for your Cloud Files account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bucketName",
                "name",
                "user"
            ]
        },
        "fastly:index/ServiceComputeLoggingDatadog:ServiceComputeLoggingDatadog": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region to stream logs to. One of: DFW (Dallas), ORD (Chicago), IAD (Northern Virginia), LON (London), SYD (Sydney), HKG (Hong Kong).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceComputeLoggingDigitalocean:ServiceComputeLoggingDigitalocean": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Your Cloud File account access key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of your Cloud Files container.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the DigitalOcean Spaces endpoint (default \"nyc3.digitaloceanspaces.com\").\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "What level of GZIP encoding to have when dumping logs (default 0, no compression).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "Your DigitalOcean Spaces account secret key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The strftime specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bucketName",
                "name",
                "secretKey"
            ]
        },
        "fastly:index/ServiceComputeLoggingElasticsearch:ServiceComputeLoggingElasticsearch": {
            "properties": {
                "index": {
                    "type": "string",
                    "description": "The name of the Elasticsearch index to send documents (logs) to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password for the server. If both `password` and `secret_key` are passed, `secret_key` will be preferred.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pipeline": {
                    "type": "string",
                    "description": "The ID of the Elasticsearch ingest pipeline to apply pre-process transformations to before indexing.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxBytes": {
                    "type": "integer",
                    "description": "The maximum number of bytes sent in one request. Defaults to `0` for unbounded.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxEntries": {
                    "type": "integer",
                    "description": "The maximum number of logs sent in one request. Defaults to `0` for unbounded.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your OpenStack auth url.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for your Cloud Files account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index",
                "name",
                "url"
            ]
        },
        "fastly:index/ServiceComputeLoggingFtp:ServiceComputeLoggingFtp": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The SFTP address to stream logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "What level of GZIP encoding to have when dumping logs (default 0, no compression).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password for the server. If both `password` and `secret_key` are passed, `secret_key` will be preferred.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port the SFTP service listens on. (Default: `22`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The strftime specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for your Cloud Files account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name",
                "password",
                "path",
                "user"
            ]
        },
        "fastly:index/ServiceComputeLoggingGooglepubsub:ServiceComputeLoggingGooglepubsub": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of your Google Cloud Platform project.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "Your DigitalOcean Spaces account secret key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topic": {
                    "type": "string",
                    "description": "The Kafka topic to send logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for your Cloud Files account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "projectId",
                "secretKey",
                "topic",
                "user"
            ]
        },
        "fastly:index/ServiceComputeLoggingHeroku:ServiceComputeLoggingHeroku": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your OpenStack auth url.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token",
                "url"
            ]
        },
        "fastly:index/ServiceComputeLoggingHoneycomb:ServiceComputeLoggingHoneycomb": {
            "properties": {
                "dataset": {
                    "type": "string",
                    "description": "The Honeycomb Dataset you want to log to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataset",
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceComputeLoggingKafka:ServiceComputeLoggingKafka": {
            "properties": {
                "brokers": {
                    "type": "string",
                    "description": "A comma-separated list of IP addresses or hostnames of Kafka brokers.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. One of: gzip, snappy, lz4.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requiredAcks": {
                    "type": "string",
                    "description": "The Number of acknowledgements a leader must receive before a write is considered successful. One of: 1 (default) One server needs to respond. 0 No servers need to respond. -1\tWait for all in-sync replicas to respond.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topic": {
                    "type": "string",
                    "description": "The Kafka topic to send logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTls": {
                    "type": "boolean",
                    "description": "Whether to use TLS for secure logging. Can be either true or false.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "brokers",
                "name",
                "topic"
            ]
        },
        "fastly:index/ServiceComputeLoggingLoggly:ServiceComputeLoggingLoggly": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceComputeLoggingLogshuttle:ServiceComputeLoggingLogshuttle": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your OpenStack auth url.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token",
                "url"
            ]
        },
        "fastly:index/ServiceComputeLoggingNewrelic:ServiceComputeLoggingNewrelic": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceComputeLoggingOpenstack:ServiceComputeLoggingOpenstack": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Your Cloud File account access key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of your Cloud Files container.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "What level of GZIP encoding to have when dumping logs (default 0, no compression).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The strftime specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your OpenStack auth url.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for your Cloud Files account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bucketName",
                "name",
                "url",
                "user"
            ]
        },
        "fastly:index/ServiceComputeLoggingScalyr:ServiceComputeLoggingScalyr": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region to stream logs to. One of: DFW (Dallas), ORD (Chicago), IAD (Northern Virginia), LON (London), SYD (Sydney), HKG (Hong Kong).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceComputeLoggingSftp:ServiceComputeLoggingSftp": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The SFTP address to stream logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "What level of GZIP encoding to have when dumping logs (default 0, no compression).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password for the server. If both `password` and `secret_key` are passed, `secret_key` will be preferred.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port the SFTP service listens on. (Default: `22`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "Your DigitalOcean Spaces account secret key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sshKnownHosts": {
                    "type": "string",
                    "description": "A list of host keys for all hosts we can connect to over SFTP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The strftime specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for your Cloud Files account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name",
                "path",
                "sshKnownHosts",
                "user"
            ]
        },
        "fastly:index/ServiceComputePackage:ServiceComputePackage": {
            "properties": {
                "filename": {
                    "type": "string",
                    "description": "The path to the Wasm deployment package within your local filesystem.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceCodeHash": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filename"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "filename",
                        "sourceCodeHash"
                    ]
                }
            }
        },
        "fastly:index/ServiceComputePapertrail:ServiceComputePapertrail": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The SFTP address to stream logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port the SFTP service listens on. (Default: `22`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name",
                "port"
            ]
        },
        "fastly:index/ServiceComputeS3logging:ServiceComputeS3logging": {
            "properties": {
                "bucketName": {
                    "type": "string",
                    "description": "The name of your Cloud Files container.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the DigitalOcean Spaces endpoint (default \"nyc3.digitaloceanspaces.com\").\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "What level of GZIP encoding to have when dumping logs (default 0, no compression).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redundancy": {
                    "type": "string",
                    "description": "The S3 redundancy level. Should be formatted; one of: `standard`, `reduced_redundancy` or null. Default `null`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "s3AccessKey": {
                    "type": "string",
                    "description": "AWS Access Key of an account with the required\npermissions to post logs. It is **strongly** recommended you create a separate\nIAM user with permissions to only operate on this Bucket. This key will be\nnot be encrypted. You can provide this key via an environment variable, `FASTLY_S3_ACCESS_KEY`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "s3SecretKey": {
                    "type": "string",
                    "description": "AWS Secret Key of an account with the required\npermissions to post logs. It is **strongly** recommended you create a separate\nIAM user with permissions to only operate on this Bucket. This secret will be\nnot be encrypted. You can provide this secret via an environment variable, `FASTLY_S3_SECRET_KEY`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverSideEncryption": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverSideEncryptionKmsKeyId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The strftime specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucketName",
                "name"
            ]
        },
        "fastly:index/ServiceComputeSplunk:ServiceComputeSplunk": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your OpenStack auth url.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token",
                "url"
            ]
        },
        "fastly:index/ServiceComputeSumologic:ServiceComputeSumologic": {
            "properties": {
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your OpenStack auth url.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "url"
            ]
        },
        "fastly:index/ServiceComputeSyslog:ServiceComputeSyslog": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The SFTP address to stream logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port the SFTP service listens on. (Default: `22`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTls": {
                    "type": "boolean",
                    "description": "Whether to use TLS for secure logging. Can be either true or false.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name"
            ]
        },
        "fastly:index/ServiceWafConfigurationRule:ServiceWafConfigurationRule": {
            "properties": {
                "modsecRuleId": {
                    "type": "integer",
                    "description": "The Web Application Firewall rule's modsecurity ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "description": "The Web Application Firewall rule's revision. The latest revision will be used if this is not provided.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "The Web Application Firewall rule's status. Allowed values are (`log`, `block` and `score`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "modsecRuleId",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "modsecRuleId",
                        "revision",
                        "status"
                    ]
                }
            }
        },
        "fastly:index/ServiceWafConfigurationRuleExclusion:ServiceWafConfigurationRuleExclusion": {
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "A conditional expression in VCL used to determine if the condition is met.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "exclusionType": {
                    "type": "string",
                    "description": "The type of rule exclusion. Values are `rule` to exclude the specified rule(s), or `waf` to disable the Web Application Firewall.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modsecRuleIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Set of modsecurity IDs to be excluded. No rules should be provided when `exclusion_type` is `waf`. The rules need to be configured on the Web Application Firewall to be excluded.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of rule exclusion.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "number": {
                    "type": "integer",
                    "description": "The numeric ID assigned to the WAF Rule Exclusion.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "condition",
                "exclusionType",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "condition",
                        "exclusionType",
                        "name",
                        "number"
                    ]
                }
            }
        },
        "fastly:index/Servicev1Acl:Servicev1Acl": {
            "properties": {
                "aclId": {
                    "type": "string",
                    "description": "The ID of the ACL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "aclId",
                        "name"
                    ]
                }
            }
        },
        "fastly:index/Servicev1Backend:Servicev1Backend": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The SFTP address to stream logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoLoadbalance": {
                    "type": "boolean",
                    "description": "Denotes if this Backend should be\nincluded in the pool of backends that requests are load balanced against.\nDefault `true`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "betweenBytesTimeout": {
                    "type": "integer",
                    "description": "How long to wait between bytes in milliseconds. Default `10000`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectTimeout": {
                    "type": "integer",
                    "description": "How long to wait for a timeout in milliseconds.\nDefault `1000`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorThreshold": {
                    "type": "integer",
                    "description": "Number of errors to allow before the Backend is marked as down. Default `0`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "firstByteTimeout": {
                    "type": "integer",
                    "description": "How long to wait for the first bytes in milliseconds. Default `15000`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthcheck": {
                    "type": "string",
                    "description": "Name of a defined `healthcheck` to assign to this backend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConn": {
                    "type": "integer",
                    "description": "Maximum number of connections for this Backend.\nDefault `200`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxTlsVersion": {
                    "type": "string",
                    "description": "Maximum allowed TLS version on SSL connections to this backend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minTlsVersion": {
                    "type": "string",
                    "description": "Minimum allowed TLS version on SSL connections to this backend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideHost": {
                    "type": "string",
                    "description": "The hostname to override the Host header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port the SFTP service listens on. (Default: `22`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestCondition": {
                    "type": "string",
                    "description": "Name of already defined `condition` to be checked during the request phase. If the condition passes then this object will be delivered. This `condition` must be of type `REQUEST`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shield": {
                    "type": "string",
                    "description": "Selected POP to serve as a \"shield\" for backends. Valid values for `shield` are included in the [`GET /datacenters`](https://developer.fastly.com/reference/api/utils/datacenter/) API response.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCaCert": {
                    "type": "string",
                    "description": "CA certificate attached to origin.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCertHostname": {
                    "type": "string",
                    "description": "Overrides ssl_hostname, but only for cert verification. Does not affect SNI at all.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCheckCert": {
                    "type": "boolean",
                    "description": "Be strict about checking SSL certs. Default `true`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCiphers": {
                    "type": "string",
                    "description": "Comma separated list of OpenSSL Ciphers to try when negotiating to the backend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientCert": {
                    "type": "string",
                    "description": "Client certificate attached to origin. Used when connecting to the backend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientKey": {
                    "type": "string",
                    "description": "Client key attached to origin. Used when connecting to the backend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslHostname": {
                    "type": "string",
                    "description": "Used for both SNI during the TLS handshake and to validate the cert.\n",
                    "deprecationMessage": "Use ssl_cert_hostname and ssl_sni_hostname instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslSniHostname": {
                    "type": "string",
                    "description": "Overrides ssl_hostname, but only for SNI in the handshake. Does not affect cert validation at all.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Whether or not to use SSL to reach the backend. Default `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "description": "The [portion of traffic](https://docs.fastly.com/en/guides/load-balancing-configuration#how-weight-affects-load-balancing) to send to this Backend. Each Backend receives `weight / total` of the traffic. Default `100`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name"
            ]
        },
        "fastly:index/Servicev1Bigquerylogging:Servicev1Bigquerylogging": {
            "properties": {
                "dataset": {
                    "type": "string",
                    "description": "The Honeycomb Dataset you want to log to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "email": {
                    "type": "string",
                    "description": "The email for the service account with write access to your BigQuery dataset. If not provided, this will be pulled from a `FASTLY_BQ_EMAIL` environment variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of your Google Cloud Platform project.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "Your DigitalOcean Spaces account secret key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "table": {
                    "type": "string",
                    "description": "The ID of your BigQuery table.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "description": "Big query table name suffix template. If set will be interpreted as a strftime compatible string and used as the [Template Suffix for your table](https://cloud.google.com/bigquery/streaming-data-into-bigquery#template-tables).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataset",
                "email",
                "name",
                "projectId",
                "secretKey",
                "table"
            ]
        },
        "fastly:index/Servicev1Blobstoragelogging:Servicev1Blobstoragelogging": {
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "The unique Azure Blob Storage namespace in which your data objects are stored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "container": {
                    "type": "string",
                    "description": "The name of the Azure Blob Storage container in which to store logs.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "What level of GZIP encoding to have when dumping logs (default 0, no compression).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sasToken": {
                    "type": "string",
                    "description": "The Azure shared access signature providing write access to the blob service objects. Be sure to update your token before it expires or the logging functionality will not work.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The strftime specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accountName",
                "container",
                "name",
                "sasToken"
            ]
        },
        "fastly:index/Servicev1CacheSetting:Servicev1CacheSetting": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Allows you to terminate request handling and immediately\nperform an action. When set it can be `lookup` or `pass` (Ignore the cache completely).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cacheCondition": {
                    "type": "string",
                    "description": "Name of already defined `condition` to check after we have retrieved an object. If the condition passes then deliver this Request Object instead. This `condition` must be of type `CACHE`. For detailed information about Conditionals,\nsee [Fastly's Documentation on Conditionals][fastly-conditionals].\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staleTtl": {
                    "type": "integer",
                    "description": "Max \"Time To Live\" for stale (unreachable) objects.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "description": "The Time-To-Live (TTL) for the object.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "fastly:index/Servicev1Condition:Servicev1Condition": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority determines the ordering for multiple snippets. Lower numbers execute first.  Defaults to `100`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statement": {
                    "type": "string",
                    "description": "The statement used to determine if the condition is met.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The location in generated VCL where the snippet should be placed (can be one of `init`, `recv`, `hit`, `miss`, `pass`, `fetch`, `error`, `deliver`, `log` or `none`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "statement",
                "type"
            ]
        },
        "fastly:index/Servicev1Dictionary:Servicev1Dictionary": {
            "properties": {
                "dictionaryId": {
                    "type": "string",
                    "description": "The ID of the dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writeOnly": {
                    "type": "boolean",
                    "description": "If `true`, the dictionary is a private dictionary, and items are not readable in the UI or\nvia API. Default is `false`. It is important to note that changing this attribute will delete and recreate the\ndictionary, discard the current items in the dictionary. Using a write-only/private dictionary should only be done if\nthe items are managed outside of the provider.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dictionaryId",
                        "name"
                    ]
                }
            }
        },
        "fastly:index/Servicev1Director:Servicev1Director": {
            "properties": {
                "backends": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Names of defined backends to map the director to. Example: `[ \"origin1\", \"origin2\" ]`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "capacity": {
                    "type": "integer",
                    "description": "Load balancing weight for the backends. Default `100`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "comment": {
                    "type": "string",
                    "description": "An optional comment about the Director.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "quorum": {
                    "type": "integer",
                    "description": "Percentage of capacity that needs to be up for the director itself to be considered up. Default `75`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retries": {
                    "type": "integer",
                    "description": "How many backends to search if it fails. Default `5`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shield": {
                    "type": "string",
                    "description": "Selected POP to serve as a \"shield\" for backends. Valid values for `shield` are included in the [`GET /datacenters`](https://developer.fastly.com/reference/api/utils/datacenter/) API response.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "integer",
                    "description": "The location in generated VCL where the snippet should be placed (can be one of `init`, `recv`, `hit`, `miss`, `pass`, `fetch`, `error`, `deliver`, `log` or `none`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "backends",
                "name"
            ]
        },
        "fastly:index/Servicev1Domain:Servicev1Domain": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "An optional comment about the Director.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "fastly:index/Servicev1Dynamicsnippet:Servicev1Dynamicsnippet": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority determines the ordering for multiple snippets. Lower numbers execute first.  Defaults to `100`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snippetId": {
                    "type": "string",
                    "description": "The ID of the dynamic snippet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The location in generated VCL where the snippet should be placed (can be one of `init`, `recv`, `hit`, `miss`, `pass`, `fetch`, `error`, `deliver`, `log` or `none`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "snippetId",
                        "type"
                    ]
                }
            }
        },
        "fastly:index/Servicev1Gcslogging:Servicev1Gcslogging": {
            "properties": {
                "bucketName": {
                    "type": "string",
                    "description": "The name of your Cloud Files container.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "email": {
                    "type": "string",
                    "description": "The email for the service account with write access to your BigQuery dataset. If not provided, this will be pulled from a `FASTLY_BQ_EMAIL` environment variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "What level of GZIP encoding to have when dumping logs (default 0, no compression).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "Your DigitalOcean Spaces account secret key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The strftime specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucketName",
                "name"
            ]
        },
        "fastly:index/Servicev1Gzip:Servicev1Gzip": {
            "properties": {
                "cacheCondition": {
                    "type": "string",
                    "description": "Name of already defined `condition` to check after we have retrieved an object. If the condition passes then deliver this Request Object instead. This `condition` must be of type `CACHE`. For detailed information about Conditionals,\nsee [Fastly's Documentation on Conditionals][fastly-conditionals].\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "contentTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The content-type for each type of content you wish to\nhave dynamically gzip'ed. Example: `[\"text/html\", \"text/css\"]`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "File extensions for each file type to dynamically\ngzip. Example: `[\"css\", \"js\"]`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "fastly:index/Servicev1Header:Servicev1Header": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Allows you to terminate request handling and immediately\nperform an action. When set it can be `lookup` or `pass` (Ignore the cache completely).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cacheCondition": {
                    "type": "string",
                    "description": "Name of already defined `condition` to check after we have retrieved an object. If the condition passes then deliver this Request Object instead. This `condition` must be of type `CACHE`. For detailed information about Conditionals,\nsee [Fastly's Documentation on Conditionals][fastly-conditionals].\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destination": {
                    "type": "string",
                    "description": "The name of the header that is going to be affected by the Action.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreIfSet": {
                    "type": "boolean",
                    "description": "Do not add the header if it is already present. (Only applies to the `set` action.). Default `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority determines the ordering for multiple snippets. Lower numbers execute first.  Defaults to `100`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "string",
                    "description": "Regular expression to use (Only applies to the `regex` and `regex_repeat` actions.)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestCondition": {
                    "type": "string",
                    "description": "Name of already defined `condition` to be checked during the request phase. If the condition passes then this object will be delivered. This `condition` must be of type `REQUEST`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "Variable to be used as a source for the header\ncontent. (Does not apply to the `delete` action.)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "substitution": {
                    "type": "string",
                    "description": "Value to substitute in place of regular expression. (Only applies to the `regex` and `regex_repeat` actions.)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The location in generated VCL where the snippet should be placed (can be one of `init`, `recv`, `hit`, `miss`, `pass`, `fetch`, `error`, `deliver`, `log` or `none`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "action",
                "destination",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "action",
                        "destination",
                        "name",
                        "regex",
                        "source",
                        "substitution",
                        "type"
                    ]
                }
            }
        },
        "fastly:index/Servicev1Healthcheck:Servicev1Healthcheck": {
            "properties": {
                "checkInterval": {
                    "type": "integer",
                    "description": "How often to run the Healthcheck in milliseconds. Default `5000`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expectedResponse": {
                    "type": "integer",
                    "description": "The status code expected from the host. Default `200`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "The Host header to send for this Healthcheck.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpVersion": {
                    "type": "string",
                    "description": "Whether to use version 1.0 or 1.1 HTTP. Default `1.1`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "initial": {
                    "type": "integer",
                    "description": "When loading a config, the initial number of probes to be seen as OK. Default `2`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "HTTP method used for request. Can be either `POST` or `PUT`. Default `POST`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "integer",
                    "description": "How many Healthchecks must succeed to be considered healthy. Default `3`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout in milliseconds. Default `500`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "integer",
                    "description": "The number of most recent Healthcheck queries to keep for this Healthcheck. Default `5`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "host",
                "name",
                "path"
            ]
        },
        "fastly:index/Servicev1Httpslogging:Servicev1Httpslogging": {
            "properties": {
                "contentType": {
                    "type": "string",
                    "description": "The MIME type of the content.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headerName": {
                    "type": "string",
                    "description": "Custom header sent with the request.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headerValue": {
                    "type": "string",
                    "description": "Value of the custom header sent with the request.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jsonFormat": {
                    "type": "string",
                    "description": "Formats log entries as JSON. Can be either disabled (`0`), array of json (`1`), or newline delimited json (`2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "HTTP method used for request. Can be either `POST` or `PUT`. Default `POST`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxBytes": {
                    "type": "integer",
                    "description": "The maximum number of bytes sent in one request. Defaults to `0` for unbounded.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxEntries": {
                    "type": "integer",
                    "description": "The maximum number of logs sent in one request. Defaults to `0` for unbounded.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your OpenStack auth url.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "url"
            ]
        },
        "fastly:index/Servicev1Logentry:Servicev1Logentry": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port the SFTP service listens on. (Default: `22`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTls": {
                    "type": "boolean",
                    "description": "Whether to use TLS for secure logging. Can be either true or false.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/Servicev1LoggingCloudfile:Servicev1LoggingCloudfile": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Your Cloud File account access key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of your Cloud Files container.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "What level of GZIP encoding to have when dumping logs (default 0, no compression).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region to stream logs to. One of: DFW (Dallas), ORD (Chicago), IAD (Northern Virginia), LON (London), SYD (Sydney), HKG (Hong Kong).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The strftime specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for your Cloud Files account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bucketName",
                "name",
                "user"
            ]
        },
        "fastly:index/Servicev1LoggingDatadog:Servicev1LoggingDatadog": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region to stream logs to. One of: DFW (Dallas), ORD (Chicago), IAD (Northern Virginia), LON (London), SYD (Sydney), HKG (Hong Kong).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/Servicev1LoggingDigitalocean:Servicev1LoggingDigitalocean": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Your Cloud File account access key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of your Cloud Files container.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the DigitalOcean Spaces endpoint (default \"nyc3.digitaloceanspaces.com\").\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "What level of GZIP encoding to have when dumping logs (default 0, no compression).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "Your DigitalOcean Spaces account secret key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The strftime specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bucketName",
                "name",
                "secretKey"
            ]
        },
        "fastly:index/Servicev1LoggingElasticsearch:Servicev1LoggingElasticsearch": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "The name of the Elasticsearch index to send documents (logs) to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password for the server. If both `password` and `secret_key` are passed, `secret_key` will be preferred.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pipeline": {
                    "type": "string",
                    "description": "The ID of the Elasticsearch ingest pipeline to apply pre-process transformations to before indexing.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxBytes": {
                    "type": "integer",
                    "description": "The maximum number of bytes sent in one request. Defaults to `0` for unbounded.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxEntries": {
                    "type": "integer",
                    "description": "The maximum number of logs sent in one request. Defaults to `0` for unbounded.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your OpenStack auth url.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for your Cloud Files account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index",
                "name",
                "url"
            ]
        },
        "fastly:index/Servicev1LoggingFtp:Servicev1LoggingFtp": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The SFTP address to stream logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "What level of GZIP encoding to have when dumping logs (default 0, no compression).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password for the server. If both `password` and `secret_key` are passed, `secret_key` will be preferred.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port the SFTP service listens on. (Default: `22`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The strftime specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for your Cloud Files account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name",
                "password",
                "path",
                "user"
            ]
        },
        "fastly:index/Servicev1LoggingGooglepubsub:Servicev1LoggingGooglepubsub": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of your Google Cloud Platform project.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "Your DigitalOcean Spaces account secret key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topic": {
                    "type": "string",
                    "description": "The Kafka topic to send logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for your Cloud Files account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "projectId",
                "secretKey",
                "topic",
                "user"
            ]
        },
        "fastly:index/Servicev1LoggingHeroku:Servicev1LoggingHeroku": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your OpenStack auth url.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token",
                "url"
            ]
        },
        "fastly:index/Servicev1LoggingHoneycomb:Servicev1LoggingHoneycomb": {
            "properties": {
                "dataset": {
                    "type": "string",
                    "description": "The Honeycomb Dataset you want to log to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataset",
                "name",
                "token"
            ]
        },
        "fastly:index/Servicev1LoggingKafka:Servicev1LoggingKafka": {
            "properties": {
                "brokers": {
                    "type": "string",
                    "description": "A comma-separated list of IP addresses or hostnames of Kafka brokers.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. One of: gzip, snappy, lz4.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requiredAcks": {
                    "type": "string",
                    "description": "The Number of acknowledgements a leader must receive before a write is considered successful. One of: 1 (default) One server needs to respond. 0 No servers need to respond. -1\tWait for all in-sync replicas to respond.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topic": {
                    "type": "string",
                    "description": "The Kafka topic to send logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTls": {
                    "type": "boolean",
                    "description": "Whether to use TLS for secure logging. Can be either true or false.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "brokers",
                "name",
                "topic"
            ]
        },
        "fastly:index/Servicev1LoggingLoggly:Servicev1LoggingLoggly": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/Servicev1LoggingLogshuttle:Servicev1LoggingLogshuttle": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your OpenStack auth url.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token",
                "url"
            ]
        },
        "fastly:index/Servicev1LoggingNewrelic:Servicev1LoggingNewrelic": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/Servicev1LoggingOpenstack:Servicev1LoggingOpenstack": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Your Cloud File account access key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of your Cloud Files container.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "What level of GZIP encoding to have when dumping logs (default 0, no compression).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The strftime specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your OpenStack auth url.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for your Cloud Files account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bucketName",
                "name",
                "url",
                "user"
            ]
        },
        "fastly:index/Servicev1LoggingScalyr:Servicev1LoggingScalyr": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region to stream logs to. One of: DFW (Dallas), ORD (Chicago), IAD (Northern Virginia), LON (London), SYD (Sydney), HKG (Hong Kong).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/Servicev1LoggingSftp:Servicev1LoggingSftp": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The SFTP address to stream logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "What level of GZIP encoding to have when dumping logs (default 0, no compression).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password for the server. If both `password` and `secret_key` are passed, `secret_key` will be preferred.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port the SFTP service listens on. (Default: `22`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "Your DigitalOcean Spaces account secret key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sshKnownHosts": {
                    "type": "string",
                    "description": "A list of host keys for all hosts we can connect to over SFTP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The strftime specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for your Cloud Files account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name",
                "path",
                "sshKnownHosts",
                "user"
            ]
        },
        "fastly:index/Servicev1Papertrail:Servicev1Papertrail": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The SFTP address to stream logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port the SFTP service listens on. (Default: `22`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name",
                "port"
            ]
        },
        "fastly:index/Servicev1RequestSetting:Servicev1RequestSetting": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Allows you to terminate request handling and immediately\nperform an action. When set it can be `lookup` or `pass` (Ignore the cache completely).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bypassBusyWait": {
                    "type": "boolean",
                    "description": "Disable collapsed forwarding, so you don't wait\nfor other objects to origin.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultHost": {
                    "type": "string",
                    "description": "Sets the host header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forceMiss": {
                    "type": "boolean",
                    "description": "Force a cache miss for the request. If specified,\ncan be `true` or `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forceSsl": {
                    "type": "boolean",
                    "description": "Forces the request to use SSL (Redirects a non-SSL request to SSL).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geoHeaders": {
                    "type": "boolean",
                    "description": "Injects Fastly-Geo-Country, Fastly-Geo-City, and\nFastly-Geo-Region into the request headers.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hashKeys": {
                    "type": "string",
                    "description": "Comma separated list of varnish request object fields\nthat should be in the hash key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStaleAge": {
                    "type": "integer",
                    "description": "How old an object is allowed to be to serve\n`stale-if-error` or `stale-while-revalidate`, in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestCondition": {
                    "type": "string",
                    "description": "Name of already defined `condition` to be checked during the request phase. If the condition passes then this object will be delivered. This `condition` must be of type `REQUEST`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timerSupport": {
                    "type": "boolean",
                    "description": "Injects the X-Timer info into the request for\nviewing origin fetch durations.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "xff": {
                    "type": "string",
                    "description": "X-Forwarded-For, should be `clear`, `leave`, `append`,\n`append_all`, or `overwrite`. Default `append`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "fastly:index/Servicev1ResponseObject:Servicev1ResponseObject": {
            "properties": {
                "cacheCondition": {
                    "type": "string",
                    "description": "Name of already defined `condition` to check after we have retrieved an object. If the condition passes then deliver this Request Object instead. This `condition` must be of type `CACHE`. For detailed information about Conditionals,\nsee [Fastly's Documentation on Conditionals][fastly-conditionals].\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "content": {
                    "type": "string",
                    "description": "The custom VCL code to upload.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "contentType": {
                    "type": "string",
                    "description": "The MIME type of the content.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestCondition": {
                    "type": "string",
                    "description": "Name of already defined `condition` to be checked during the request phase. If the condition passes then this object will be delivered. This `condition` must be of type `REQUEST`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "response": {
                    "type": "string",
                    "description": "The HTTP Response. Default `Ok`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "integer",
                    "description": "The HTTP Status Code. Default `200`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "fastly:index/Servicev1S3logging:Servicev1S3logging": {
            "properties": {
                "bucketName": {
                    "type": "string",
                    "description": "The name of your Cloud Files container.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the DigitalOcean Spaces endpoint (default \"nyc3.digitaloceanspaces.com\").\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "What level of GZIP encoding to have when dumping logs (default 0, no compression).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redundancy": {
                    "type": "string",
                    "description": "The S3 redundancy level. Should be formatted; one of: `standard`, `reduced_redundancy` or null. Default `null`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "s3AccessKey": {
                    "type": "string",
                    "description": "AWS Access Key of an account with the required\npermissions to post logs. It is **strongly** recommended you create a separate\nIAM user with permissions to only operate on this Bucket. This key will be\nnot be encrypted. You can provide this key via an environment variable, `FASTLY_S3_ACCESS_KEY`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "s3SecretKey": {
                    "type": "string",
                    "description": "AWS Secret Key of an account with the required\npermissions to post logs. It is **strongly** recommended you create a separate\nIAM user with permissions to only operate on this Bucket. This secret will be\nnot be encrypted. You can provide this secret via an environment variable, `FASTLY_S3_SECRET_KEY`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverSideEncryption": {
                    "type": "string",
                    "description": "Specify what type of server side encryption should be used. Can be either `AES256` or `aws:kms`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverSideEncryptionKmsKeyId": {
                    "type": "string",
                    "description": "Server-side KMS Key ID. Must be set if `server_side_encryption` is set to `aws:kms`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The strftime specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucketName",
                "name"
            ]
        },
        "fastly:index/Servicev1Snippet:Servicev1Snippet": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The custom VCL code to upload.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority determines the ordering for multiple snippets. Lower numbers execute first.  Defaults to `100`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The location in generated VCL where the snippet should be placed (can be one of `init`, `recv`, `hit`, `miss`, `pass`, `fetch`, `error`, `deliver`, `log` or `none`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content",
                "name",
                "type"
            ]
        },
        "fastly:index/Servicev1Splunk:Servicev1Splunk": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your OpenStack auth url.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token",
                "url"
            ]
        },
        "fastly:index/Servicev1Sumologic:Servicev1Sumologic": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your OpenStack auth url.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "url"
            ]
        },
        "fastly:index/Servicev1Syslog:Servicev1Syslog": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The SFTP address to stream logs to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. One of: classic (default), loggly, logplex or blank.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port the SFTP service listens on. (Default: `22`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTls": {
                    "type": "boolean",
                    "description": "Whether to use TLS for secure logging. Can be either true or false.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name"
            ]
        },
        "fastly:index/Servicev1Vcl:Servicev1Vcl": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The custom VCL code to upload.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "main": {
                    "type": "boolean",
                    "description": "If `true`, use this block as the main configuration. If\n`false`, use this block as an includable library. Only a single VCL block can be\nmarked as the main block. Default is `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content",
                "name"
            ]
        },
        "fastly:index/Servicev1Waf:Servicev1Waf": {
            "properties": {
                "prefetchCondition": {
                    "type": "string",
                    "description": "The `condition` to determine which requests will be run past your Fastly WAF. This `condition` must be of type `PREFETCH`. For detailed information about Conditionals, see [Fastly's Documentation on Conditionals][fastly-conditionals].\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseObject": {
                    "type": "string",
                    "description": "The name of the response object used by the Web Application Firewall.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wafId": {
                    "type": "string",
                    "description": "The ID of the WAF.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "responseObject"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "responseObject",
                        "wafId"
                    ]
                }
            }
        },
        "fastly:index/getWafRulesRule:getWafRulesRule": {
            "properties": {
                "latestRevisionNumber": {
                    "type": "integer",
                    "description": "The rule's latest revision.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modsecRuleId": {
                    "type": "integer",
                    "description": "The rule's modsecurity ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The rule's type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "latestRevisionNumber",
                "modsecRuleId",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the fastly package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "inputProperties": {
            "apiKey": {
                "type": "string",
                "description": "Fastly API Key from https://app.fastly.com/#account\n",
                "defaultInfo": {
                    "environment": [
                        "FASTLY_API_KEY"
                    ]
                }
            },
            "baseUrl": {
                "type": "string",
                "description": "Fastly API URL\n",
                "default": "https://api.fastly.com",
                "defaultInfo": {
                    "environment": [
                        "FASTLY_API_URL"
                    ]
                }
            }
        }
    },
    "resources": {
        "fastly:index/serviceACLEntriesv1:ServiceACLEntriesv1": {
            "description": "\n\n\n## Import\n\nThis is an example of the import command being applied to the resource named `fastly_service_acl_entries_v1.entries` The resource ID is a combined value of the `service_id` and `acl_id` separated by a forward slash.\n\n```sh\n $ pulumi import fastly:index/serviceACLEntriesv1:ServiceACLEntriesv1 entries xxxxxxxxxxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxx\n```\n\n If Terraform is already managing remote acl entries against a resource being imported then the user will be asked to remove it from the existing Terraform state.\n\n The following is an example of the Terraform state command to remove the resource named `fastly_service_acl_entries_v1.entries` from the Terraform state file. $ terraform state rm fastly_service_acl_entries_v1.entries ",
            "properties": {
                "aclId": {
                    "type": "string",
                    "description": "The ID of the ACL that the items belong to\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceACLEntriesv1Entry:ServiceACLEntriesv1Entry"
                    },
                    "description": "A Set ACL entries that are applied to the service. Defined below\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the Service that the ACL belongs to\n"
                }
            },
            "required": [
                "aclId",
                "serviceId"
            ],
            "inputProperties": {
                "aclId": {
                    "type": "string",
                    "description": "The ID of the ACL that the items belong to\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceACLEntriesv1Entry:ServiceACLEntriesv1Entry"
                    },
                    "description": "A Set ACL entries that are applied to the service. Defined below\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the Service that the ACL belongs to\n"
                }
            },
            "requiredInputs": [
                "aclId",
                "serviceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceACLEntriesv1 resources.\n",
                "properties": {
                    "aclId": {
                        "type": "string",
                        "description": "The ID of the ACL that the items belong to\n"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceACLEntriesv1Entry:ServiceACLEntriesv1Entry"
                        },
                        "description": "A Set ACL entries that are applied to the service. Defined below\n"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "The ID of the Service that the ACL belongs to\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/serviceCompute:ServiceCompute": {
            "description": "Provides a Fastly Compute@Edge service. Compute@Edge is a computation platform capable of running custom binaries that you compile on your own systems and upload to Fastly. Security and portability is provided by compiling your code to [WebAssembly](https://webassembly.org/), which is ran at the edge using [Lucet](https://github.com/bytecodealliance/lucet), an open-source WebAssembly runtime created by Fastly. A compute service encompasses Domains and Backends.\n\nThe Service resource requires a domain name that is correctly set up to direct\ntraffic to the Fastly service. See Fastly's guide on [Adding CNAME Records][fastly-cname]\non their documentation site for guidance.\n\n\n## Import\n\nFastly Service can be imported using their service ID, e.g.\n\n```sh\n $ pulumi import fastly:index/serviceCompute:ServiceCompute demo xxxxxxxxxxxxxxxxxxxx\n```\n\n ",
            "properties": {
                "activate": {
                    "type": "boolean",
                    "description": "Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to false. Default true.\n"
                },
                "activeVersion": {
                    "type": "integer",
                    "description": "The currently active version of your Fastly Service.\n"
                },
                "backends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeBackend:ServiceComputeBackend"
                    },
                    "description": "A set of Backends to service requests from your Domains.\nDefined below. Backends must be defined in this argument, or defined in the\n`vcl` argument below\n"
                },
                "bigqueryloggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeBigquerylogging:ServiceComputeBigquerylogging"
                    },
                    "description": "A BigQuery endpoint to send streaming logs too.\nDefined below.\n"
                },
                "blobstorageloggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeBlobstoragelogging:ServiceComputeBlobstoragelogging"
                    },
                    "description": "An Azure Blob Storage endpoint to send streaming logs too.\nDefined below.\n"
                },
                "clonedVersion": {
                    "type": "integer"
                },
                "comment": {
                    "type": "string",
                    "description": "An optional comment about the Domain.\n"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeDomain:ServiceComputeDomain"
                    },
                    "description": "The domain of the DigitalOcean Spaces endpoint (default \"nyc3.digitaloceanspaces.com\").\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Services that are active cannot be destroyed. In\norder to destroy the Service, set `force_destroy` to `true`. Default `false`.\n"
                },
                "gcsloggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeGcslogging:ServiceComputeGcslogging"
                    },
                    "description": "A gcs endpoint to send streaming logs too.\nDefined below.\n"
                },
                "healthchecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeHealthcheck:ServiceComputeHealthcheck"
                    },
                    "description": "Name of a defined `healthcheck` to assign to this backend.\n"
                },
                "httpsloggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeHttpslogging:ServiceComputeHttpslogging"
                    },
                    "description": "An HTTPS endpoint to send streaming logs to.\nDefined below.\n"
                },
                "logentries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLogentry:ServiceComputeLogentry"
                    },
                    "description": "A logentries endpoint to send streaming logs too.\nDefined below.\n"
                },
                "loggingCloudfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingCloudfile:ServiceComputeLoggingCloudfile"
                    },
                    "description": "A Rackspace Cloud Files endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingDatadogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingDatadog:ServiceComputeLoggingDatadog"
                    },
                    "description": "A Datadog endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingDigitaloceans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingDigitalocean:ServiceComputeLoggingDigitalocean"
                    },
                    "description": "A DigitalOcean Spaces endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingElasticsearches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingElasticsearch:ServiceComputeLoggingElasticsearch"
                    },
                    "description": "An Elasticsearch endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingFtps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingFtp:ServiceComputeLoggingFtp"
                    },
                    "description": "An FTP endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingGooglepubsubs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingGooglepubsub:ServiceComputeLoggingGooglepubsub"
                    },
                    "description": "A Google Cloud Pub/Sub endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingHeroku": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingHeroku:ServiceComputeLoggingHeroku"
                    },
                    "description": "A Heroku endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingHoneycombs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingHoneycomb:ServiceComputeLoggingHoneycomb"
                    },
                    "description": "A Honeycomb endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingKafkas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingKafka:ServiceComputeLoggingKafka"
                    },
                    "description": "A Kafka endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingLogglies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingLoggly:ServiceComputeLoggingLoggly"
                    },
                    "description": "A Loggly endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingLogshuttles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingLogshuttle:ServiceComputeLoggingLogshuttle"
                    },
                    "description": "A Log Shuttle endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingNewrelics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingNewrelic:ServiceComputeLoggingNewrelic"
                    },
                    "description": "A New Relic endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingOpenstacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingOpenstack:ServiceComputeLoggingOpenstack"
                    },
                    "description": "An OpenStack endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingScalyrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingScalyr:ServiceComputeLoggingScalyr"
                    },
                    "description": "A Scalyr endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingSftps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingSftp:ServiceComputeLoggingSftp"
                    },
                    "description": "An SFTP endpoint to send streaming logs to.\nDefined below.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n"
                },
                "package": {
                    "$ref": "#/types/fastly:index/ServiceComputePackage:ServiceComputePackage",
                    "description": "A Wasm deployment package to upload.\nDefined below.\n"
                },
                "papertrails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputePapertrail:ServiceComputePapertrail"
                    },
                    "description": "A Papertrail endpoint to send streaming logs too.\nDefined below.\n"
                },
                "s3loggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeS3logging:ServiceComputeS3logging"
                    },
                    "description": "A set of S3 Buckets to send streaming logs too.\nDefined below.\n"
                },
                "splunks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeSplunk:ServiceComputeSplunk"
                    },
                    "description": "A Splunk endpoint to send streaming logs too.\nDefined below.\n"
                },
                "sumologics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeSumologic:ServiceComputeSumologic"
                    },
                    "description": "A Sumologic endpoint to send streaming logs too.\nDefined below.\n"
                },
                "syslogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeSyslog:ServiceComputeSyslog"
                    },
                    "description": "A syslog endpoint to send streaming logs too.\nDefined below.\n"
                },
                "versionComment": {
                    "type": "string",
                    "description": "Description field for the version.\n"
                }
            },
            "required": [
                "activeVersion",
                "clonedVersion",
                "domains",
                "name",
                "package"
            ],
            "inputProperties": {
                "activate": {
                    "type": "boolean",
                    "description": "Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to false. Default true.\n"
                },
                "backends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeBackend:ServiceComputeBackend"
                    },
                    "description": "A set of Backends to service requests from your Domains.\nDefined below. Backends must be defined in this argument, or defined in the\n`vcl` argument below\n"
                },
                "bigqueryloggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeBigquerylogging:ServiceComputeBigquerylogging"
                    },
                    "description": "A BigQuery endpoint to send streaming logs too.\nDefined below.\n"
                },
                "blobstorageloggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeBlobstoragelogging:ServiceComputeBlobstoragelogging"
                    },
                    "description": "An Azure Blob Storage endpoint to send streaming logs too.\nDefined below.\n"
                },
                "comment": {
                    "type": "string",
                    "description": "An optional comment about the Domain.\n"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeDomain:ServiceComputeDomain"
                    },
                    "description": "The domain of the DigitalOcean Spaces endpoint (default \"nyc3.digitaloceanspaces.com\").\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Services that are active cannot be destroyed. In\norder to destroy the Service, set `force_destroy` to `true`. Default `false`.\n"
                },
                "gcsloggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeGcslogging:ServiceComputeGcslogging"
                    },
                    "description": "A gcs endpoint to send streaming logs too.\nDefined below.\n"
                },
                "healthchecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeHealthcheck:ServiceComputeHealthcheck"
                    },
                    "description": "Name of a defined `healthcheck` to assign to this backend.\n"
                },
                "httpsloggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeHttpslogging:ServiceComputeHttpslogging"
                    },
                    "description": "An HTTPS endpoint to send streaming logs to.\nDefined below.\n"
                },
                "logentries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLogentry:ServiceComputeLogentry"
                    },
                    "description": "A logentries endpoint to send streaming logs too.\nDefined below.\n"
                },
                "loggingCloudfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingCloudfile:ServiceComputeLoggingCloudfile"
                    },
                    "description": "A Rackspace Cloud Files endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingDatadogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingDatadog:ServiceComputeLoggingDatadog"
                    },
                    "description": "A Datadog endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingDigitaloceans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingDigitalocean:ServiceComputeLoggingDigitalocean"
                    },
                    "description": "A DigitalOcean Spaces endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingElasticsearches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingElasticsearch:ServiceComputeLoggingElasticsearch"
                    },
                    "description": "An Elasticsearch endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingFtps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingFtp:ServiceComputeLoggingFtp"
                    },
                    "description": "An FTP endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingGooglepubsubs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingGooglepubsub:ServiceComputeLoggingGooglepubsub"
                    },
                    "description": "A Google Cloud Pub/Sub endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingHeroku": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingHeroku:ServiceComputeLoggingHeroku"
                    },
                    "description": "A Heroku endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingHoneycombs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingHoneycomb:ServiceComputeLoggingHoneycomb"
                    },
                    "description": "A Honeycomb endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingKafkas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingKafka:ServiceComputeLoggingKafka"
                    },
                    "description": "A Kafka endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingLogglies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingLoggly:ServiceComputeLoggingLoggly"
                    },
                    "description": "A Loggly endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingLogshuttles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingLogshuttle:ServiceComputeLoggingLogshuttle"
                    },
                    "description": "A Log Shuttle endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingNewrelics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingNewrelic:ServiceComputeLoggingNewrelic"
                    },
                    "description": "A New Relic endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingOpenstacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingOpenstack:ServiceComputeLoggingOpenstack"
                    },
                    "description": "An OpenStack endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingScalyrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingScalyr:ServiceComputeLoggingScalyr"
                    },
                    "description": "A Scalyr endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingSftps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingSftp:ServiceComputeLoggingSftp"
                    },
                    "description": "An SFTP endpoint to send streaming logs to.\nDefined below.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n"
                },
                "package": {
                    "$ref": "#/types/fastly:index/ServiceComputePackage:ServiceComputePackage",
                    "description": "A Wasm deployment package to upload.\nDefined below.\n"
                },
                "papertrails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputePapertrail:ServiceComputePapertrail"
                    },
                    "description": "A Papertrail endpoint to send streaming logs too.\nDefined below.\n"
                },
                "s3loggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeS3logging:ServiceComputeS3logging"
                    },
                    "description": "A set of S3 Buckets to send streaming logs too.\nDefined below.\n"
                },
                "splunks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeSplunk:ServiceComputeSplunk"
                    },
                    "description": "A Splunk endpoint to send streaming logs too.\nDefined below.\n"
                },
                "sumologics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeSumologic:ServiceComputeSumologic"
                    },
                    "description": "A Sumologic endpoint to send streaming logs too.\nDefined below.\n"
                },
                "syslogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeSyslog:ServiceComputeSyslog"
                    },
                    "description": "A syslog endpoint to send streaming logs too.\nDefined below.\n"
                },
                "versionComment": {
                    "type": "string",
                    "description": "Description field for the version.\n"
                }
            },
            "requiredInputs": [
                "domains",
                "package"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceCompute resources.\n",
                "properties": {
                    "activate": {
                        "type": "boolean",
                        "description": "Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to false. Default true.\n"
                    },
                    "activeVersion": {
                        "type": "integer",
                        "description": "The currently active version of your Fastly Service.\n"
                    },
                    "backends": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeBackend:ServiceComputeBackend"
                        },
                        "description": "A set of Backends to service requests from your Domains.\nDefined below. Backends must be defined in this argument, or defined in the\n`vcl` argument below\n"
                    },
                    "bigqueryloggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeBigquerylogging:ServiceComputeBigquerylogging"
                        },
                        "description": "A BigQuery endpoint to send streaming logs too.\nDefined below.\n"
                    },
                    "blobstorageloggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeBlobstoragelogging:ServiceComputeBlobstoragelogging"
                        },
                        "description": "An Azure Blob Storage endpoint to send streaming logs too.\nDefined below.\n"
                    },
                    "clonedVersion": {
                        "type": "integer"
                    },
                    "comment": {
                        "type": "string",
                        "description": "An optional comment about the Domain.\n"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeDomain:ServiceComputeDomain"
                        },
                        "description": "The domain of the DigitalOcean Spaces endpoint (default \"nyc3.digitaloceanspaces.com\").\n"
                    },
                    "forceDestroy": {
                        "type": "boolean",
                        "description": "Services that are active cannot be destroyed. In\norder to destroy the Service, set `force_destroy` to `true`. Default `false`.\n"
                    },
                    "gcsloggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeGcslogging:ServiceComputeGcslogging"
                        },
                        "description": "A gcs endpoint to send streaming logs too.\nDefined below.\n"
                    },
                    "healthchecks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeHealthcheck:ServiceComputeHealthcheck"
                        },
                        "description": "Name of a defined `healthcheck` to assign to this backend.\n"
                    },
                    "httpsloggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeHttpslogging:ServiceComputeHttpslogging"
                        },
                        "description": "An HTTPS endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "logentries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLogentry:ServiceComputeLogentry"
                        },
                        "description": "A logentries endpoint to send streaming logs too.\nDefined below.\n"
                    },
                    "loggingCloudfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingCloudfile:ServiceComputeLoggingCloudfile"
                        },
                        "description": "A Rackspace Cloud Files endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingDatadogs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingDatadog:ServiceComputeLoggingDatadog"
                        },
                        "description": "A Datadog endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingDigitaloceans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingDigitalocean:ServiceComputeLoggingDigitalocean"
                        },
                        "description": "A DigitalOcean Spaces endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingElasticsearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingElasticsearch:ServiceComputeLoggingElasticsearch"
                        },
                        "description": "An Elasticsearch endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingFtps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingFtp:ServiceComputeLoggingFtp"
                        },
                        "description": "An FTP endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingGooglepubsubs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingGooglepubsub:ServiceComputeLoggingGooglepubsub"
                        },
                        "description": "A Google Cloud Pub/Sub endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingHeroku": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingHeroku:ServiceComputeLoggingHeroku"
                        },
                        "description": "A Heroku endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingHoneycombs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingHoneycomb:ServiceComputeLoggingHoneycomb"
                        },
                        "description": "A Honeycomb endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingKafkas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingKafka:ServiceComputeLoggingKafka"
                        },
                        "description": "A Kafka endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingLogglies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingLoggly:ServiceComputeLoggingLoggly"
                        },
                        "description": "A Loggly endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingLogshuttles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingLogshuttle:ServiceComputeLoggingLogshuttle"
                        },
                        "description": "A Log Shuttle endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingNewrelics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingNewrelic:ServiceComputeLoggingNewrelic"
                        },
                        "description": "A New Relic endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingOpenstacks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingOpenstack:ServiceComputeLoggingOpenstack"
                        },
                        "description": "An OpenStack endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingScalyrs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingScalyr:ServiceComputeLoggingScalyr"
                        },
                        "description": "A Scalyr endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingSftps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingSftp:ServiceComputeLoggingSftp"
                        },
                        "description": "An SFTP endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name of the Rackspace Cloud Files logging endpoint.\n"
                    },
                    "package": {
                        "$ref": "#/types/fastly:index/ServiceComputePackage:ServiceComputePackage",
                        "description": "A Wasm deployment package to upload.\nDefined below.\n"
                    },
                    "papertrails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputePapertrail:ServiceComputePapertrail"
                        },
                        "description": "A Papertrail endpoint to send streaming logs too.\nDefined below.\n"
                    },
                    "s3loggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeS3logging:ServiceComputeS3logging"
                        },
                        "description": "A set of S3 Buckets to send streaming logs too.\nDefined below.\n"
                    },
                    "splunks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeSplunk:ServiceComputeSplunk"
                        },
                        "description": "A Splunk endpoint to send streaming logs too.\nDefined below.\n"
                    },
                    "sumologics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeSumologic:ServiceComputeSumologic"
                        },
                        "description": "A Sumologic endpoint to send streaming logs too.\nDefined below.\n"
                    },
                    "syslogs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeSyslog:ServiceComputeSyslog"
                        },
                        "description": "A syslog endpoint to send streaming logs too.\nDefined below.\n"
                    },
                    "versionComment": {
                        "type": "string",
                        "description": "Description field for the version.\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/serviceDictionaryItemsv1:ServiceDictionaryItemsv1": {
            "description": "\n\n\n## Import\n\nThis is an example of the import command being applied to the resource named `fastly_service_dictionary_items_v1.items` The resource ID is a combined value of the `service_id` and `dictionary_id` separated by a forward slash.\n\n```sh\n $ pulumi import fastly:index/serviceDictionaryItemsv1:ServiceDictionaryItemsv1 items xxxxxxxxxxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxx\n```\n\n If Terraform is already managing remote dictionary items against a resource being imported then the user will be asked to remove it from the existing Terraform state.\n\n The following is an example of the Terraform state command to remove the resource named `fastly_service_dictionary_items_v1.items` from the Terraform state file. $ terraform state rm fastly_service_dictionary_items_v1.items ",
            "properties": {
                "dictionaryId": {
                    "type": "string",
                    "description": "The ID of the dictionary that the items belong to\n"
                },
                "items": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "A map representing an entry in the dictionary, (key/value)\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the service that the dictionary belongs to\n"
                }
            },
            "required": [
                "dictionaryId",
                "serviceId"
            ],
            "inputProperties": {
                "dictionaryId": {
                    "type": "string",
                    "description": "The ID of the dictionary that the items belong to\n"
                },
                "items": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "A map representing an entry in the dictionary, (key/value)\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the service that the dictionary belongs to\n"
                }
            },
            "requiredInputs": [
                "dictionaryId",
                "serviceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceDictionaryItemsv1 resources.\n",
                "properties": {
                    "dictionaryId": {
                        "type": "string",
                        "description": "The ID of the dictionary that the items belong to\n"
                    },
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "A map representing an entry in the dictionary, (key/value)\n"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "The ID of the service that the dictionary belongs to\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/serviceDynamicSnippetContentv1:ServiceDynamicSnippetContentv1": {
            "description": "\n\n\n## Import\n\nThis is an example of the import command being applied to the resource named `fastly_service_dynamic_snippet_content_v1.content` The resource ID is a combined value of the `service_id` and `snippet_id` separated by a forward slash.\n\n```sh\n $ pulumi import fastly:index/serviceDynamicSnippetContentv1:ServiceDynamicSnippetContentv1 content xxxxxxxxxxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxx\n```\n\n If Terraform is already managing remote content against a resource being imported then the user will be asked to remove it from the existing Terraform state. The following is an example of the Terraform state command to remove the resource named `fastly_service_dynamic_snippet_content_v1.content` from the Terraform state file. $ terraform state rm fastly_service_dynamic_snippet_content_v1.content ",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The VCL code that specifies exactly what the snippet does.\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the service that the dynamic snippet belongs to\n"
                },
                "snippetId": {
                    "type": "string",
                    "description": "The ID of the dynamic snippet that the content belong to\n"
                }
            },
            "required": [
                "content",
                "serviceId",
                "snippetId"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "The VCL code that specifies exactly what the snippet does.\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the service that the dynamic snippet belongs to\n"
                },
                "snippetId": {
                    "type": "string",
                    "description": "The ID of the dynamic snippet that the content belong to\n"
                }
            },
            "requiredInputs": [
                "content",
                "serviceId",
                "snippetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceDynamicSnippetContentv1 resources.\n",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "The VCL code that specifies exactly what the snippet does.\n"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "The ID of the service that the dynamic snippet belongs to\n"
                    },
                    "snippetId": {
                        "type": "string",
                        "description": "The ID of the dynamic snippet that the content belong to\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/serviceWafConfiguration:ServiceWafConfiguration": {
            "description": "\n\n\n## Import\n\nThis is an example of the import command being applied to the resource named `fastly_service_waf_configuration.waf` The resource ID should be the WAF ID.\n\n```sh\n $ pulumi import fastly:index/serviceWafConfiguration:ServiceWafConfiguration waf xxxxxxxxxxxxxxxxxxxx\n```\n\n If Terraform is already managing a remote WAF configurations against a resource being imported then the user will be asked to remove it from the existing Terraform state. The following is an example of the Terraform state command to remove the resource named `fastly_service_waf_configuration.waf` from the Terraform state file. $ terraform state rm fastly_service_waf_configuration.waf ",
            "properties": {
                "allowedHttpVersions": {
                    "type": "string",
                    "description": "Allowed HTTP versions.\n"
                },
                "allowedMethods": {
                    "type": "string",
                    "description": "A space-separated list of HTTP method names.\n"
                },
                "allowedRequestContentType": {
                    "type": "string",
                    "description": "Allowed request content types.\n"
                },
                "allowedRequestContentTypeCharset": {
                    "type": "string",
                    "description": "Allowed request content type charset.\n"
                },
                "argLength": {
                    "type": "integer",
                    "description": "The maximum number of arguments allowed.\n"
                },
                "argNameLength": {
                    "type": "integer",
                    "description": "The maximum allowed argument name length.\n"
                },
                "combinedFileSizes": {
                    "type": "integer",
                    "description": "The maximum allowed size of all files.\n"
                },
                "criticalAnomalyScore": {
                    "type": "integer",
                    "description": "Score value to add for critical anomalies.\n"
                },
                "crsValidateUtf8Encoding": {
                    "type": "boolean",
                    "description": "CRS validate UTF8 encoding.\n"
                },
                "errorAnomalyScore": {
                    "type": "integer",
                    "description": "Score value to add for error anomalies.\n"
                },
                "highRiskCountryCodes": {
                    "type": "string",
                    "description": "A space-separated list of country codes in ISO 3166-1 (two-letter) format.\n"
                },
                "httpViolationScoreThreshold": {
                    "type": "integer",
                    "description": "HTTP violation threshold.\n"
                },
                "inboundAnomalyScoreThreshold": {
                    "type": "integer",
                    "description": "Inbound anomaly threshold.\n"
                },
                "lfiScoreThreshold": {
                    "type": "integer",
                    "description": "Local file inclusion attack threshold.\n"
                },
                "maxFileSize": {
                    "type": "integer",
                    "description": "The maximum allowed file size, in bytes.\n"
                },
                "maxNumArgs": {
                    "type": "integer",
                    "description": "The maximum number of arguments allowed.\n"
                },
                "noticeAnomalyScore": {
                    "type": "integer",
                    "description": "Score value to add for notice anomalies.\n"
                },
                "paranoiaLevel": {
                    "type": "integer",
                    "description": "The configured paranoia level.\n"
                },
                "phpInjectionScoreThreshold": {
                    "type": "integer",
                    "description": "PHP injection threshold.\n"
                },
                "rceScoreThreshold": {
                    "type": "integer",
                    "description": "Remote code execution threshold.\n"
                },
                "restrictedExtensions": {
                    "type": "string",
                    "description": "A space-separated list of allowed file extensions.\n"
                },
                "restrictedHeaders": {
                    "type": "string",
                    "description": "A space-separated list of allowed header names.\n"
                },
                "rfiScoreThreshold": {
                    "type": "integer",
                    "description": "Remote file inclusion attack threshold.\n"
                },
                "ruleExclusions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceWafConfigurationRuleExclusion:ServiceWafConfigurationRuleExclusion"
                    },
                    "description": "The Web Application Firewall's rule exclusions. Defined below\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceWafConfigurationRule:ServiceWafConfigurationRule"
                    },
                    "description": "The Web Application Firewall's active rules. Defined below\n"
                },
                "sessionFixationScoreThreshold": {
                    "type": "integer",
                    "description": "Session fixation attack threshold.\n"
                },
                "sqlInjectionScoreThreshold": {
                    "type": "integer",
                    "description": "SQL injection attack threshold.\n"
                },
                "totalArgLength": {
                    "type": "integer",
                    "description": "The maximum size of argument names and values.\n"
                },
                "wafId": {
                    "type": "string",
                    "description": "The ID of the Web Application Firewall that the configuration belongs to.\n"
                },
                "warningAnomalyScore": {
                    "type": "integer",
                    "description": "Score value to add for warning anomalies.\n"
                },
                "xssScoreThreshold": {
                    "type": "integer",
                    "description": "XSS attack threshold.\n"
                }
            },
            "required": [
                "allowedHttpVersions",
                "allowedMethods",
                "allowedRequestContentType",
                "allowedRequestContentTypeCharset",
                "argLength",
                "argNameLength",
                "combinedFileSizes",
                "criticalAnomalyScore",
                "crsValidateUtf8Encoding",
                "errorAnomalyScore",
                "highRiskCountryCodes",
                "httpViolationScoreThreshold",
                "inboundAnomalyScoreThreshold",
                "lfiScoreThreshold",
                "maxFileSize",
                "maxNumArgs",
                "noticeAnomalyScore",
                "paranoiaLevel",
                "phpInjectionScoreThreshold",
                "rceScoreThreshold",
                "restrictedExtensions",
                "restrictedHeaders",
                "rfiScoreThreshold",
                "sessionFixationScoreThreshold",
                "sqlInjectionScoreThreshold",
                "totalArgLength",
                "wafId",
                "warningAnomalyScore",
                "xssScoreThreshold"
            ],
            "inputProperties": {
                "allowedHttpVersions": {
                    "type": "string",
                    "description": "Allowed HTTP versions.\n"
                },
                "allowedMethods": {
                    "type": "string",
                    "description": "A space-separated list of HTTP method names.\n"
                },
                "allowedRequestContentType": {
                    "type": "string",
                    "description": "Allowed request content types.\n"
                },
                "allowedRequestContentTypeCharset": {
                    "type": "string",
                    "description": "Allowed request content type charset.\n"
                },
                "argLength": {
                    "type": "integer",
                    "description": "The maximum number of arguments allowed.\n"
                },
                "argNameLength": {
                    "type": "integer",
                    "description": "The maximum allowed argument name length.\n"
                },
                "combinedFileSizes": {
                    "type": "integer",
                    "description": "The maximum allowed size of all files.\n"
                },
                "criticalAnomalyScore": {
                    "type": "integer",
                    "description": "Score value to add for critical anomalies.\n"
                },
                "crsValidateUtf8Encoding": {
                    "type": "boolean",
                    "description": "CRS validate UTF8 encoding.\n"
                },
                "errorAnomalyScore": {
                    "type": "integer",
                    "description": "Score value to add for error anomalies.\n"
                },
                "highRiskCountryCodes": {
                    "type": "string",
                    "description": "A space-separated list of country codes in ISO 3166-1 (two-letter) format.\n"
                },
                "httpViolationScoreThreshold": {
                    "type": "integer",
                    "description": "HTTP violation threshold.\n"
                },
                "inboundAnomalyScoreThreshold": {
                    "type": "integer",
                    "description": "Inbound anomaly threshold.\n"
                },
                "lfiScoreThreshold": {
                    "type": "integer",
                    "description": "Local file inclusion attack threshold.\n"
                },
                "maxFileSize": {
                    "type": "integer",
                    "description": "The maximum allowed file size, in bytes.\n"
                },
                "maxNumArgs": {
                    "type": "integer",
                    "description": "The maximum number of arguments allowed.\n"
                },
                "noticeAnomalyScore": {
                    "type": "integer",
                    "description": "Score value to add for notice anomalies.\n"
                },
                "paranoiaLevel": {
                    "type": "integer",
                    "description": "The configured paranoia level.\n"
                },
                "phpInjectionScoreThreshold": {
                    "type": "integer",
                    "description": "PHP injection threshold.\n"
                },
                "rceScoreThreshold": {
                    "type": "integer",
                    "description": "Remote code execution threshold.\n"
                },
                "restrictedExtensions": {
                    "type": "string",
                    "description": "A space-separated list of allowed file extensions.\n"
                },
                "restrictedHeaders": {
                    "type": "string",
                    "description": "A space-separated list of allowed header names.\n"
                },
                "rfiScoreThreshold": {
                    "type": "integer",
                    "description": "Remote file inclusion attack threshold.\n"
                },
                "ruleExclusions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceWafConfigurationRuleExclusion:ServiceWafConfigurationRuleExclusion"
                    },
                    "description": "The Web Application Firewall's rule exclusions. Defined below\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceWafConfigurationRule:ServiceWafConfigurationRule"
                    },
                    "description": "The Web Application Firewall's active rules. Defined below\n"
                },
                "sessionFixationScoreThreshold": {
                    "type": "integer",
                    "description": "Session fixation attack threshold.\n"
                },
                "sqlInjectionScoreThreshold": {
                    "type": "integer",
                    "description": "SQL injection attack threshold.\n"
                },
                "totalArgLength": {
                    "type": "integer",
                    "description": "The maximum size of argument names and values.\n"
                },
                "wafId": {
                    "type": "string",
                    "description": "The ID of the Web Application Firewall that the configuration belongs to.\n"
                },
                "warningAnomalyScore": {
                    "type": "integer",
                    "description": "Score value to add for warning anomalies.\n"
                },
                "xssScoreThreshold": {
                    "type": "integer",
                    "description": "XSS attack threshold.\n"
                }
            },
            "requiredInputs": [
                "wafId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceWafConfiguration resources.\n",
                "properties": {
                    "allowedHttpVersions": {
                        "type": "string",
                        "description": "Allowed HTTP versions.\n"
                    },
                    "allowedMethods": {
                        "type": "string",
                        "description": "A space-separated list of HTTP method names.\n"
                    },
                    "allowedRequestContentType": {
                        "type": "string",
                        "description": "Allowed request content types.\n"
                    },
                    "allowedRequestContentTypeCharset": {
                        "type": "string",
                        "description": "Allowed request content type charset.\n"
                    },
                    "argLength": {
                        "type": "integer",
                        "description": "The maximum number of arguments allowed.\n"
                    },
                    "argNameLength": {
                        "type": "integer",
                        "description": "The maximum allowed argument name length.\n"
                    },
                    "combinedFileSizes": {
                        "type": "integer",
                        "description": "The maximum allowed size of all files.\n"
                    },
                    "criticalAnomalyScore": {
                        "type": "integer",
                        "description": "Score value to add for critical anomalies.\n"
                    },
                    "crsValidateUtf8Encoding": {
                        "type": "boolean",
                        "description": "CRS validate UTF8 encoding.\n"
                    },
                    "errorAnomalyScore": {
                        "type": "integer",
                        "description": "Score value to add for error anomalies.\n"
                    },
                    "highRiskCountryCodes": {
                        "type": "string",
                        "description": "A space-separated list of country codes in ISO 3166-1 (two-letter) format.\n"
                    },
                    "httpViolationScoreThreshold": {
                        "type": "integer",
                        "description": "HTTP violation threshold.\n"
                    },
                    "inboundAnomalyScoreThreshold": {
                        "type": "integer",
                        "description": "Inbound anomaly threshold.\n"
                    },
                    "lfiScoreThreshold": {
                        "type": "integer",
                        "description": "Local file inclusion attack threshold.\n"
                    },
                    "maxFileSize": {
                        "type": "integer",
                        "description": "The maximum allowed file size, in bytes.\n"
                    },
                    "maxNumArgs": {
                        "type": "integer",
                        "description": "The maximum number of arguments allowed.\n"
                    },
                    "noticeAnomalyScore": {
                        "type": "integer",
                        "description": "Score value to add for notice anomalies.\n"
                    },
                    "paranoiaLevel": {
                        "type": "integer",
                        "description": "The configured paranoia level.\n"
                    },
                    "phpInjectionScoreThreshold": {
                        "type": "integer",
                        "description": "PHP injection threshold.\n"
                    },
                    "rceScoreThreshold": {
                        "type": "integer",
                        "description": "Remote code execution threshold.\n"
                    },
                    "restrictedExtensions": {
                        "type": "string",
                        "description": "A space-separated list of allowed file extensions.\n"
                    },
                    "restrictedHeaders": {
                        "type": "string",
                        "description": "A space-separated list of allowed header names.\n"
                    },
                    "rfiScoreThreshold": {
                        "type": "integer",
                        "description": "Remote file inclusion attack threshold.\n"
                    },
                    "ruleExclusions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceWafConfigurationRuleExclusion:ServiceWafConfigurationRuleExclusion"
                        },
                        "description": "The Web Application Firewall's rule exclusions. Defined below\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceWafConfigurationRule:ServiceWafConfigurationRule"
                        },
                        "description": "The Web Application Firewall's active rules. Defined below\n"
                    },
                    "sessionFixationScoreThreshold": {
                        "type": "integer",
                        "description": "Session fixation attack threshold.\n"
                    },
                    "sqlInjectionScoreThreshold": {
                        "type": "integer",
                        "description": "SQL injection attack threshold.\n"
                    },
                    "totalArgLength": {
                        "type": "integer",
                        "description": "The maximum size of argument names and values.\n"
                    },
                    "wafId": {
                        "type": "string",
                        "description": "The ID of the Web Application Firewall that the configuration belongs to.\n"
                    },
                    "warningAnomalyScore": {
                        "type": "integer",
                        "description": "Score value to add for warning anomalies.\n"
                    },
                    "xssScoreThreshold": {
                        "type": "integer",
                        "description": "XSS attack threshold.\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/servicev1:Servicev1": {
            "description": "\n\n\n## Import\n\nFastly Service can be imported using their service ID, e.g.\n\n```sh\n $ pulumi import fastly:index/servicev1:Servicev1 demo xxxxxxxxxxxxxxxxxxxx\n```\n\n ",
            "properties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Acl:Servicev1Acl"
                    },
                    "description": "A set of ACL configuration blocks.\nDefined below.\n"
                },
                "activate": {
                    "type": "boolean",
                    "description": "Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to false. Default true.\n"
                },
                "activeVersion": {
                    "type": "integer",
                    "description": "The currently active version of your Fastly Service.\n"
                },
                "backends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Backend:Servicev1Backend"
                    },
                    "description": "A set of Backends to service requests from your Domains.\nDefined below. Backends must be defined in this argument, or defined in the\n`vcl` argument below\n"
                },
                "bigqueryloggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Bigquerylogging:Servicev1Bigquerylogging"
                    },
                    "description": "A BigQuery endpoint to send streaming logs too.\nDefined below.\n"
                },
                "blobstorageloggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Blobstoragelogging:Servicev1Blobstoragelogging"
                    },
                    "description": "An Azure Blob Storage endpoint to send streaming logs too.\nDefined below.\n"
                },
                "cacheSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1CacheSetting:Servicev1CacheSetting"
                    },
                    "description": "A set of Cache Settings, allowing you to override.\nDefined below.\n"
                },
                "clonedVersion": {
                    "type": "integer",
                    "description": "The latest cloned version by the provider. The value gets only set after running `pulumi up`.\n"
                },
                "comment": {
                    "type": "string",
                    "description": "An optional comment about the Director.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Condition:Servicev1Condition"
                    },
                    "description": "A set of conditions to add logic to any basic\nconfiguration object in this service. Defined below.\n"
                },
                "defaultHost": {
                    "type": "string",
                    "description": "Sets the host header.\n"
                },
                "defaultTtl": {
                    "type": "integer",
                    "description": "The default Time-to-live (TTL) for\nrequests.\n"
                },
                "dictionaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Dictionary:Servicev1Dictionary"
                    },
                    "description": "A set of dictionaries that allow the storing of key values pair for use within VCL functions.\nDefined below.\n"
                },
                "directors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Director:Servicev1Director"
                    },
                    "description": "A director to allow more control over balancing traffic over backends.\nwhen an item is not to be cached based on an above `condition`.\nDefined below\n"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Domain:Servicev1Domain"
                    },
                    "description": "The domain of the DigitalOcean Spaces endpoint (default \"nyc3.digitaloceanspaces.com\").\n"
                },
                "dynamicsnippets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Dynamicsnippet:Servicev1Dynamicsnippet"
                    },
                    "description": "A set of custom, \"dynamic\" VCL Snippet configuration blocks.\nDefined below.\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Services that are active cannot be destroyed. In\norder to destroy the Service, set `force_destroy` to `true`. Default `false`.\n"
                },
                "gcsloggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Gcslogging:Servicev1Gcslogging"
                    },
                    "description": "A gcs endpoint to send streaming logs too.\nDefined below.\n"
                },
                "gzips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Gzip:Servicev1Gzip"
                    },
                    "description": "A set of gzip rules to control automatic gzipping of\ncontent. Defined below.\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Header:Servicev1Header"
                    },
                    "description": "A set of Headers to manipulate for each request.\nDefined below.\n"
                },
                "healthchecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Healthcheck:Servicev1Healthcheck"
                    },
                    "description": "Name of a defined `healthcheck` to assign to this backend.\n"
                },
                "httpsloggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Httpslogging:Servicev1Httpslogging"
                    },
                    "description": "An HTTPS endpoint to send streaming logs to.\nDefined below.\n"
                },
                "logentries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Logentry:Servicev1Logentry"
                    },
                    "description": "A logentries endpoint to send streaming logs too.\nDefined below.\n"
                },
                "loggingCloudfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingCloudfile:Servicev1LoggingCloudfile"
                    },
                    "description": "A Rackspace Cloud Files endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingDatadogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingDatadog:Servicev1LoggingDatadog"
                    },
                    "description": "A Datadog endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingDigitaloceans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingDigitalocean:Servicev1LoggingDigitalocean"
                    },
                    "description": "A DigitalOcean Spaces endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingElasticsearches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingElasticsearch:Servicev1LoggingElasticsearch"
                    },
                    "description": "An Elasticsearch endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingFtps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingFtp:Servicev1LoggingFtp"
                    },
                    "description": "An FTP endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingGooglepubsubs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingGooglepubsub:Servicev1LoggingGooglepubsub"
                    },
                    "description": "A Google Cloud Pub/Sub endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingHeroku": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingHeroku:Servicev1LoggingHeroku"
                    },
                    "description": "A Heroku endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingHoneycombs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingHoneycomb:Servicev1LoggingHoneycomb"
                    },
                    "description": "A Honeycomb endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingKafkas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingKafka:Servicev1LoggingKafka"
                    },
                    "description": "A Kafka endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingLogglies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingLoggly:Servicev1LoggingLoggly"
                    },
                    "description": "A Loggly endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingLogshuttles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingLogshuttle:Servicev1LoggingLogshuttle"
                    },
                    "description": "A Log Shuttle endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingNewrelics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingNewrelic:Servicev1LoggingNewrelic"
                    },
                    "description": "A New Relic endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingOpenstacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingOpenstack:Servicev1LoggingOpenstack"
                    },
                    "description": "An OpenStack endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingScalyrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingScalyr:Servicev1LoggingScalyr"
                    },
                    "description": "A Scalyr endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingSftps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingSftp:Servicev1LoggingSftp"
                    },
                    "description": "An SFTP endpoint to send streaming logs to.\nDefined below.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n"
                },
                "papertrails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Papertrail:Servicev1Papertrail"
                    },
                    "description": "A Papertrail endpoint to send streaming logs too.\nDefined below.\n"
                },
                "requestSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1RequestSetting:Servicev1RequestSetting"
                    },
                    "description": "A set of Request modifiers.\nDefined below\n"
                },
                "responseObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1ResponseObject:Servicev1ResponseObject"
                    },
                    "description": "The name of the response object used by the Web Application Firewall.\n"
                },
                "s3loggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1S3logging:Servicev1S3logging"
                    },
                    "description": "A set of S3 Buckets to send streaming logs too.\nDefined below.\n"
                },
                "snippets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Snippet:Servicev1Snippet"
                    },
                    "description": "A set of custom, \"regular\" (non-dynamic) VCL Snippet configuration blocks.\nDefined below.\n"
                },
                "splunks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Splunk:Servicev1Splunk"
                    },
                    "description": "A Splunk endpoint to send streaming logs too.\nDefined below.\n"
                },
                "sumologics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Sumologic:Servicev1Sumologic"
                    },
                    "description": "A Sumologic endpoint to send streaming logs too.\nDefined below.\n"
                },
                "syslogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Syslog:Servicev1Syslog"
                    },
                    "description": "A syslog endpoint to send streaming logs too.\nDefined below.\n"
                },
                "vcls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Vcl:Servicev1Vcl"
                    },
                    "description": "A set of custom VCL configuration blocks.\nDefined below. See the [Fastly documentation](https://docs.fastly.com/vcl/custom-vcl/uploading-custom-vcl/) for more information on using custom VCL.\n"
                },
                "versionComment": {
                    "type": "string",
                    "description": "Description field for the version.\n"
                },
                "waf": {
                    "$ref": "#/types/fastly:index/Servicev1Waf:Servicev1Waf",
                    "description": "A WAF configuration block.\nDefined below.\n"
                }
            },
            "required": [
                "activeVersion",
                "clonedVersion",
                "defaultHost",
                "domains",
                "name"
            ],
            "inputProperties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Acl:Servicev1Acl"
                    },
                    "description": "A set of ACL configuration blocks.\nDefined below.\n"
                },
                "activate": {
                    "type": "boolean",
                    "description": "Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to false. Default true.\n"
                },
                "backends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Backend:Servicev1Backend"
                    },
                    "description": "A set of Backends to service requests from your Domains.\nDefined below. Backends must be defined in this argument, or defined in the\n`vcl` argument below\n"
                },
                "bigqueryloggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Bigquerylogging:Servicev1Bigquerylogging"
                    },
                    "description": "A BigQuery endpoint to send streaming logs too.\nDefined below.\n"
                },
                "blobstorageloggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Blobstoragelogging:Servicev1Blobstoragelogging"
                    },
                    "description": "An Azure Blob Storage endpoint to send streaming logs too.\nDefined below.\n"
                },
                "cacheSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1CacheSetting:Servicev1CacheSetting"
                    },
                    "description": "A set of Cache Settings, allowing you to override.\nDefined below.\n"
                },
                "comment": {
                    "type": "string",
                    "description": "An optional comment about the Director.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Condition:Servicev1Condition"
                    },
                    "description": "A set of conditions to add logic to any basic\nconfiguration object in this service. Defined below.\n"
                },
                "defaultHost": {
                    "type": "string",
                    "description": "Sets the host header.\n"
                },
                "defaultTtl": {
                    "type": "integer",
                    "description": "The default Time-to-live (TTL) for\nrequests.\n"
                },
                "dictionaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Dictionary:Servicev1Dictionary"
                    },
                    "description": "A set of dictionaries that allow the storing of key values pair for use within VCL functions.\nDefined below.\n"
                },
                "directors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Director:Servicev1Director"
                    },
                    "description": "A director to allow more control over balancing traffic over backends.\nwhen an item is not to be cached based on an above `condition`.\nDefined below\n"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Domain:Servicev1Domain"
                    },
                    "description": "The domain of the DigitalOcean Spaces endpoint (default \"nyc3.digitaloceanspaces.com\").\n"
                },
                "dynamicsnippets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Dynamicsnippet:Servicev1Dynamicsnippet"
                    },
                    "description": "A set of custom, \"dynamic\" VCL Snippet configuration blocks.\nDefined below.\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Services that are active cannot be destroyed. In\norder to destroy the Service, set `force_destroy` to `true`. Default `false`.\n"
                },
                "gcsloggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Gcslogging:Servicev1Gcslogging"
                    },
                    "description": "A gcs endpoint to send streaming logs too.\nDefined below.\n"
                },
                "gzips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Gzip:Servicev1Gzip"
                    },
                    "description": "A set of gzip rules to control automatic gzipping of\ncontent. Defined below.\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Header:Servicev1Header"
                    },
                    "description": "A set of Headers to manipulate for each request.\nDefined below.\n"
                },
                "healthchecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Healthcheck:Servicev1Healthcheck"
                    },
                    "description": "Name of a defined `healthcheck` to assign to this backend.\n"
                },
                "httpsloggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Httpslogging:Servicev1Httpslogging"
                    },
                    "description": "An HTTPS endpoint to send streaming logs to.\nDefined below.\n"
                },
                "logentries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Logentry:Servicev1Logentry"
                    },
                    "description": "A logentries endpoint to send streaming logs too.\nDefined below.\n"
                },
                "loggingCloudfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingCloudfile:Servicev1LoggingCloudfile"
                    },
                    "description": "A Rackspace Cloud Files endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingDatadogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingDatadog:Servicev1LoggingDatadog"
                    },
                    "description": "A Datadog endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingDigitaloceans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingDigitalocean:Servicev1LoggingDigitalocean"
                    },
                    "description": "A DigitalOcean Spaces endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingElasticsearches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingElasticsearch:Servicev1LoggingElasticsearch"
                    },
                    "description": "An Elasticsearch endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingFtps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingFtp:Servicev1LoggingFtp"
                    },
                    "description": "An FTP endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingGooglepubsubs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingGooglepubsub:Servicev1LoggingGooglepubsub"
                    },
                    "description": "A Google Cloud Pub/Sub endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingHeroku": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingHeroku:Servicev1LoggingHeroku"
                    },
                    "description": "A Heroku endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingHoneycombs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingHoneycomb:Servicev1LoggingHoneycomb"
                    },
                    "description": "A Honeycomb endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingKafkas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingKafka:Servicev1LoggingKafka"
                    },
                    "description": "A Kafka endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingLogglies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingLoggly:Servicev1LoggingLoggly"
                    },
                    "description": "A Loggly endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingLogshuttles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingLogshuttle:Servicev1LoggingLogshuttle"
                    },
                    "description": "A Log Shuttle endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingNewrelics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingNewrelic:Servicev1LoggingNewrelic"
                    },
                    "description": "A New Relic endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingOpenstacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingOpenstack:Servicev1LoggingOpenstack"
                    },
                    "description": "An OpenStack endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingScalyrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingScalyr:Servicev1LoggingScalyr"
                    },
                    "description": "A Scalyr endpoint to send streaming logs to.\nDefined below.\n"
                },
                "loggingSftps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1LoggingSftp:Servicev1LoggingSftp"
                    },
                    "description": "An SFTP endpoint to send streaming logs to.\nDefined below.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary.\n"
                },
                "papertrails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Papertrail:Servicev1Papertrail"
                    },
                    "description": "A Papertrail endpoint to send streaming logs too.\nDefined below.\n"
                },
                "requestSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1RequestSetting:Servicev1RequestSetting"
                    },
                    "description": "A set of Request modifiers.\nDefined below\n"
                },
                "responseObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1ResponseObject:Servicev1ResponseObject"
                    },
                    "description": "The name of the response object used by the Web Application Firewall.\n"
                },
                "s3loggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1S3logging:Servicev1S3logging"
                    },
                    "description": "A set of S3 Buckets to send streaming logs too.\nDefined below.\n"
                },
                "snippets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Snippet:Servicev1Snippet"
                    },
                    "description": "A set of custom, \"regular\" (non-dynamic) VCL Snippet configuration blocks.\nDefined below.\n"
                },
                "splunks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Splunk:Servicev1Splunk"
                    },
                    "description": "A Splunk endpoint to send streaming logs too.\nDefined below.\n"
                },
                "sumologics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Sumologic:Servicev1Sumologic"
                    },
                    "description": "A Sumologic endpoint to send streaming logs too.\nDefined below.\n"
                },
                "syslogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Syslog:Servicev1Syslog"
                    },
                    "description": "A syslog endpoint to send streaming logs too.\nDefined below.\n"
                },
                "vcls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/Servicev1Vcl:Servicev1Vcl"
                    },
                    "description": "A set of custom VCL configuration blocks.\nDefined below. See the [Fastly documentation](https://docs.fastly.com/vcl/custom-vcl/uploading-custom-vcl/) for more information on using custom VCL.\n"
                },
                "versionComment": {
                    "type": "string",
                    "description": "Description field for the version.\n"
                },
                "waf": {
                    "$ref": "#/types/fastly:index/Servicev1Waf:Servicev1Waf",
                    "description": "A WAF configuration block.\nDefined below.\n"
                }
            },
            "requiredInputs": [
                "domains"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Servicev1 resources.\n",
                "properties": {
                    "acls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Acl:Servicev1Acl"
                        },
                        "description": "A set of ACL configuration blocks.\nDefined below.\n"
                    },
                    "activate": {
                        "type": "boolean",
                        "description": "Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to false. Default true.\n"
                    },
                    "activeVersion": {
                        "type": "integer",
                        "description": "The currently active version of your Fastly Service.\n"
                    },
                    "backends": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Backend:Servicev1Backend"
                        },
                        "description": "A set of Backends to service requests from your Domains.\nDefined below. Backends must be defined in this argument, or defined in the\n`vcl` argument below\n"
                    },
                    "bigqueryloggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Bigquerylogging:Servicev1Bigquerylogging"
                        },
                        "description": "A BigQuery endpoint to send streaming logs too.\nDefined below.\n"
                    },
                    "blobstorageloggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Blobstoragelogging:Servicev1Blobstoragelogging"
                        },
                        "description": "An Azure Blob Storage endpoint to send streaming logs too.\nDefined below.\n"
                    },
                    "cacheSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1CacheSetting:Servicev1CacheSetting"
                        },
                        "description": "A set of Cache Settings, allowing you to override.\nDefined below.\n"
                    },
                    "clonedVersion": {
                        "type": "integer",
                        "description": "The latest cloned version by the provider. The value gets only set after running `pulumi up`.\n"
                    },
                    "comment": {
                        "type": "string",
                        "description": "An optional comment about the Director.\n"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Condition:Servicev1Condition"
                        },
                        "description": "A set of conditions to add logic to any basic\nconfiguration object in this service. Defined below.\n"
                    },
                    "defaultHost": {
                        "type": "string",
                        "description": "Sets the host header.\n"
                    },
                    "defaultTtl": {
                        "type": "integer",
                        "description": "The default Time-to-live (TTL) for\nrequests.\n"
                    },
                    "dictionaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Dictionary:Servicev1Dictionary"
                        },
                        "description": "A set of dictionaries that allow the storing of key values pair for use within VCL functions.\nDefined below.\n"
                    },
                    "directors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Director:Servicev1Director"
                        },
                        "description": "A director to allow more control over balancing traffic over backends.\nwhen an item is not to be cached based on an above `condition`.\nDefined below\n"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Domain:Servicev1Domain"
                        },
                        "description": "The domain of the DigitalOcean Spaces endpoint (default \"nyc3.digitaloceanspaces.com\").\n"
                    },
                    "dynamicsnippets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Dynamicsnippet:Servicev1Dynamicsnippet"
                        },
                        "description": "A set of custom, \"dynamic\" VCL Snippet configuration blocks.\nDefined below.\n"
                    },
                    "forceDestroy": {
                        "type": "boolean",
                        "description": "Services that are active cannot be destroyed. In\norder to destroy the Service, set `force_destroy` to `true`. Default `false`.\n"
                    },
                    "gcsloggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Gcslogging:Servicev1Gcslogging"
                        },
                        "description": "A gcs endpoint to send streaming logs too.\nDefined below.\n"
                    },
                    "gzips": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Gzip:Servicev1Gzip"
                        },
                        "description": "A set of gzip rules to control automatic gzipping of\ncontent. Defined below.\n"
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Header:Servicev1Header"
                        },
                        "description": "A set of Headers to manipulate for each request.\nDefined below.\n"
                    },
                    "healthchecks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Healthcheck:Servicev1Healthcheck"
                        },
                        "description": "Name of a defined `healthcheck` to assign to this backend.\n"
                    },
                    "httpsloggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Httpslogging:Servicev1Httpslogging"
                        },
                        "description": "An HTTPS endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "logentries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Logentry:Servicev1Logentry"
                        },
                        "description": "A logentries endpoint to send streaming logs too.\nDefined below.\n"
                    },
                    "loggingCloudfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1LoggingCloudfile:Servicev1LoggingCloudfile"
                        },
                        "description": "A Rackspace Cloud Files endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingDatadogs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1LoggingDatadog:Servicev1LoggingDatadog"
                        },
                        "description": "A Datadog endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingDigitaloceans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1LoggingDigitalocean:Servicev1LoggingDigitalocean"
                        },
                        "description": "A DigitalOcean Spaces endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingElasticsearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1LoggingElasticsearch:Servicev1LoggingElasticsearch"
                        },
                        "description": "An Elasticsearch endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingFtps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1LoggingFtp:Servicev1LoggingFtp"
                        },
                        "description": "An FTP endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingGooglepubsubs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1LoggingGooglepubsub:Servicev1LoggingGooglepubsub"
                        },
                        "description": "A Google Cloud Pub/Sub endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingHeroku": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1LoggingHeroku:Servicev1LoggingHeroku"
                        },
                        "description": "A Heroku endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingHoneycombs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1LoggingHoneycomb:Servicev1LoggingHoneycomb"
                        },
                        "description": "A Honeycomb endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingKafkas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1LoggingKafka:Servicev1LoggingKafka"
                        },
                        "description": "A Kafka endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingLogglies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1LoggingLoggly:Servicev1LoggingLoggly"
                        },
                        "description": "A Loggly endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingLogshuttles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1LoggingLogshuttle:Servicev1LoggingLogshuttle"
                        },
                        "description": "A Log Shuttle endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingNewrelics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1LoggingNewrelic:Servicev1LoggingNewrelic"
                        },
                        "description": "A New Relic endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingOpenstacks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1LoggingOpenstack:Servicev1LoggingOpenstack"
                        },
                        "description": "An OpenStack endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingScalyrs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1LoggingScalyr:Servicev1LoggingScalyr"
                        },
                        "description": "A Scalyr endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "loggingSftps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1LoggingSftp:Servicev1LoggingSftp"
                        },
                        "description": "An SFTP endpoint to send streaming logs to.\nDefined below.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name to identify this dictionary.\n"
                    },
                    "papertrails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Papertrail:Servicev1Papertrail"
                        },
                        "description": "A Papertrail endpoint to send streaming logs too.\nDefined below.\n"
                    },
                    "requestSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1RequestSetting:Servicev1RequestSetting"
                        },
                        "description": "A set of Request modifiers.\nDefined below\n"
                    },
                    "responseObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1ResponseObject:Servicev1ResponseObject"
                        },
                        "description": "The name of the response object used by the Web Application Firewall.\n"
                    },
                    "s3loggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1S3logging:Servicev1S3logging"
                        },
                        "description": "A set of S3 Buckets to send streaming logs too.\nDefined below.\n"
                    },
                    "snippets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Snippet:Servicev1Snippet"
                        },
                        "description": "A set of custom, \"regular\" (non-dynamic) VCL Snippet configuration blocks.\nDefined below.\n"
                    },
                    "splunks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Splunk:Servicev1Splunk"
                        },
                        "description": "A Splunk endpoint to send streaming logs too.\nDefined below.\n"
                    },
                    "sumologics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Sumologic:Servicev1Sumologic"
                        },
                        "description": "A Sumologic endpoint to send streaming logs too.\nDefined below.\n"
                    },
                    "syslogs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Syslog:Servicev1Syslog"
                        },
                        "description": "A syslog endpoint to send streaming logs too.\nDefined below.\n"
                    },
                    "vcls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/Servicev1Vcl:Servicev1Vcl"
                        },
                        "description": "A set of custom VCL configuration blocks.\nDefined below. See the [Fastly documentation](https://docs.fastly.com/vcl/custom-vcl/uploading-custom-vcl/) for more information on using custom VCL.\n"
                    },
                    "versionComment": {
                        "type": "string",
                        "description": "Description field for the version.\n"
                    },
                    "waf": {
                        "$ref": "#/types/fastly:index/Servicev1Waf:Servicev1Waf",
                        "description": "A WAF configuration block.\nDefined below.\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/userv1:Userv1": {
            "description": "Provides a Fastly User, representing the configuration for a user account for interacting with Fastly.\n\nThe User resource requires a login and name, and optionally a role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst demo = new fastly.Userv1(\"demo\", {\n    login: \"demo@example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\ndemo = fastly.Userv1(\"demo\", login=\"demo@example.com\")\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demo = new Fastly.Userv1(\"demo\", new Fastly.Userv1Args\n        {\n            Login = \"demo@example.com\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v2/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := fastly.NewUserv1(ctx, \"demo\", \u0026fastly.Userv1Args{\n\t\t\tLogin: pulumi.String(\"demo@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Fastly User can be imported using their user ID, e.g.\n\n```sh\n $ pulumi import fastly:index/userv1:Userv1 demo xxxxxxxxxxxxxxxxxxxx\n```\n\n ",
            "properties": {
                "login": {
                    "type": "string",
                    "description": "The email address, which is the login name, of the User.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The real life name of the user.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role of this user. Can be `user` (the default), `billing`, `engineer`, or `superuser`. For detailed information on the abilities granted to each role, see [Fastly's Documentation on User roles](https://docs.fastly.com/en/guides/configuring-user-roles-and-permissions#user-roles-and-what-they-can-do).\n"
                }
            },
            "required": [
                "login",
                "name"
            ],
            "inputProperties": {
                "login": {
                    "type": "string",
                    "description": "The email address, which is the login name, of the User.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The real life name of the user.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role of this user. Can be `user` (the default), `billing`, `engineer`, or `superuser`. For detailed information on the abilities granted to each role, see [Fastly's Documentation on User roles](https://docs.fastly.com/en/guides/configuring-user-roles-and-permissions#user-roles-and-what-they-can-do).\n"
                }
            },
            "requiredInputs": [
                "login"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Userv1 resources.\n",
                "properties": {
                    "login": {
                        "type": "string",
                        "description": "The email address, which is the login name, of the User.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The real life name of the user.\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role of this user. Can be `user` (the default), `billing`, `engineer`, or `superuser`. For detailed information on the abilities granted to each role, see [Fastly's Documentation on User roles](https://docs.fastly.com/en/guides/configuring-user-roles-and-permissions#user-roles-and-what-they-can-do).\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "fastly:index/getFastlyIpRanges:getFastlyIpRanges": {
            "description": "Use this data source to get the [IP ranges](https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges) of Fastly edge nodes.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst fastly = fastly.getFastlyIpRanges({});\nconst fromFastly = new aws.ec2.SecurityGroup(\"fromFastly\", {ingress: [{\n    fromPort: \"443\",\n    toPort: \"443\",\n    protocol: \"tcp\",\n    cidrBlocks: fastly.then(fastly =\u003e fastly.cidrBlocks),\n    ipv6CidrBlocks: fastly.then(fastly =\u003e fastly.ipv6CidrBlocks),\n}]});\n```\n```python\nimport pulumi\nimport pulumi_aws as aws\nimport pulumi_fastly as fastly\n\nfastly = fastly.get_fastly_ip_ranges()\nfrom_fastly = aws.ec2.SecurityGroup(\"fromFastly\", ingress=[aws.ec2.SecurityGroupIngressArgs(\n    from_port=\"443\",\n    to_port=\"443\",\n    protocol=\"tcp\",\n    cidr_blocks=fastly.cidr_blocks,\n    ipv6_cidr_blocks=fastly.ipv6_cidr_blocks,\n)])\n```\n```csharp\nusing Pulumi;\nusing Aws = Pulumi.Aws;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var fastly = Output.Create(Fastly.GetFastlyIpRanges.InvokeAsync());\n        var fromFastly = new Aws.Ec2.SecurityGroup(\"fromFastly\", new Aws.Ec2.SecurityGroupArgs\n        {\n            Ingress = \n            {\n                new Aws.Ec2.Inputs.SecurityGroupIngressArgs\n                {\n                    FromPort = 443,\n                    ToPort = 443,\n                    Protocol = \"tcp\",\n                    CidrBlocks = fastly.Apply(fastly =\u003e fastly.CidrBlocks),\n                    Ipv6CidrBlocks = fastly.Apply(fastly =\u003e fastly.Ipv6CidrBlocks),\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aws/sdk/v3/go/aws/ec2\"\n\t\"github.com/pulumi/pulumi-fastly/sdk/v2/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tfastly, err := fastly.GetFastlyIpRanges(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ec2.NewSecurityGroup(ctx, \"fromFastly\", \u0026ec2.SecurityGroupArgs{\n\t\t\tIngress: ec2.SecurityGroupIngressArray{\n\t\t\t\t\u0026ec2.SecurityGroupIngressArgs{\n\t\t\t\t\tFromPort:       pulumi.Int(443),\n\t\t\t\t\tToPort:         pulumi.Int(443),\n\t\t\t\t\tProtocol:       pulumi.String(\"tcp\"),\n\t\t\t\t\tCidrBlocks:     toPulumiStringArray(fastly.CidrBlocks),\n\t\t\t\t\tIpv6CidrBlocks: toPulumiStringArray(fastly.Ipv6CidrBlocks),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\nfunc toPulumiStringArray(arr []string) pulumi.StringArray {\n\tvar pulumiArr pulumi.StringArray\n\tfor _, v := range arr {\n\t\tpulumiArr = append(pulumiArr, pulumi.String(v))\n\t}\n\treturn pulumiArr\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getFastlyIpRanges.\n",
                "properties": {
                    "cidrBlocks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The lexically ordered list of ipv4 CIDR blocks.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipv6CidrBlocks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The lexically ordered list of ipv6 CIDR blocks.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cidrBlocks",
                    "ipv6CidrBlocks",
                    "id"
                ]
            }
        },
        "fastly:index/getWafRules:getWafRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getWafRules.\n",
                "properties": {
                    "excludeModsecRuleIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Exclusion filter by WAF rule's ModSecurity ID.\n"
                    },
                    "publishers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Inclusion filter by WAF rule's publishers.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Inclusion filter by WAF rule's tags.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getWafRules.\n",
                "properties": {
                    "excludeModsecRuleIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "publishers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/getWafRulesRule:getWafRulesRule"
                        },
                        "description": "The Web Application Firewall's rules result set.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "rules",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "namespaces": {
                "fastly": "Fastly"
            },
            "packageReferences": {
                "Pulumi": "2.*",
                "System.Collections.Immutable": "1.6.0"
            }
        },
        "nodejs": {
            "dependencies": {
                "@pulumi/pulumi": "^2.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^8.0.25"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing fastly cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/fastly/terraform-provider-fastly)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-fastly` repo](https://github.com/pulumi/pulumi-fastly/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`fastly/terraform-provider-fastly` repo](https://github.com/fastly/terraform-provider-fastly/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/fastly/terraform-provider-fastly)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-fastly` repo](https://github.com/pulumi/pulumi-fastly/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`fastly/terraform-provider-fastly` repo](https://github.com/fastly/terraform-provider-fastly/issues).",
            "requires": {
                "pulumi": "\u003e=2.9.0,\u003c3.0.0"
            },
            "usesIOClasses": true
        }
    }
}