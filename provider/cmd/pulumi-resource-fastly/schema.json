{
    "name": "fastly",
    "description": "A Pulumi package for creating and managing fastly cloud resources.",
    "keywords": [
        "pulumi",
        "fastly"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`fastly` Terraform Provider](https://github.com/fastly/terraform-provider-fastly).",
    "repository": "https://github.com/pulumi/pulumi-fastly",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "description": "Fastly API Key from https://app.fastly.com/#account\n"
            },
            "baseUrl": {
                "type": "string",
                "description": "Fastly API URL\n"
            },
            "forceHttp2": {
                "type": "boolean",
                "description": "Set this to `true` to disable HTTP/1.x fallback mechanism that the underlying Go library will attempt upon connection to\n`api.fastly.com:443` by default. This may slightly improve the provider's performance and reduce unnecessary TLS\nhandshakes. Default: `false`\n"
            },
            "noAuth": {
                "type": "boolean",
                "description": "Set to `true` if your configuration only consumes data sources that do not require authentication, such as\n`fastly_ip_ranges`\n"
            }
        }
    },
    "types": {
        "fastly:index/ServiceACLEntriesEntry:ServiceACLEntriesEntry": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "A personal freeform descriptive note\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID of the entry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "description": "An IP address that is the focus for the ACL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negated": {
                    "type": "boolean",
                    "description": "A boolean that will negate the match if true\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnet": {
                    "type": "string",
                    "description": "An optional subnet mask applied to the IP address\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ip"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "ip"
                    ]
                }
            }
        },
        "fastly:index/ServiceComputeBackend:ServiceComputeBackend": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "An IPv4, hostname, or IPv6 address for the Backend\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoLoadbalance": {
                    "type": "boolean",
                    "description": "Denotes if this Backend should be included in the pool of backends that requests are load balanced against. Default `false`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "betweenBytesTimeout": {
                    "type": "integer",
                    "description": "How long to wait between bytes in milliseconds. Default `10000`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectTimeout": {
                    "type": "integer",
                    "description": "How long to wait for a timeout in milliseconds. Default `1000`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorThreshold": {
                    "type": "integer",
                    "description": "Number of errors to allow before the Backend is marked as down. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "firstByteTimeout": {
                    "type": "integer",
                    "description": "How long to wait for the first bytes in milliseconds. Default `15000`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthcheck": {
                    "type": "string",
                    "description": "Name of a defined `healthcheck` to assign to this backend\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConn": {
                    "type": "integer",
                    "description": "Maximum number of connections for this Backend. Default `200`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxTlsVersion": {
                    "type": "string",
                    "description": "Maximum allowed TLS version on SSL connections to this backend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minTlsVersion": {
                    "type": "string",
                    "description": "Minimum allowed TLS version on SSL connections to this backend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name for this Backend. Must be unique to this Service. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideHost": {
                    "type": "string",
                    "description": "The hostname to override the Host header\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port number on which the Backend responds. Default `80`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shield": {
                    "type": "string",
                    "description": "The POP of the shield designated to reduce inbound load. Valid values for `shield` are included in the `GET /datacenters` API response\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCaCert": {
                    "type": "string",
                    "description": "CA certificate attached to origin.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCertHostname": {
                    "type": "string",
                    "description": "Overrides ssl_hostname, but only for cert verification. Does not affect SNI at all\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCheckCert": {
                    "type": "boolean",
                    "description": "Be strict about checking SSL certs. Default `true`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCiphers": {
                    "type": "string",
                    "description": "Cipher list consisting of one or more cipher strings separated by colons. Commas or spaces are also acceptable separators but colons are normally used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientCert": {
                    "type": "string",
                    "description": "Client certificate attached to origin. Used when connecting to the backend\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientKey": {
                    "type": "string",
                    "description": "Client key attached to origin. Used when connecting to the backend\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslHostname": {
                    "type": "string",
                    "description": "Used for both SNI during the TLS handshake and to validate the cert\n",
                    "deprecationMessage": "Use ssl_cert_hostname and ssl_sni_hostname instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslSniHostname": {
                    "type": "string",
                    "description": "Overrides ssl_hostname, but only for SNI in the handshake. Does not affect cert validation at all\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Whether or not to use SSL to reach the Backend. Default `false`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "description": "The [portion of traffic](https://docs.fastly.com/en/guides/load-balancing-configuration#how-weight-affects-load-balancing) to send to this Backend. Each Backend receives weight / total of the traffic. Default `100`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name"
            ]
        },
        "fastly:index/ServiceComputeDictionary:ServiceComputeDictionary": {
            "properties": {
                "dictionaryId": {
                    "type": "string",
                    "description": "The ID of the dictionary\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Allow the dictionary to be deleted, even if it contains entries. Defaults to false.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary. It is important to note that changing this attribute will delete and recreate the dictionary, and discard the current items in the dictionary\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writeOnly": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dictionaryId",
                        "name"
                    ]
                }
            }
        },
        "fastly:index/ServiceComputeDomain:ServiceComputeDomain": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "An optional comment about the Domain.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The domain that this Service will respond to. It is important to note that changing this attribute will delete and recreate the resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "fastly:index/ServiceComputeLoggingBigquery:ServiceComputeLoggingBigquery": {
            "properties": {
                "dataset": {
                    "type": "string",
                    "description": "The ID of your BigQuery dataset\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "email": {
                    "type": "string",
                    "description": "The email for the service account with write access to your BigQuery dataset. If not provided, this will be pulled from a `FASTLY_BQ_EMAIL` environment variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this BigQuery logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of your GCP project\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "The secret key associated with the service account that has write access to your BigQuery table. If not provided, this will be pulled from the `FASTLY_BQ_SECRET_KEY` environment variable. Typical format for this is a private key in a string with newlines\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "table": {
                    "type": "string",
                    "description": "The ID of your BigQuery table\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "description": "BigQuery table name suffix template\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataset",
                "email",
                "name",
                "projectId",
                "secretKey",
                "table"
            ]
        },
        "fastly:index/ServiceComputeLoggingBlobstorage:ServiceComputeLoggingBlobstorage": {
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "The unique Azure Blob Storage namespace in which your data objects are stored\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip*level will default to 3. To specify a different level, leave compression*codec blank and explicitly set the level using gzip*level. Specifying both compression*codec and gzip_level in the same API request will result in an error.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "container": {
                    "type": "string",
                    "description": "The name of the Azure Blob Storage container in which to store logs\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fileMaxBytes": {
                    "type": "integer",
                    "description": "Maximum size of an uploaded log file, if non-zero.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify the Azure Blob Storage endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to. Must end with a trailing slash. If this field is left empty, the files will be saved in the container's root path\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently the logs should be transferred in seconds. Default `3600`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sasToken": {
                    "type": "string",
                    "description": "The Azure shared access signature providing write access to the blob service objects. Be sure to update your token before it expires or the logging functionality will not work\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accountName",
                "container",
                "name",
                "sasToken"
            ]
        },
        "fastly:index/ServiceComputeLoggingCloudfile:ServiceComputeLoggingCloudfile": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Your Cloud File account access key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of your Cloud Files container\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip*level will default to 3. To specify a different level, leave compression*codec blank and explicitly set the level using gzip*level. Specifying both compression*codec and gzip_level in the same API request will result in an error.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default `3600`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region to stream logs to. One of: DFW (Dallas), ORD (Chicago), IAD (Northern Virginia), LON (London), SYD (Sydney), HKG (Hong Kong)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for your Cloud Files account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bucketName",
                "name",
                "user"
            ]
        },
        "fastly:index/ServiceComputeLoggingDatadog:ServiceComputeLoggingDatadog": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name of the Datadog logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region that log data will be sent to. One of `US` or `EU`. Defaults to `US` if undefined\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The API key from your Datadog account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceComputeLoggingDigitalocean:ServiceComputeLoggingDigitalocean": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Your DigitalOcean Spaces account access key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of the DigitalOcean Space\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip*level will default to 3. To specify a different level, leave compression*codec blank and explicitly set the level using gzip*level. Specifying both compression*codec and gzip_level in the same API request will result in an error.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the DigitalOcean Spaces endpoint (default `nyc3.digitaloceanspaces.com`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the DigitalOcean Spaces logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default `3600`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "Your DigitalOcean Spaces account secret key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bucketName",
                "name",
                "secretKey"
            ]
        },
        "fastly:index/ServiceComputeLoggingElasticsearch:ServiceComputeLoggingElasticsearch": {
            "properties": {
                "index": {
                    "type": "string",
                    "description": "The name of the Elasticsearch index to send documents (logs) to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Elasticsearch logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "BasicAuth password for Elasticsearch\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pipeline": {
                    "type": "string",
                    "description": "The ID of the Elasticsearch ingest pipeline to apply pre-process transformations to before indexing\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxBytes": {
                    "type": "integer",
                    "description": "The maximum number of logs sent in one request. Defaults to `0` for unbounded\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxEntries": {
                    "type": "integer",
                    "description": "The maximum number of bytes sent in one request. Defaults to `0` for unbounded\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname used to verify the server's certificate. It can either be the Common Name (CN) or a Subject Alternative Name (SAN)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The Elasticsearch URL to stream logs to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "BasicAuth username for Elasticsearch\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index",
                "name",
                "url"
            ]
        },
        "fastly:index/ServiceComputeLoggingFtp:ServiceComputeLoggingFtp": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The FTP address to stream logs to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip*level will default to 3. To specify a different level, leave compression*codec blank and explicitly set the level using gzip*level. Specifying both compression*codec and gzip_level in the same API request will result in an error.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the FTP logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password for the server (for anonymous use an email address)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload log files to. If the path ends in `/` then it is treated as a directory\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently the logs should be transferred, in seconds (Default `3600`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port number. Default: `21`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for the server (can be `anonymous`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name",
                "password",
                "path",
                "user"
            ]
        },
        "fastly:index/ServiceComputeLoggingGc:ServiceComputeLoggingGc": {
            "properties": {
                "bucketName": {
                    "type": "string",
                    "description": "The name of the bucket in which to store the logs\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip*level will default to 3. To specify a different level, leave compression*codec blank and explicitly set the level using gzip*level. Specifying both compression*codec and gzip_level in the same API request will result in an error.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this GCS endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "Path to store the files. Must end with a trailing slash. If this field is left empty, the files will be saved in the bucket's root path\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently the logs should be transferred, in seconds (Default 3600)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "The secret key associated with the target gcs bucket on your account. You may optionally provide this secret via an environment variable, `FASTLY_GCS_SECRET_KEY`. A typical format for the key is PEM format, containing actual newline characters where required\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "Your Google Cloud Platform service account email address. The `client_email` field in your service account authentication JSON. You may optionally provide this via an environment variable, `FASTLY_GCS_EMAIL`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucketName",
                "name"
            ]
        },
        "fastly:index/ServiceComputeLoggingGooglepubsub:ServiceComputeLoggingGooglepubsub": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name of the Google Cloud Pub/Sub logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of your Google Cloud Platform project\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "Your Google Cloud Platform account secret key. The `private_key` field in your service account authentication JSON. You may optionally provide this secret via an environment variable, `FASTLY_GOOGLE_PUBSUB_SECRET_KEY`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topic": {
                    "type": "string",
                    "description": "The Google Cloud Pub/Sub topic to which logs will be published\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "Your Google Cloud Platform service account email address. The `client_email` field in your service account authentication JSON. You may optionally provide this via an environment variable, `FASTLY_GOOGLE_PUBSUB_EMAIL`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "projectId",
                "secretKey",
                "topic",
                "user"
            ]
        },
        "fastly:index/ServiceComputeLoggingHeroku:ServiceComputeLoggingHeroku": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name of the Heroku logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The token to use for authentication (https://www.heroku.com/docs/customer-token-authentication-token/)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The URL to stream logs to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token",
                "url"
            ]
        },
        "fastly:index/ServiceComputeLoggingHoneycomb:ServiceComputeLoggingHoneycomb": {
            "properties": {
                "dataset": {
                    "type": "string",
                    "description": "The Honeycomb Dataset you want to log to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Honeycomb logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The Write Key from the Account page of your Honeycomb account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataset",
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceComputeLoggingHttp:ServiceComputeLoggingHttp": {
            "properties": {
                "contentType": {
                    "type": "string",
                    "description": "Value of the `Content-Type` header sent with the request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headerName": {
                    "type": "string",
                    "description": "Custom header sent with the request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headerValue": {
                    "type": "string",
                    "description": "Value of the custom header sent with the request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jsonFormat": {
                    "type": "string",
                    "description": "Formats log entries as JSON. Can be either disabled (`0`), array of json (`1`), or newline delimited json (`2`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "HTTP method used for request. Can be either `POST` or `PUT`. Default `POST`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the HTTPS logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxBytes": {
                    "type": "integer",
                    "description": "The maximum number of bytes sent in one request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxEntries": {
                    "type": "integer",
                    "description": "The maximum number of logs sent in one request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "Used during the TLS handshake to validate the certificate\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "URL that log data will be sent to. Must use the https protocol\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "url"
            ]
        },
        "fastly:index/ServiceComputeLoggingKafka:ServiceComputeLoggingKafka": {
            "properties": {
                "authMethod": {
                    "type": "string",
                    "description": "SASL authentication method. One of: plain, scram-sha-256, scram-sha-512\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "brokers": {
                    "type": "string",
                    "description": "A comma-separated list of IP addresses or hostnames of Kafka brokers\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. One of: `gzip`, `snappy`, `lz4`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Kafka logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parseLogKeyvals": {
                    "type": "boolean",
                    "description": "Enables parsing of key=value tuples from the beginning of a logline, turning them into record headers\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "SASL Pass\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxBytes": {
                    "type": "integer",
                    "description": "Maximum size of log batch, if non-zero. Defaults to 0 for unbounded\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requiredAcks": {
                    "type": "string",
                    "description": "The Number of acknowledgements a leader must receive before a write is considered successful. One of: `1` (default) One server needs to respond. `0` No servers need to respond. `-1` Wait for all in-sync replicas to respond\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topic": {
                    "type": "string",
                    "description": "The Kafka topic to send logs to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTls": {
                    "type": "boolean",
                    "description": "Whether to use TLS for secure logging. Can be either `true` or `false`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "SASL User\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "brokers",
                "name",
                "topic"
            ]
        },
        "fastly:index/ServiceComputeLoggingKinese:ServiceComputeLoggingKinese": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "The AWS access key to be used to write to the stream\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iamRole": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the IAM role granting Fastly access to Kinesis. Not required if `access_key` and `secret_key` are provided.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Kinesis logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region the stream resides in. (Default: `us-east-1`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "The AWS secret access key to authenticate with\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topic": {
                    "type": "string",
                    "description": "The Kinesis stream name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "topic"
            ]
        },
        "fastly:index/ServiceComputeLoggingLogentry:ServiceComputeLoggingLogentry": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name of the Logentries logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port number configured in Logentries\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "Use token based authentication (https://logentries.com/doc/input-token/)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTls": {
                    "type": "boolean",
                    "description": "Whether to use TLS for secure logging\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceComputeLoggingLoggly:ServiceComputeLoggingLoggly": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name of the Loggly logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The token to use for authentication (https://www.loggly.com/docs/customer-token-authentication-token/).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceComputeLoggingLogshuttle:ServiceComputeLoggingLogshuttle": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name of the Log Shuttle logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your Log Shuttle endpoint URL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token",
                "url"
            ]
        },
        "fastly:index/ServiceComputeLoggingNewrelic:ServiceComputeLoggingNewrelic": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name of the New Relic logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region that log data will be sent to. Default: `US`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The Insert API key from the Account page of your New Relic account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceComputeLoggingOpenstack:ServiceComputeLoggingOpenstack": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Your OpenStack account access key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of your OpenStack container\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip*level will default to 3. To specify a different level, leave compression*codec blank and explicitly set the level using gzip*level. Specifying both compression*codec and gzip_level in the same API request will result in an error.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the OpenStack logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "Path to store the files. Must end with a trailing slash. If this field is left empty, the files will be saved in the bucket's root path\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently the logs should be transferred, in seconds. Default `3600`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your OpenStack auth url\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for your OpenStack account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bucketName",
                "name",
                "url",
                "user"
            ]
        },
        "fastly:index/ServiceComputeLoggingPapertrail:ServiceComputeLoggingPapertrail": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The address of the Papertrail endpoint\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this Papertrail endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port associated with the address where the Papertrail endpoint can be accessed\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name",
                "port"
            ]
        },
        "fastly:index/ServiceComputeLoggingS3:ServiceComputeLoggingS3": {
            "properties": {
                "acl": {
                    "type": "string",
                    "description": "The AWS [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl) to use for objects uploaded to the S3 bucket. Options are: `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, `bucket-owner-read`, `bucket-owner-full-control`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of the bucket in which to store the logs\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip*level will default to 3. To specify a different level, leave compression*codec blank and explicitly set the level using gzip*level. Specifying both compression*codec and gzip_level in the same API request will result in an error.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "If you created the S3 bucket outside of `us-east-1`, then specify the corresponding bucket endpoint. Example: `s3-us-west-2.amazonaws.com`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the S3 logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "Path to store the files. Must end with a trailing slash. If this field is left empty, the files will be saved in the bucket's root path\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently the logs should be transferred, in seconds. Default `3600`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redundancy": {
                    "type": "string",
                    "description": "The S3 storage class (redundancy level). Should be one of: `standard`, `intelligent_tiering`, `standard_ia`, `onezone_ia`, `glacier`, `glacier_ir`, `deep_archive`, or `reduced_redundancy`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "s3AccessKey": {
                    "type": "string",
                    "description": "AWS Access Key of an account with the required permissions to post logs. It is **strongly** recommended you create a separate IAM user with permissions to only operate on this Bucket. This key will be not be encrypted. Not required if `iam_role` is provided. You can provide this key via an environment variable, `FASTLY_S3_ACCESS_KEY`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "s3IamRole": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the IAM role granting Fastly access to S3. Not required if `access_key` and `secret_key` are provided. You can provide this value via an environment variable, `FASTLY_S3_IAM_ROLE`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "s3SecretKey": {
                    "type": "string",
                    "description": "AWS Secret Key of an account with the required permissions to post logs. It is **strongly** recommended you create a separate IAM user with permissions to only operate on this Bucket. This secret will be not be encrypted. Not required if `iam_role` is provided. You can provide this secret via an environment variable, `FASTLY_S3_SECRET_KEY`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverSideEncryption": {
                    "type": "string",
                    "description": "Specify what type of server side encryption should be used. Can be either `AES256` or `aws:kms`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverSideEncryptionKmsKeyId": {
                    "type": "string",
                    "description": "Optional server-side KMS Key Id. Must be set if server*side*encryption is set to `aws:kms`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucketName",
                "name"
            ]
        },
        "fastly:index/ServiceComputeLoggingScalyr:ServiceComputeLoggingScalyr": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name of the Scalyr logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region that log data will be sent to. One of `US` or `EU`. Defaults to `US` if undefined\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The token to use for authentication (https://www.scalyr.com/keys)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceComputeLoggingSftp:ServiceComputeLoggingSftp": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The SFTP address to stream logs to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip*level will default to 3. To specify a different level, leave compression*codec blank and explicitly set the level using gzip*level. Specifying both compression*codec and gzip_level in the same API request will result in an error.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the SFTP logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password for the server. If both `password` and `secret_key` are passed, `secret_key` will be preferred\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload log files to. If the path ends in `/` then it is treated as a directory\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default `3600`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port the SFTP service listens on. (Default: `22`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "The SSH private key for the server. If both `password` and `secret_key` are passed, `secret_key` will be preferred\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sshKnownHosts": {
                    "type": "string",
                    "description": "A list of host keys for all hosts we can connect to over SFTP\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for the server\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name",
                "path",
                "sshKnownHosts",
                "user"
            ]
        },
        "fastly:index/ServiceComputeLoggingSplunk:ServiceComputeLoggingSplunk": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A unique name to identify the Splunk endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format. You can provide this certificate via an environment variable, `FASTLY_SPLUNK_CA_CERT`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The Splunk token to be used for authentication\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The Splunk URL to stream logs to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTls": {
                    "type": "boolean",
                    "description": "Whether to use TLS for secure logging. Default: `false`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token",
                "url"
            ]
        },
        "fastly:index/ServiceComputeLoggingSumologic:ServiceComputeLoggingSumologic": {
            "properties": {
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this Sumologic endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The URL to Sumologic collector endpoint\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "url"
            ]
        },
        "fastly:index/ServiceComputeLoggingSyslog:ServiceComputeLoggingSyslog": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "A hostname or IPv4 address of the Syslog endpoint\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this Syslog endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port associated with the address where the Syslog endpoint can be accessed. Default `514`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format. You can provide this certificate via an environment variable, `FASTLY_SYSLOG_CA_CERT`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format. You can provide this certificate via an environment variable, `FASTLY_SYSLOG_CLIENT_CERT`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format. You can provide this key via an environment variable, `FASTLY_SYSLOG_CLIENT_KEY`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "Used during the TLS handshake to validate the certificate\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "Whether to prepend each message with a specific token\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTls": {
                    "type": "boolean",
                    "description": "Whether to use TLS for secure logging. Default `false`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name"
            ]
        },
        "fastly:index/ServiceComputePackage:ServiceComputePackage": {
            "properties": {
                "filename": {
                    "type": "string",
                    "description": "The path to the Wasm deployment package within your local filesystem\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceCodeHash": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filename"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "filename",
                        "sourceCodeHash"
                    ]
                }
            }
        },
        "fastly:index/ServiceVclAcl:ServiceVclAcl": {
            "properties": {
                "aclId": {
                    "type": "string",
                    "description": "The ID of the ACL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Allow the ACL to be deleted, even if it contains entries. Defaults to false.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this ACL. It is important to note that changing this attribute will delete and recreate the ACL, and discard the current items in the ACL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "aclId",
                        "name"
                    ]
                }
            }
        },
        "fastly:index/ServiceVclBackend:ServiceVclBackend": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "An IPv4, hostname, or IPv6 address for the Backend\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoLoadbalance": {
                    "type": "boolean",
                    "description": "Denotes if this Backend should be included in the pool of backends that requests are load balanced against. Default `false`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "betweenBytesTimeout": {
                    "type": "integer",
                    "description": "How long to wait between bytes in milliseconds. Default `10000`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectTimeout": {
                    "type": "integer",
                    "description": "How long to wait for a timeout in milliseconds. Default `1000`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorThreshold": {
                    "type": "integer",
                    "description": "Number of errors to allow before the Backend is marked as down. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "firstByteTimeout": {
                    "type": "integer",
                    "description": "How long to wait for the first bytes in milliseconds. Default `15000`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthcheck": {
                    "type": "string",
                    "description": "Name of a defined `healthcheck` to assign to this backend\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConn": {
                    "type": "integer",
                    "description": "Maximum number of connections for this Backend. Default `200`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxTlsVersion": {
                    "type": "string",
                    "description": "Maximum allowed TLS version on SSL connections to this backend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minTlsVersion": {
                    "type": "string",
                    "description": "Minimum allowed TLS version on SSL connections to this backend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name for this Backend. Must be unique to this Service. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideHost": {
                    "type": "string",
                    "description": "The hostname to override the Host header\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port number on which the Backend responds. Default `80`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestCondition": {
                    "type": "string",
                    "description": "Name of a condition, which if met, will select this backend during a request.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shield": {
                    "type": "string",
                    "description": "The POP of the shield designated to reduce inbound load. Valid values for `shield` are included in the `GET /datacenters` API response\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCaCert": {
                    "type": "string",
                    "description": "CA certificate attached to origin.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCertHostname": {
                    "type": "string",
                    "description": "Overrides ssl_hostname, but only for cert verification. Does not affect SNI at all\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCheckCert": {
                    "type": "boolean",
                    "description": "Be strict about checking SSL certs. Default `true`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCiphers": {
                    "type": "string",
                    "description": "Cipher list consisting of one or more cipher strings separated by colons. Commas or spaces are also acceptable separators but colons are normally used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientCert": {
                    "type": "string",
                    "description": "Client certificate attached to origin. Used when connecting to the backend\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientKey": {
                    "type": "string",
                    "description": "Client key attached to origin. Used when connecting to the backend\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslHostname": {
                    "type": "string",
                    "description": "Used for both SNI during the TLS handshake and to validate the cert\n",
                    "deprecationMessage": "Use ssl_cert_hostname and ssl_sni_hostname instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslSniHostname": {
                    "type": "string",
                    "description": "Overrides ssl_hostname, but only for SNI in the handshake. Does not affect cert validation at all\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Whether or not to use SSL to reach the Backend. Default `false`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "description": "The [portion of traffic](https://docs.fastly.com/en/guides/load-balancing-configuration#how-weight-affects-load-balancing) to send to this Backend. Each Backend receives weight / total of the traffic. Default `100`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name"
            ]
        },
        "fastly:index/ServiceVclCacheSetting:ServiceVclCacheSetting": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "One of cache, pass, or restart, as defined on Fastly's documentation under \"[Caching action descriptions](https://docs.fastly.com/en/guides/controlling-caching#caching-action-descriptions)\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cacheCondition": {
                    "type": "string",
                    "description": "Name of already defined `condition` used to test whether this settings object should be used. This `condition` must be of type `CACHE`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Unique name for this Cache Setting. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staleTtl": {
                    "type": "integer",
                    "description": "Max \"Time To Live\" for stale (unreachable) objects\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "description": "The Time-To-Live (TTL) for the object\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "fastly:index/ServiceVclCondition:ServiceVclCondition": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The unique name for the condition. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "integer",
                    "description": "A number used to determine the order in which multiple conditions execute. Lower numbers execute first. Default `10`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statement": {
                    "type": "string",
                    "description": "The statement used to determine if the condition is met\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of condition, either `REQUEST` (req), `RESPONSE` (req, resp), or `CACHE` (req, beresp)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "statement",
                "type"
            ]
        },
        "fastly:index/ServiceVclDictionary:ServiceVclDictionary": {
            "properties": {
                "dictionaryId": {
                    "type": "string",
                    "description": "The ID of the dictionary\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Allow the dictionary to be deleted, even if it contains entries. Defaults to false.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this dictionary. It is important to note that changing this attribute will delete and recreate the dictionary, and discard the current items in the dictionary\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writeOnly": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dictionaryId",
                        "name"
                    ]
                }
            }
        },
        "fastly:index/ServiceVclDirector:ServiceVclDirector": {
            "properties": {
                "backends": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Names of defined backends to map the director to. Example: `[ \"origin1\", \"origin2\" ]`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "comment": {
                    "type": "string",
                    "description": "An optional comment about the Director\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Unique name for this Director. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "quorum": {
                    "type": "integer",
                    "description": "Percentage of capacity that needs to be up for the director itself to be considered up. Default `75`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retries": {
                    "type": "integer",
                    "description": "How many backends to search if it fails. Default `5`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shield": {
                    "type": "string",
                    "description": "Selected POP to serve as a \"shield\" for backends. Valid values for `shield` are included in the [`GET /datacenters`](https://developer.fastly.com/reference/api/utils/datacenter/) API response\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "integer",
                    "description": "Type of load balance group to use. Integer, 1 to 4. Values: `1` (random), `3` (hash), `4` (client). Default `1`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "backends",
                "name"
            ]
        },
        "fastly:index/ServiceVclDomain:ServiceVclDomain": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "An optional comment about the Domain.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The domain that this Service will respond to. It is important to note that changing this attribute will delete and recreate the resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "fastly:index/ServiceVclDynamicsnippet:ServiceVclDynamicsnippet": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A name that is unique across \"regular\" and \"dynamic\" VCL Snippet configuration blocks. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority determines the ordering for multiple snippets. Lower numbers execute first. Defaults to `100`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snippetId": {
                    "type": "string",
                    "description": "The ID of the dynamic snippet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The location in generated VCL where the snippet should be placed (can be one of `init`, `recv`, `hash`, `hit`, `miss`, `pass`, `fetch`, `error`, `deliver`, `log` or `none`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "snippetId",
                        "type"
                    ]
                }
            }
        },
        "fastly:index/ServiceVclGzip:ServiceVclGzip": {
            "properties": {
                "cacheCondition": {
                    "type": "string",
                    "description": "Name of already defined `condition` controlling when this gzip configuration applies. This `condition` must be of type `CACHE`. For detailed information about Conditionals, see [Fastly's Documentation on Conditionals](https://docs.fastly.com/en/guides/using-conditions)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "contentTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The content-type for each type of content you wish to have dynamically gzip'ed. Example: `[\"text/html\", \"text/css\"]`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "File extensions for each file type to dynamically gzip. Example: `[\"css\", \"js\"]`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A name to refer to this gzip condition. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "fastly:index/ServiceVclHeader:ServiceVclHeader": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The Header manipulation action to take; must be one of `set`, `append`, `delete`, `regex`, or `regex_repeat`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cacheCondition": {
                    "type": "string",
                    "description": "Name of already defined `condition` to apply. This `condition` must be of type `CACHE`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destination": {
                    "type": "string",
                    "description": "The name of the header that is going to be affected by the Action\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreIfSet": {
                    "type": "boolean",
                    "description": "Don't add the header if it is already. (Only applies to `set` action.). Default `false`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Unique name for this header attribute. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "integer",
                    "description": "Lower priorities execute first. Default: `100`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "string",
                    "description": "Regular expression to use (Only applies to `regex` and `regex_repeat` actions.)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestCondition": {
                    "type": "string",
                    "description": "Name of already defined `condition` to apply. This `condition` must be of type `REQUEST`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "Name of already defined `condition` to apply. This `condition` must be of type `RESPONSE`. For detailed information about Conditionals, see [Fastly's Documentation on Conditionals](https://docs.fastly.com/en/guides/using-conditions)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "Variable to be used as a source for the header content (Does not apply to `delete` action.)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "substitution": {
                    "type": "string",
                    "description": "Value to substitute in place of regular expression. (Only applies to `regex` and `regex_repeat`.)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The Request type on which to apply the selected Action; must be one of `request`, `fetch`, `cache` or `response`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "action",
                "destination",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "action",
                        "destination",
                        "name",
                        "regex",
                        "source",
                        "substitution",
                        "type"
                    ]
                }
            }
        },
        "fastly:index/ServiceVclHealthcheck:ServiceVclHealthcheck": {
            "properties": {
                "checkInterval": {
                    "type": "integer",
                    "description": "How often to run the Healthcheck in milliseconds. Default `5000`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expectedResponse": {
                    "type": "integer",
                    "description": "The status code expected from the host. Default `200`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "The Host header to send for this Healthcheck\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpVersion": {
                    "type": "string",
                    "description": "Whether to use version 1.0 or 1.1 HTTP. Default `1.1`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "initial": {
                    "type": "integer",
                    "description": "When loading a config, the initial number of probes to be seen as OK. Default `3`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "Which HTTP method to use. Default `HEAD`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this Healthcheck. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to check\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "integer",
                    "description": "How many Healthchecks must succeed to be considered healthy. Default `3`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout in milliseconds. Default `500`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "integer",
                    "description": "The number of most recent Healthcheck queries to keep for this Healthcheck. Default `5`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "host",
                "name",
                "path"
            ]
        },
        "fastly:index/ServiceVclLoggingBigquery:ServiceVclLoggingBigquery": {
            "properties": {
                "dataset": {
                    "type": "string",
                    "description": "The ID of your BigQuery dataset\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "email": {
                    "type": "string",
                    "description": "The email for the service account with write access to your BigQuery dataset. If not provided, this will be pulled from a `FASTLY_BQ_EMAIL` environment variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "The logging format desired.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this BigQuery logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of your GCP project\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "Name of a condition to apply this logging.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "The secret key associated with the service account that has write access to your BigQuery table. If not provided, this will be pulled from the `FASTLY_BQ_SECRET_KEY` environment variable. Typical format for this is a private key in a string with newlines\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "table": {
                    "type": "string",
                    "description": "The ID of your BigQuery table\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "description": "BigQuery table name suffix template\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataset",
                "email",
                "name",
                "projectId",
                "secretKey",
                "table"
            ]
        },
        "fastly:index/ServiceVclLoggingBlobstorage:ServiceVclLoggingBlobstorage": {
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "The unique Azure Blob Storage namespace in which your data objects are stored\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip*level will default to 3. To specify a different level, leave compression*codec blank and explicitly set the level using gzip*level. Specifying both compression*codec and gzip_level in the same API request will result in an error.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "container": {
                    "type": "string",
                    "description": "The name of the Azure Blob Storage container in which to store logs\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fileMaxBytes": {
                    "type": "integer",
                    "description": "Maximum size of an uploaded log file, if non-zero.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache-style string or VCL variables to use for log formatting (default: `%h %l %u %t \"%r\" %\u003es %b`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify the Azure Blob Storage endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to. Must end with a trailing slash. If this field is left empty, the files will be saved in the container's root path\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently the logs should be transferred in seconds. Default `3600`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of the condition to apply\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sasToken": {
                    "type": "string",
                    "description": "The Azure shared access signature providing write access to the blob service objects. Be sure to update your token before it expires or the logging functionality will not work\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accountName",
                "container",
                "name",
                "sasToken"
            ]
        },
        "fastly:index/ServiceVclLoggingCloudfile:ServiceVclLoggingCloudfile": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Your Cloud File account access key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of your Cloud Files container\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip*level will default to 3. To specify a different level, leave compression*codec blank and explicitly set the level using gzip*level. Specifying both compression*codec and gzip_level in the same API request will result in an error.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Rackspace Cloud Files logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default `3600`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region to stream logs to. One of: DFW (Dallas), ORD (Chicago), IAD (Northern Virginia), LON (London), SYD (Sydney), HKG (Hong Kong)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for your Cloud Files account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bucketName",
                "name",
                "user"
            ]
        },
        "fastly:index/ServiceVclLoggingDatadog:ServiceVclLoggingDatadog": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache-style string or VCL variables to use for log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Datadog logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region that log data will be sent to. One of `US` or `EU`. Defaults to `US` if undefined\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of the condition to apply.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The API key from your Datadog account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceVclLoggingDigitalocean:ServiceVclLoggingDigitalocean": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Your DigitalOcean Spaces account access key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of the DigitalOcean Space\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip*level will default to 3. To specify a different level, leave compression*codec blank and explicitly set the level using gzip*level. Specifying both compression*codec and gzip_level in the same API request will result in an error.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the DigitalOcean Spaces endpoint (default `nyc3.digitaloceanspaces.com`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the DigitalOcean Spaces logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload logs to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default `3600`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "Your DigitalOcean Spaces account secret key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bucketName",
                "name",
                "secretKey"
            ]
        },
        "fastly:index/ServiceVclLoggingElasticsearch:ServiceVclLoggingElasticsearch": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache-style string or VCL variables to use for log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "The name of the Elasticsearch index to send documents (logs) to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Elasticsearch logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "BasicAuth password for Elasticsearch\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pipeline": {
                    "type": "string",
                    "description": "The ID of the Elasticsearch ingest pipeline to apply pre-process transformations to before indexing\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxBytes": {
                    "type": "integer",
                    "description": "The maximum number of logs sent in one request. Defaults to `0` for unbounded\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxEntries": {
                    "type": "integer",
                    "description": "The maximum number of bytes sent in one request. Defaults to `0` for unbounded\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of the condition to apply\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname used to verify the server's certificate. It can either be the Common Name (CN) or a Subject Alternative Name (SAN)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The Elasticsearch URL to stream logs to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "BasicAuth username for Elasticsearch\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index",
                "name",
                "url"
            ]
        },
        "fastly:index/ServiceVclLoggingFtp:ServiceVclLoggingFtp": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The FTP address to stream logs to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip*level will default to 3. To specify a different level, leave compression*codec blank and explicitly set the level using gzip*level. Specifying both compression*codec and gzip_level in the same API request will result in an error.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache-style string or VCL variables to use for log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the FTP logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password for the server (for anonymous use an email address)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload log files to. If the path ends in `/` then it is treated as a directory\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently the logs should be transferred, in seconds (Default `3600`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port number. Default: `21`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of the condition to apply.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for the server (can be `anonymous`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name",
                "password",
                "path",
                "user"
            ]
        },
        "fastly:index/ServiceVclLoggingGc:ServiceVclLoggingGc": {
            "properties": {
                "bucketName": {
                    "type": "string",
                    "description": "The name of the bucket in which to store the logs\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip*level will default to 3. To specify a different level, leave compression*codec blank and explicitly set the level using gzip*level. Specifying both compression*codec and gzip_level in the same API request will result in an error.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache-style string or VCL variables to use for log formatting\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (Default: 2)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this GCS endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "Path to store the files. Must end with a trailing slash. If this field is left empty, the files will be saved in the bucket's root path\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently the logs should be transferred, in seconds (Default 3600)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "Name of a condition to apply this logging.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "The secret key associated with the target gcs bucket on your account. You may optionally provide this secret via an environment variable, `FASTLY_GCS_SECRET_KEY`. A typical format for the key is PEM format, containing actual newline characters where required\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "Your Google Cloud Platform service account email address. The `client_email` field in your service account authentication JSON. You may optionally provide this via an environment variable, `FASTLY_GCS_EMAIL`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucketName",
                "name"
            ]
        },
        "fastly:index/ServiceVclLoggingGooglepubsub:ServiceVclLoggingGooglepubsub": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Google Cloud Pub/Sub logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of your Google Cloud Platform project\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "Your Google Cloud Platform account secret key. The `private_key` field in your service account authentication JSON. You may optionally provide this secret via an environment variable, `FASTLY_GOOGLE_PUBSUB_SECRET_KEY`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topic": {
                    "type": "string",
                    "description": "The Google Cloud Pub/Sub topic to which logs will be published\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "Your Google Cloud Platform service account email address. The `client_email` field in your service account authentication JSON. You may optionally provide this via an environment variable, `FASTLY_GOOGLE_PUBSUB_EMAIL`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "projectId",
                "secretKey",
                "topic",
                "user"
            ]
        },
        "fastly:index/ServiceVclLoggingHerokus:ServiceVclLoggingHerokus": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache-style string or VCL variables to use for log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Heroku logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The token to use for authentication (https://www.heroku.com/docs/customer-token-authentication-token/)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The URL to stream logs to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token",
                "url"
            ]
        },
        "fastly:index/ServiceVclLoggingHoneycomb:ServiceVclLoggingHoneycomb": {
            "properties": {
                "dataset": {
                    "type": "string",
                    "description": "The Honeycomb Dataset you want to log to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting. Your log must produce valid JSON that Honeycomb can ingest.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Honeycomb logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The Write Key from the Account page of your Honeycomb account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataset",
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceVclLoggingHttp:ServiceVclLoggingHttp": {
            "properties": {
                "contentType": {
                    "type": "string",
                    "description": "Value of the `Content-Type` header sent with the request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache-style string or VCL variables to use for log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headerName": {
                    "type": "string",
                    "description": "Custom header sent with the request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headerValue": {
                    "type": "string",
                    "description": "Value of the custom header sent with the request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jsonFormat": {
                    "type": "string",
                    "description": "Formats log entries as JSON. Can be either disabled (`0`), array of json (`1`), or newline delimited json (`2`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "HTTP method used for request. Can be either `POST` or `PUT`. Default `POST`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the HTTPS logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxBytes": {
                    "type": "integer",
                    "description": "The maximum number of bytes sent in one request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxEntries": {
                    "type": "integer",
                    "description": "The maximum number of logs sent in one request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of the condition to apply\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "Used during the TLS handshake to validate the certificate\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "URL that log data will be sent to. Must use the https protocol\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "url"
            ]
        },
        "fastly:index/ServiceVclLoggingKafka:ServiceVclLoggingKafka": {
            "properties": {
                "authMethod": {
                    "type": "string",
                    "description": "SASL authentication method. One of: plain, scram-sha-256, scram-sha-512\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "brokers": {
                    "type": "string",
                    "description": "A comma-separated list of IP addresses or hostnames of Kafka brokers\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. One of: `gzip`, `snappy`, `lz4`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Kafka logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parseLogKeyvals": {
                    "type": "boolean",
                    "description": "Enables parsing of key=value tuples from the beginning of a logline, turning them into record headers\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "SASL Pass\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestMaxBytes": {
                    "type": "integer",
                    "description": "Maximum size of log batch, if non-zero. Defaults to 0 for unbounded\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requiredAcks": {
                    "type": "string",
                    "description": "The Number of acknowledgements a leader must receive before a write is considered successful. One of: `1` (default) One server needs to respond. `0` No servers need to respond. `-1` Wait for all in-sync replicas to respond\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topic": {
                    "type": "string",
                    "description": "The Kafka topic to send logs to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTls": {
                    "type": "boolean",
                    "description": "Whether to use TLS for secure logging. Can be either `true` or `false`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "SASL User\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "brokers",
                "name",
                "topic"
            ]
        },
        "fastly:index/ServiceVclLoggingKinese:ServiceVclLoggingKinese": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "The AWS access key to be used to write to the stream\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iamRole": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the IAM role granting Fastly access to Kinesis. Not required if `access_key` and `secret_key` are provided.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Kinesis logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region the stream resides in. (Default: `us-east-1`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "The AWS secret access key to authenticate with\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topic": {
                    "type": "string",
                    "description": "The Kinesis stream name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "topic"
            ]
        },
        "fastly:index/ServiceVclLoggingLogentry:ServiceVclLoggingLogentry": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache-style string or VCL variables to use for log formatting\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (Default: 2)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Logentries logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port number configured in Logentries\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "Name of blockAttributes condition to apply this logging.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "Use token based authentication (https://logentries.com/doc/input-token/)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTls": {
                    "type": "boolean",
                    "description": "Whether to use TLS for secure logging\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceVclLoggingLoggly:ServiceVclLoggingLoggly": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache-style string or VCL variables to use for log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Loggly logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The token to use for authentication (https://www.loggly.com/docs/customer-token-authentication-token/).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceVclLoggingLogshuttle:ServiceVclLoggingLogshuttle": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Log Shuttle logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The data authentication token associated with this endpoint\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your Log Shuttle endpoint URL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token",
                "url"
            ]
        },
        "fastly:index/ServiceVclLoggingNewrelic:ServiceVclLoggingNewrelic": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting. Your log must produce valid JSON that New Relic Logs can ingest.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the New Relic logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region that log data will be sent to. Default: `US`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of the condition to apply.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The Insert API key from the Account page of your New Relic account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceVclLoggingOpenstack:ServiceVclLoggingOpenstack": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Your OpenStack account access key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of your OpenStack container\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip*level will default to 3. To specify a different level, leave compression*codec blank and explicitly set the level using gzip*level. Specifying both compression*codec and gzip_level in the same API request will result in an error.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the OpenStack logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "Path to store the files. Must end with a trailing slash. If this field is left empty, the files will be saved in the bucket's root path\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently the logs should be transferred, in seconds. Default `3600`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Your OpenStack auth url\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for your OpenStack account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bucketName",
                "name",
                "url",
                "user"
            ]
        },
        "fastly:index/ServiceVclLoggingPapertrail:ServiceVclLoggingPapertrail": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The address of the Papertrail endpoint\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver` if `format_version` is set to `1`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this Papertrail endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed in `vcl_deliver`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port associated with the address where the Papertrail endpoint can be accessed\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name",
                "port"
            ]
        },
        "fastly:index/ServiceVclLoggingS3:ServiceVclLoggingS3": {
            "properties": {
                "acl": {
                    "type": "string",
                    "description": "The AWS [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl) to use for objects uploaded to the S3 bucket. Options are: `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, `bucket-owner-read`, `bucket-owner-full-control`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of the bucket in which to store the logs\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip*level will default to 3. To specify a different level, leave compression*codec blank and explicitly set the level using gzip*level. Specifying both compression*codec and gzip_level in the same API request will result in an error.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "If you created the S3 bucket outside of `us-east-1`, then specify the corresponding bucket endpoint. Example: `s3-us-west-2.amazonaws.com`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache-style string or VCL variables to use for log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (Default: 2).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the S3 logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "Path to store the files. Must end with a trailing slash. If this field is left empty, the files will be saved in the bucket's root path\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently the logs should be transferred, in seconds. Default `3600`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redundancy": {
                    "type": "string",
                    "description": "The S3 storage class (redundancy level). Should be one of: `standard`, `intelligent_tiering`, `standard_ia`, `onezone_ia`, `glacier`, `glacier_ir`, `deep_archive`, or `reduced_redundancy`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "Name of blockAttributes condition to apply this logging.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "s3AccessKey": {
                    "type": "string",
                    "description": "AWS Access Key of an account with the required permissions to post logs. It is **strongly** recommended you create a separate IAM user with permissions to only operate on this Bucket. This key will be not be encrypted. Not required if `iam_role` is provided. You can provide this key via an environment variable, `FASTLY_S3_ACCESS_KEY`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "s3IamRole": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the IAM role granting Fastly access to S3. Not required if `access_key` and `secret_key` are provided. You can provide this value via an environment variable, `FASTLY_S3_IAM_ROLE`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "s3SecretKey": {
                    "type": "string",
                    "description": "AWS Secret Key of an account with the required permissions to post logs. It is **strongly** recommended you create a separate IAM user with permissions to only operate on this Bucket. This secret will be not be encrypted. Not required if `iam_role` is provided. You can provide this secret via an environment variable, `FASTLY_S3_SECRET_KEY`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverSideEncryption": {
                    "type": "string",
                    "description": "Specify what type of server side encryption should be used. Can be either `AES256` or `aws:kms`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverSideEncryptionKmsKeyId": {
                    "type": "string",
                    "description": "Optional server-side KMS Key Id. Must be set if server*side*encryption is set to `aws:kms`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucketName",
                "name"
            ]
        },
        "fastly:index/ServiceVclLoggingScalyr:ServiceVclLoggingScalyr": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache style log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Scalyr logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region that log data will be sent to. One of `US` or `EU`. Defaults to `US` if undefined\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of an existing condition in the configured endpoint, or leave blank to always execute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The token to use for authentication (https://www.scalyr.com/keys)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ]
        },
        "fastly:index/ServiceVclLoggingSftp:ServiceVclLoggingSftp": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The SFTP address to stream logs to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip*level will default to 3. To specify a different level, leave compression*codec blank and explicitly set the level using gzip*level. Specifying both compression*codec and gzip_level in the same API request will result in an error.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache-style string or VCL variables to use for log formatting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gzipLevel": {
                    "type": "integer",
                    "description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the SFTP logging endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password for the server. If both `password` and `secret_key` are passed, `secret_key` will be preferred\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to upload log files to. If the path ends in `/` then it is treated as a directory\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "How frequently log files are finalized so they can be available for reading (in seconds, default `3600`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port the SFTP service listens on. (Default: `22`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of the condition to apply.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "The SSH private key for the server. If both `password` and `secret_key` are passed, `secret_key` will be preferred\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sshKnownHosts": {
                    "type": "string",
                    "description": "A list of host keys for all hosts we can connect to over SFTP\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timestampFormat": {
                    "type": "string",
                    "description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The username for the server\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name",
                "path",
                "sshKnownHosts",
                "user"
            ]
        },
        "fastly:index/ServiceVclLoggingSplunk:ServiceVclLoggingSplunk": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache-style string or VCL variables to use for log formatting (default: `%h %l %u %t \"%r\" %\u003es %b`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify the Splunk endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "The name of the condition to apply\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format. You can provide this certificate via an environment variable, `FASTLY_SPLUNK_CA_CERT`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The Splunk token to be used for authentication\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The Splunk URL to stream logs to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTls": {
                    "type": "boolean",
                    "description": "Whether to use TLS for secure logging. Default: `false`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "token",
                "url"
            ]
        },
        "fastly:index/ServiceVclLoggingSumologic:ServiceVclLoggingSumologic": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Apache-style string or VCL variables to use for log formatting\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (Default: 2)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this Sumologic endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "Name of blockAttributes condition to apply this logging.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The URL to Sumologic collector endpoint\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "url"
            ]
        },
        "fastly:index/ServiceVclLoggingSyslog:ServiceVclLoggingSyslog": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "A hostname or IPv4 address of the Syslog endpoint\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "Apache-style string or VCL variables to use for log formatting\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatVersion": {
                    "type": "integer",
                    "description": "The version of the custom logging format. Can be either 1 or 2. (Default: 2)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageType": {
                    "type": "string",
                    "description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this Syslog endpoint. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placement": {
                    "type": "string",
                    "description": "Where in the generated VCL the logging call should be placed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port associated with the address where the Syslog endpoint can be accessed. Default `514`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseCondition": {
                    "type": "string",
                    "description": "Name of blockAttributes condition to apply this logging.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "description": "A secure certificate to authenticate the server with. Must be in PEM format. You can provide this certificate via an environment variable, `FASTLY_SYSLOG_CA_CERT`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "description": "The client certificate used to make authenticated requests. Must be in PEM format. You can provide this certificate via an environment variable, `FASTLY_SYSLOG_CLIENT_CERT`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "description": "The client private key used to make authenticated requests. Must be in PEM format. You can provide this key via an environment variable, `FASTLY_SYSLOG_CLIENT_KEY`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "Used during the TLS handshake to validate the certificate\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "Whether to prepend each message with a specific token\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTls": {
                    "type": "boolean",
                    "description": "Whether to use TLS for secure logging. Default `false`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name"
            ]
        },
        "fastly:index/ServiceVclRequestSetting:ServiceVclRequestSetting": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Allows you to terminate request handling and immediately perform an action. When set it can be `lookup` or `pass` (Ignore the cache completely)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bypassBusyWait": {
                    "type": "boolean",
                    "description": "Disable collapsed forwarding, so you don't wait for other objects to origin\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultHost": {
                    "type": "string",
                    "description": "Sets the host header\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forceMiss": {
                    "type": "boolean",
                    "description": "Force a cache miss for the request. If specified, can be `true` or `false`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forceSsl": {
                    "type": "boolean",
                    "description": "Forces the request to use SSL (Redirects a non-SSL request to SSL)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geoHeaders": {
                    "type": "boolean",
                    "description": "Injects Fastly-Geo-Country, Fastly-Geo-City, and Fastly-Geo-Region into the request headers\n",
                    "deprecationMessage": "'geo_headers' attribute has been deprecated and will be removed in the next major version release",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hashKeys": {
                    "type": "string",
                    "description": "Comma separated list of varnish request object fields that should be in the hash key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStaleAge": {
                    "type": "integer",
                    "description": "How old an object is allowed to be to serve `stale-if-error` or `stale-while-revalidate`, in seconds\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Unique name to refer to this Request Setting. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestCondition": {
                    "type": "string",
                    "description": "Name of already defined `condition` to determine if this request setting should be applied\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timerSupport": {
                    "type": "boolean",
                    "description": "Injects the X-Timer info into the request for viewing origin fetch durations\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "xff": {
                    "type": "string",
                    "description": "X-Forwarded-For, should be `clear`, `leave`, `append`, `append_all`, or `overwrite`. Default `append`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "fastly:index/ServiceVclResponseObject:ServiceVclResponseObject": {
            "properties": {
                "cacheCondition": {
                    "type": "string",
                    "description": "Name of already defined `condition` to check after we have retrieved an object. If the condition passes then deliver this Request Object instead. This `condition` must be of type `CACHE`. For detailed information about Conditionals, see [Fastly's Documentation on Conditionals](https://docs.fastly.com/en/guides/using-conditions)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "content": {
                    "type": "string",
                    "description": "The content to deliver for the response object\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "contentType": {
                    "type": "string",
                    "description": "The MIME type of the content\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify this Response Object. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestCondition": {
                    "type": "string",
                    "description": "Name of already defined `condition` to be checked during the request phase. If the condition passes then this object will be delivered. This `condition` must be of type `REQUEST`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "response": {
                    "type": "string",
                    "description": "The HTTP Response. Default `OK`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "integer",
                    "description": "The HTTP Status Code. Default `200`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "fastly:index/ServiceVclSnippet:ServiceVclSnippet": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The VCL code that specifies exactly what the snippet does\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A name that is unique across \"regular\" and \"dynamic\" VCL Snippet configuration blocks. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority determines the ordering for multiple snippets. Lower numbers execute first. Defaults to `100`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The location in generated VCL where the snippet should be placed (can be one of `init`, `recv`, `hash`, `hit`, `miss`, `pass`, `fetch`, `error`, `deliver`, `log` or `none`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content",
                "name",
                "type"
            ]
        },
        "fastly:index/ServiceVclVcl:ServiceVclVcl": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The custom VCL code to upload\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "main": {
                    "type": "boolean",
                    "description": "If `true`, use this block as the main configuration. If `false`, use this block as an includable library. Only a single VCL block can be marked as the main block. Default is `false`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A unique name for this configuration block. It is important to note that changing this attribute will delete and recreate the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content",
                "name"
            ]
        },
        "fastly:index/ServiceVclWaf:ServiceVclWaf": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "A flag used to completely disable a Web Application Firewall. This is intended to only be used in an emergency\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefetchCondition": {
                    "type": "string",
                    "description": "The `condition` to determine which requests will be run past your Fastly WAF. This `condition` must be of type `PREFETCH`. For detailed information about Conditionals, see [Fastly's Documentation on Conditionals](https://docs.fastly.com/en/guides/using-conditions)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseObject": {
                    "type": "string",
                    "description": "The name of the response object used by the Web Application Firewall\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wafId": {
                    "type": "string",
                    "description": "The ID of the WAF\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "responseObject"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "responseObject",
                        "wafId"
                    ]
                }
            }
        },
        "fastly:index/ServiceWafConfigurationRule:ServiceWafConfigurationRule": {
            "properties": {
                "modsecRuleId": {
                    "type": "integer",
                    "description": "The Web Application Firewall rule's modsecurity ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "description": "The Web Application Firewall rule's revision. The latest revision will be used if this is not provided\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "The Web Application Firewall rule's status. Allowed values are (`log`, `block` and `score`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "modsecRuleId",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "modsecRuleId",
                        "revision",
                        "status"
                    ]
                }
            }
        },
        "fastly:index/ServiceWafConfigurationRuleExclusion:ServiceWafConfigurationRuleExclusion": {
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "A conditional expression in VCL used to determine if the condition is met\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "exclusionType": {
                    "type": "string",
                    "description": "The type of rule exclusion. Values are `rule` to exclude the specified rule(s), or `waf` to disable the Web Application Firewall\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modsecRuleIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Set of modsecurity IDs to be excluded. No rules should be provided when `exclusion_type` is `waf`. The rules need to be configured on the Web Application Firewall to be excluded\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of rule exclusion\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "number": {
                    "type": "integer",
                    "description": "The numeric ID assigned to the WAF Rule Exclusion\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "condition",
                "exclusionType",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "condition",
                        "exclusionType",
                        "name",
                        "number"
                    ]
                }
            }
        },
        "fastly:index/TlsSubscriptionManagedDnsChallenge:TlsSubscriptionManagedDnsChallenge": {
            "properties": {
                "recordName": {
                    "type": "string",
                    "description": "The name of the DNS record to add. For example `example.com`. Best accessed through a `for` expression to filter the relevant record.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recordType": {
                    "type": "string",
                    "description": "The type of DNS record to add, e.g. `A`, or `CNAME`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recordValue": {
                    "type": "string",
                    "description": "The value to which the DNS record should point, e.g. `xxxxx.fastly-validations.com`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "recordName",
                        "recordType",
                        "recordValue"
                    ]
                }
            }
        },
        "fastly:index/TlsSubscriptionManagedHttpChallenge:TlsSubscriptionManagedHttpChallenge": {
            "properties": {
                "recordName": {
                    "type": "string",
                    "description": "The name of the DNS record to add. For example `example.com`. Best accessed through a `for` expression to filter the relevant record.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recordType": {
                    "type": "string",
                    "description": "The type of DNS record to add, e.g. `A`, or `CNAME`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recordValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list with the value(s) to which the DNS record should point.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "recordName",
                        "recordType",
                        "recordValues"
                    ]
                }
            }
        },
        "fastly:index/getDatacentersPop:getDatacentersPop": {
            "properties": {
                "code": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "group": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shield": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "code",
                "group",
                "name",
                "shield"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "fastly:index/getServicesDetail:getServicesDetail": {
            "properties": {
                "comment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "createdAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customerId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comment",
                "createdAt",
                "customerId",
                "id",
                "name",
                "type",
                "updatedAt",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "fastly:index/getTlsConfigurationDnsRecord:getTlsConfigurationDnsRecord": {
            "properties": {
                "recordType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recordValue": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "recordType",
                "recordValue",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "fastly:index/getWafRulesRule:getWafRulesRule": {
            "properties": {
                "latestRevisionNumber": {
                    "type": "integer",
                    "description": "The rule's latest revision.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modsecRuleId": {
                    "type": "integer",
                    "description": "The rule's modsecurity ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The rule's type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "latestRevisionNumber",
                "modsecRuleId",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the fastly package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiKey": {
                "type": "string",
                "description": "Fastly API Key from https://app.fastly.com/#account\n"
            },
            "baseUrl": {
                "type": "string",
                "description": "Fastly API URL\n"
            },
            "forceHttp2": {
                "type": "boolean",
                "description": "Set this to `true` to disable HTTP/1.x fallback mechanism that the underlying Go library will attempt upon connection to\n`api.fastly.com:443` by default. This may slightly improve the provider's performance and reduce unnecessary TLS\nhandshakes. Default: `false`\n"
            },
            "noAuth": {
                "type": "boolean",
                "description": "Set to `true` if your configuration only consumes data sources that do not require authentication, such as\n`fastly_ip_ranges`\n"
            }
        },
        "inputProperties": {
            "apiKey": {
                "type": "string",
                "description": "Fastly API Key from https://app.fastly.com/#account\n"
            },
            "baseUrl": {
                "type": "string",
                "description": "Fastly API URL\n"
            },
            "forceHttp2": {
                "type": "boolean",
                "description": "Set this to `true` to disable HTTP/1.x fallback mechanism that the underlying Go library will attempt upon connection to\n`api.fastly.com:443` by default. This may slightly improve the provider's performance and reduce unnecessary TLS\nhandshakes. Default: `false`\n"
            },
            "noAuth": {
                "type": "boolean",
                "description": "Set to `true` if your configuration only consumes data sources that do not require authentication, such as\n`fastly_ip_ranges`\n"
            }
        }
    },
    "resources": {
        "fastly:index/serviceACLEntries:ServiceACLEntries": {
            "description": "\n\n\n## Import\n\nThis is an example of the import command being applied to the resource named `fastly_service_acl_entries.entries` The resource ID is a combined value of the `service_id` and `acl_id` separated by a forward slash.\n\n```sh\n $ pulumi import fastly:index/serviceACLEntries:ServiceACLEntries entries xxxxxxxxxxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxx\n```\n\n If Terraform is already managing remote acl entries against a resource being imported then the user will be asked to remove it from the existing Terraform state. The following is an example of the Terraform state command to remove the resource named `fastly_service_acl_entries.entries` from the Terraform state file. $ terraform state rm fastly_service_acl_entries.entries ",
            "properties": {
                "aclId": {
                    "type": "string",
                    "description": "The ID of the ACL that the items belong to\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceACLEntriesEntry:ServiceACLEntriesEntry"
                    },
                    "description": "ACL Entries\n"
                },
                "manageEntries": {
                    "type": "boolean",
                    "description": "Whether to reapply changes if the state of the entries drifts, i.e. if entries are managed externally\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the Service that the ACL belongs to\n"
                }
            },
            "required": [
                "aclId",
                "serviceId"
            ],
            "inputProperties": {
                "aclId": {
                    "type": "string",
                    "description": "The ID of the ACL that the items belong to\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceACLEntriesEntry:ServiceACLEntriesEntry"
                    },
                    "description": "ACL Entries\n"
                },
                "manageEntries": {
                    "type": "boolean",
                    "description": "Whether to reapply changes if the state of the entries drifts, i.e. if entries are managed externally\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the Service that the ACL belongs to\n"
                }
            },
            "requiredInputs": [
                "aclId",
                "serviceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceACLEntries resources.\n",
                "properties": {
                    "aclId": {
                        "type": "string",
                        "description": "The ID of the ACL that the items belong to\n"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceACLEntriesEntry:ServiceACLEntriesEntry"
                        },
                        "description": "ACL Entries\n"
                    },
                    "manageEntries": {
                        "type": "boolean",
                        "description": "Whether to reapply changes if the state of the entries drifts, i.e. if entries are managed externally\n"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "The ID of the Service that the ACL belongs to\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/serviceAuthorization:ServiceAuthorization": {
            "description": "Configures authorization with granular permissions to services. Users can be granted rights for services on different levels.\n\nThe Service Authorization resource requires a user id, service id and an optional permission.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst demo = new fastly.ServiceVcl(\"demo\", {});\n//...\nconst user = new fastly.User(\"user\", {});\n// ...\nconst auth = new fastly.ServiceAuthorization(\"auth\", {\n    serviceId: demo.id,\n    userId: user.id,\n    permission: \"purge_all\",\n});\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\ndemo = fastly.ServiceVcl(\"demo\")\n#...\nuser = fastly.User(\"user\")\n# ...\nauth = fastly.ServiceAuthorization(\"auth\",\n    service_id=demo.id,\n    user_id=user.id,\n    permission=\"purge_all\")\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demo = new Fastly.ServiceVcl(\"demo\", new Fastly.ServiceVclArgs\n        {\n        });\n        //...\n        var user = new Fastly.User(\"user\", new Fastly.UserArgs\n        {\n        });\n        // ...\n        var auth = new Fastly.ServiceAuthorization(\"auth\", new Fastly.ServiceAuthorizationArgs\n        {\n            ServiceId = demo.Id,\n            UserId = user.Id,\n            Permission = \"purge_all\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdemo, err := fastly.NewServiceVcl(ctx, \"demo\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tuser, err := fastly.NewUser(ctx, \"user\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = fastly.NewServiceAuthorization(ctx, \"auth\", \u0026fastly.ServiceAuthorizationArgs{\n\t\t\tServiceId:  demo.ID(),\n\t\t\tUserId:     user.ID(),\n\t\t\tPermission: pulumi.String(\"purge_all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Fastly Service Authorization can be imported using their user ID, e.g.\n\n```sh\n $ pulumi import fastly:index/serviceAuthorization:ServiceAuthorization demo xxxxxxxxxxxxxxxxxxxx\n```\n\n ",
            "properties": {
                "permission": {
                    "type": "string",
                    "description": "The permissions to grant the user. Can be `full`, `read_only`, `purge_select` or `purge_all`.\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the service to grant permissions for.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the user which will receive the granted permissions.\n"
                }
            },
            "required": [
                "permission",
                "serviceId",
                "userId"
            ],
            "inputProperties": {
                "permission": {
                    "type": "string",
                    "description": "The permissions to grant the user. Can be `full`, `read_only`, `purge_select` or `purge_all`.\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the service to grant permissions for.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the user which will receive the granted permissions.\n"
                }
            },
            "requiredInputs": [
                "permission",
                "serviceId",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceAuthorization resources.\n",
                "properties": {
                    "permission": {
                        "type": "string",
                        "description": "The permissions to grant the user. Can be `full`, `read_only`, `purge_select` or `purge_all`.\n"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "The ID of the service to grant permissions for.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of the user which will receive the granted permissions.\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/serviceCompute:ServiceCompute": {
            "description": "\n\n\n## Import\n\nFastly Services can be imported using their service ID, e.g.\n\n```sh\n $ pulumi import fastly:index/serviceCompute:ServiceCompute demo xxxxxxxxxxxxxxxxxxxx\n```\n\n By default, either the active version will be imported, or the latest version if no version is active. Alternatively, a specific version of the service can be selected by appending an `@` followed by the version number to the service ID, e.g.\n\n```sh\n $ pulumi import fastly:index/serviceCompute:ServiceCompute demo xxxxxxxxxxxxxxxxxxxx@2\n```\n\n ",
            "properties": {
                "activate": {
                    "type": "boolean",
                    "description": "Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`\n"
                },
                "activeVersion": {
                    "type": "integer",
                    "description": "The currently active version of your Fastly Service\n"
                },
                "backends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeBackend:ServiceComputeBackend"
                    }
                },
                "clonedVersion": {
                    "type": "integer",
                    "description": "The latest cloned version by the provider\n"
                },
                "comment": {
                    "type": "string",
                    "description": "Description field for the service. Default `Managed by Terraform`\n"
                },
                "dictionaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeDictionary:ServiceComputeDictionary"
                    }
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeDomain:ServiceComputeDomain"
                    },
                    "description": "A set of Domain names to serve as entry points for your Service\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Services that are active cannot be destroyed. In order to destroy the Service, set `force_destroy` to `true`. Default `false`\n"
                },
                "imported": {
                    "type": "boolean",
                    "description": "Used internally by the provider to temporarily indicate if the service is being imported, and is reset to false once the import is finished\n"
                },
                "loggingBigqueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingBigquery:ServiceComputeLoggingBigquery"
                    }
                },
                "loggingBlobstorages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingBlobstorage:ServiceComputeLoggingBlobstorage"
                    }
                },
                "loggingCloudfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingCloudfile:ServiceComputeLoggingCloudfile"
                    }
                },
                "loggingDatadogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingDatadog:ServiceComputeLoggingDatadog"
                    }
                },
                "loggingDigitaloceans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingDigitalocean:ServiceComputeLoggingDigitalocean"
                    }
                },
                "loggingElasticsearches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingElasticsearch:ServiceComputeLoggingElasticsearch"
                    }
                },
                "loggingFtps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingFtp:ServiceComputeLoggingFtp"
                    }
                },
                "loggingGcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingGc:ServiceComputeLoggingGc"
                    }
                },
                "loggingGooglepubsubs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingGooglepubsub:ServiceComputeLoggingGooglepubsub"
                    }
                },
                "loggingHeroku": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingHeroku:ServiceComputeLoggingHeroku"
                    }
                },
                "loggingHoneycombs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingHoneycomb:ServiceComputeLoggingHoneycomb"
                    }
                },
                "loggingHttps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingHttp:ServiceComputeLoggingHttp"
                    }
                },
                "loggingKafkas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingKafka:ServiceComputeLoggingKafka"
                    }
                },
                "loggingKineses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingKinese:ServiceComputeLoggingKinese"
                    }
                },
                "loggingLogentries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingLogentry:ServiceComputeLoggingLogentry"
                    }
                },
                "loggingLogglies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingLoggly:ServiceComputeLoggingLoggly"
                    }
                },
                "loggingLogshuttles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingLogshuttle:ServiceComputeLoggingLogshuttle"
                    }
                },
                "loggingNewrelics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingNewrelic:ServiceComputeLoggingNewrelic"
                    }
                },
                "loggingOpenstacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingOpenstack:ServiceComputeLoggingOpenstack"
                    }
                },
                "loggingPapertrails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingPapertrail:ServiceComputeLoggingPapertrail"
                    }
                },
                "loggingS3s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingS3:ServiceComputeLoggingS3"
                    }
                },
                "loggingScalyrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingScalyr:ServiceComputeLoggingScalyr"
                    }
                },
                "loggingSftps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingSftp:ServiceComputeLoggingSftp"
                    }
                },
                "loggingSplunks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingSplunk:ServiceComputeLoggingSplunk"
                    }
                },
                "loggingSumologics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingSumologic:ServiceComputeLoggingSumologic"
                    }
                },
                "loggingSyslogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingSyslog:ServiceComputeLoggingSyslog"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name for the Service to create\n"
                },
                "package": {
                    "$ref": "#/types/fastly:index/ServiceComputePackage:ServiceComputePackage",
                    "description": "The `package` block supports uploading or modifying Wasm packages for use in a Fastly Compute@Edge service. See Fastly's documentation on [Compute@Edge](https://developer.fastly.com/learning/compute/)\n"
                },
                "reuse": {
                    "type": "boolean",
                    "description": "Services that are active cannot be destroyed. If set to `true` a service Terraform intends to destroy will instead be\ndeactivated (allowing it to be reused by importing it into another Terraform project). If `false`, attempting to destroy\nan active service will cause an error. Default `false`\n"
                },
                "versionComment": {
                    "type": "string",
                    "description": "Description field for the version\n"
                }
            },
            "required": [
                "activeVersion",
                "clonedVersion",
                "domains",
                "imported",
                "name",
                "package"
            ],
            "inputProperties": {
                "activate": {
                    "type": "boolean",
                    "description": "Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`\n"
                },
                "backends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeBackend:ServiceComputeBackend"
                    }
                },
                "comment": {
                    "type": "string",
                    "description": "Description field for the service. Default `Managed by Terraform`\n"
                },
                "dictionaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeDictionary:ServiceComputeDictionary"
                    }
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeDomain:ServiceComputeDomain"
                    },
                    "description": "A set of Domain names to serve as entry points for your Service\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Services that are active cannot be destroyed. In order to destroy the Service, set `force_destroy` to `true`. Default `false`\n"
                },
                "loggingBigqueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingBigquery:ServiceComputeLoggingBigquery"
                    }
                },
                "loggingBlobstorages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingBlobstorage:ServiceComputeLoggingBlobstorage"
                    }
                },
                "loggingCloudfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingCloudfile:ServiceComputeLoggingCloudfile"
                    }
                },
                "loggingDatadogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingDatadog:ServiceComputeLoggingDatadog"
                    }
                },
                "loggingDigitaloceans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingDigitalocean:ServiceComputeLoggingDigitalocean"
                    }
                },
                "loggingElasticsearches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingElasticsearch:ServiceComputeLoggingElasticsearch"
                    }
                },
                "loggingFtps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingFtp:ServiceComputeLoggingFtp"
                    }
                },
                "loggingGcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingGc:ServiceComputeLoggingGc"
                    }
                },
                "loggingGooglepubsubs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingGooglepubsub:ServiceComputeLoggingGooglepubsub"
                    }
                },
                "loggingHeroku": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingHeroku:ServiceComputeLoggingHeroku"
                    }
                },
                "loggingHoneycombs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingHoneycomb:ServiceComputeLoggingHoneycomb"
                    }
                },
                "loggingHttps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingHttp:ServiceComputeLoggingHttp"
                    }
                },
                "loggingKafkas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingKafka:ServiceComputeLoggingKafka"
                    }
                },
                "loggingKineses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingKinese:ServiceComputeLoggingKinese"
                    }
                },
                "loggingLogentries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingLogentry:ServiceComputeLoggingLogentry"
                    }
                },
                "loggingLogglies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingLoggly:ServiceComputeLoggingLoggly"
                    }
                },
                "loggingLogshuttles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingLogshuttle:ServiceComputeLoggingLogshuttle"
                    }
                },
                "loggingNewrelics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingNewrelic:ServiceComputeLoggingNewrelic"
                    }
                },
                "loggingOpenstacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingOpenstack:ServiceComputeLoggingOpenstack"
                    }
                },
                "loggingPapertrails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingPapertrail:ServiceComputeLoggingPapertrail"
                    }
                },
                "loggingS3s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingS3:ServiceComputeLoggingS3"
                    }
                },
                "loggingScalyrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingScalyr:ServiceComputeLoggingScalyr"
                    }
                },
                "loggingSftps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingSftp:ServiceComputeLoggingSftp"
                    }
                },
                "loggingSplunks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingSplunk:ServiceComputeLoggingSplunk"
                    }
                },
                "loggingSumologics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingSumologic:ServiceComputeLoggingSumologic"
                    }
                },
                "loggingSyslogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceComputeLoggingSyslog:ServiceComputeLoggingSyslog"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name for the Service to create\n"
                },
                "package": {
                    "$ref": "#/types/fastly:index/ServiceComputePackage:ServiceComputePackage",
                    "description": "The `package` block supports uploading or modifying Wasm packages for use in a Fastly Compute@Edge service. See Fastly's documentation on [Compute@Edge](https://developer.fastly.com/learning/compute/)\n"
                },
                "reuse": {
                    "type": "boolean",
                    "description": "Services that are active cannot be destroyed. If set to `true` a service Terraform intends to destroy will instead be\ndeactivated (allowing it to be reused by importing it into another Terraform project). If `false`, attempting to destroy\nan active service will cause an error. Default `false`\n"
                },
                "versionComment": {
                    "type": "string",
                    "description": "Description field for the version\n"
                }
            },
            "requiredInputs": [
                "domains",
                "package"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceCompute resources.\n",
                "properties": {
                    "activate": {
                        "type": "boolean",
                        "description": "Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`\n"
                    },
                    "activeVersion": {
                        "type": "integer",
                        "description": "The currently active version of your Fastly Service\n"
                    },
                    "backends": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeBackend:ServiceComputeBackend"
                        }
                    },
                    "clonedVersion": {
                        "type": "integer",
                        "description": "The latest cloned version by the provider\n"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Description field for the service. Default `Managed by Terraform`\n"
                    },
                    "dictionaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeDictionary:ServiceComputeDictionary"
                        }
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeDomain:ServiceComputeDomain"
                        },
                        "description": "A set of Domain names to serve as entry points for your Service\n"
                    },
                    "forceDestroy": {
                        "type": "boolean",
                        "description": "Services that are active cannot be destroyed. In order to destroy the Service, set `force_destroy` to `true`. Default `false`\n"
                    },
                    "imported": {
                        "type": "boolean",
                        "description": "Used internally by the provider to temporarily indicate if the service is being imported, and is reset to false once the import is finished\n"
                    },
                    "loggingBigqueries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingBigquery:ServiceComputeLoggingBigquery"
                        }
                    },
                    "loggingBlobstorages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingBlobstorage:ServiceComputeLoggingBlobstorage"
                        }
                    },
                    "loggingCloudfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingCloudfile:ServiceComputeLoggingCloudfile"
                        }
                    },
                    "loggingDatadogs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingDatadog:ServiceComputeLoggingDatadog"
                        }
                    },
                    "loggingDigitaloceans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingDigitalocean:ServiceComputeLoggingDigitalocean"
                        }
                    },
                    "loggingElasticsearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingElasticsearch:ServiceComputeLoggingElasticsearch"
                        }
                    },
                    "loggingFtps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingFtp:ServiceComputeLoggingFtp"
                        }
                    },
                    "loggingGcs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingGc:ServiceComputeLoggingGc"
                        }
                    },
                    "loggingGooglepubsubs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingGooglepubsub:ServiceComputeLoggingGooglepubsub"
                        }
                    },
                    "loggingHeroku": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingHeroku:ServiceComputeLoggingHeroku"
                        }
                    },
                    "loggingHoneycombs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingHoneycomb:ServiceComputeLoggingHoneycomb"
                        }
                    },
                    "loggingHttps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingHttp:ServiceComputeLoggingHttp"
                        }
                    },
                    "loggingKafkas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingKafka:ServiceComputeLoggingKafka"
                        }
                    },
                    "loggingKineses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingKinese:ServiceComputeLoggingKinese"
                        }
                    },
                    "loggingLogentries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingLogentry:ServiceComputeLoggingLogentry"
                        }
                    },
                    "loggingLogglies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingLoggly:ServiceComputeLoggingLoggly"
                        }
                    },
                    "loggingLogshuttles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingLogshuttle:ServiceComputeLoggingLogshuttle"
                        }
                    },
                    "loggingNewrelics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingNewrelic:ServiceComputeLoggingNewrelic"
                        }
                    },
                    "loggingOpenstacks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingOpenstack:ServiceComputeLoggingOpenstack"
                        }
                    },
                    "loggingPapertrails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingPapertrail:ServiceComputeLoggingPapertrail"
                        }
                    },
                    "loggingS3s": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingS3:ServiceComputeLoggingS3"
                        }
                    },
                    "loggingScalyrs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingScalyr:ServiceComputeLoggingScalyr"
                        }
                    },
                    "loggingSftps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingSftp:ServiceComputeLoggingSftp"
                        }
                    },
                    "loggingSplunks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingSplunk:ServiceComputeLoggingSplunk"
                        }
                    },
                    "loggingSumologics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingSumologic:ServiceComputeLoggingSumologic"
                        }
                    },
                    "loggingSyslogs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceComputeLoggingSyslog:ServiceComputeLoggingSyslog"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name for the Service to create\n"
                    },
                    "package": {
                        "$ref": "#/types/fastly:index/ServiceComputePackage:ServiceComputePackage",
                        "description": "The `package` block supports uploading or modifying Wasm packages for use in a Fastly Compute@Edge service. See Fastly's documentation on [Compute@Edge](https://developer.fastly.com/learning/compute/)\n"
                    },
                    "reuse": {
                        "type": "boolean",
                        "description": "Services that are active cannot be destroyed. If set to `true` a service Terraform intends to destroy will instead be\ndeactivated (allowing it to be reused by importing it into another Terraform project). If `false`, attempting to destroy\nan active service will cause an error. Default `false`\n"
                    },
                    "versionComment": {
                        "type": "string",
                        "description": "Description field for the version\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/serviceDictionaryItems:ServiceDictionaryItems": {
            "description": "\n\n\n## Import\n\nThis is an example of the import command being applied to the resource named `fastly_service_dictionary_items.items` The resource ID is a combined value of the `service_id` and `dictionary_id` separated by a forward slash.\n\n```sh\n $ pulumi import fastly:index/serviceDictionaryItems:ServiceDictionaryItems items xxxxxxxxxxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxx\n```\n\n If Terraform is already managing remote dictionary items against a resource being imported then the user will be asked to remove it from the existing Terraform state. The following is an example of the Terraform state command to remove the resource named `fastly_service_dictionary_items.items` from the Terraform state file. $ terraform state rm fastly_service_dictionary_items.items ",
            "properties": {
                "dictionaryId": {
                    "type": "string",
                    "description": "The ID of the dictionary that the items belong to\n"
                },
                "items": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "A map representing an entry in the dictionary, (key/value)\n"
                },
                "manageItems": {
                    "type": "boolean",
                    "description": "Whether to reapply changes if the state of the items drifts, i.e. if items are managed externally\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the service that the dictionary belongs to\n"
                }
            },
            "required": [
                "dictionaryId",
                "serviceId"
            ],
            "inputProperties": {
                "dictionaryId": {
                    "type": "string",
                    "description": "The ID of the dictionary that the items belong to\n"
                },
                "items": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "A map representing an entry in the dictionary, (key/value)\n"
                },
                "manageItems": {
                    "type": "boolean",
                    "description": "Whether to reapply changes if the state of the items drifts, i.e. if items are managed externally\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the service that the dictionary belongs to\n"
                }
            },
            "requiredInputs": [
                "dictionaryId",
                "serviceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceDictionaryItems resources.\n",
                "properties": {
                    "dictionaryId": {
                        "type": "string",
                        "description": "The ID of the dictionary that the items belong to\n"
                    },
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "A map representing an entry in the dictionary, (key/value)\n"
                    },
                    "manageItems": {
                        "type": "boolean",
                        "description": "Whether to reapply changes if the state of the items drifts, i.e. if items are managed externally\n"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "The ID of the service that the dictionary belongs to\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/serviceDynamicSnippetContent:ServiceDynamicSnippetContent": {
            "description": "\n\n\n## Import\n\nThis is an example of the import command being applied to the resource named `fastly_service_dynamic_snippet_content.content` The resource ID is a combined value of the `service_id` and `snippet_id` separated by a forward slash.\n\n```sh\n $ pulumi import fastly:index/serviceDynamicSnippetContent:ServiceDynamicSnippetContent content xxxxxxxxxxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxx\n```\n\n If Terraform is already managing remote content against a resource being imported then the user will be asked to remove it from the existing Terraform state. The following is an example of the Terraform state command to remove the resource named `fastly_service_dynamic_snippet_content.content` from the Terraform state file. $ terraform state rm fastly_service_dynamic_snippet_content.content ",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The VCL code that specifies exactly what the snippet does\n"
                },
                "manageSnippets": {
                    "type": "boolean",
                    "description": "Whether to reapply changes if the state of the snippets drifts, i.e. if snippets are managed externally\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the service that the dynamic snippet belongs to\n"
                },
                "snippetId": {
                    "type": "string",
                    "description": "The ID of the dynamic snippet that the content belong to\n"
                }
            },
            "required": [
                "content",
                "serviceId",
                "snippetId"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "The VCL code that specifies exactly what the snippet does\n"
                },
                "manageSnippets": {
                    "type": "boolean",
                    "description": "Whether to reapply changes if the state of the snippets drifts, i.e. if snippets are managed externally\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the service that the dynamic snippet belongs to\n"
                },
                "snippetId": {
                    "type": "string",
                    "description": "The ID of the dynamic snippet that the content belong to\n"
                }
            },
            "requiredInputs": [
                "content",
                "serviceId",
                "snippetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceDynamicSnippetContent resources.\n",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "The VCL code that specifies exactly what the snippet does\n"
                    },
                    "manageSnippets": {
                        "type": "boolean",
                        "description": "Whether to reapply changes if the state of the snippets drifts, i.e. if snippets are managed externally\n"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "The ID of the service that the dynamic snippet belongs to\n"
                    },
                    "snippetId": {
                        "type": "string",
                        "description": "The ID of the dynamic snippet that the content belong to\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/serviceVcl:ServiceVcl": {
            "description": "Provides a Fastly Service, representing the configuration for a website, app,\nAPI, or anything else to be served through Fastly. A Service encompasses Domains\nand Backends.\n\nThe Service resource requires a domain name that is correctly set up to direct\ntraffic to the Fastly service. See Fastly's guide on [Adding CNAME Records][fastly-cname]\non their documentation site for guidance.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst demo = new fastly.ServiceVcl(\"demo\", {\n    backends: [{\n        address: \"127.0.0.1\",\n        name: \"localhost\",\n        port: 80,\n    }],\n    domains: [{\n        comment: \"demo\",\n        name: \"demo.notexample.com\",\n    }],\n    forceDestroy: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\ndemo = fastly.ServiceVcl(\"demo\",\n    backends=[fastly.ServiceVclBackendArgs(\n        address=\"127.0.0.1\",\n        name=\"localhost\",\n        port=80,\n    )],\n    domains=[fastly.ServiceVclDomainArgs(\n        comment=\"demo\",\n        name=\"demo.notexample.com\",\n    )],\n    force_destroy=True)\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demo = new Fastly.ServiceVcl(\"demo\", new Fastly.ServiceVclArgs\n        {\n            Backends = \n            {\n                new Fastly.Inputs.ServiceVclBackendArgs\n                {\n                    Address = \"127.0.0.1\",\n                    Name = \"localhost\",\n                    Port = 80,\n                },\n            },\n            Domains = \n            {\n                new Fastly.Inputs.ServiceVclDomainArgs\n                {\n                    Comment = \"demo\",\n                    Name = \"demo.notexample.com\",\n                },\n            },\n            ForceDestroy = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := fastly.NewServiceVcl(ctx, \"demo\", \u0026fastly.ServiceVclArgs{\n\t\t\tBackends: ServiceVclBackendArray{\n\t\t\t\t\u0026ServiceVclBackendArgs{\n\t\t\t\t\tAddress: pulumi.String(\"127.0.0.1\"),\n\t\t\t\t\tName:    pulumi.String(\"localhost\"),\n\t\t\t\t\tPort:    pulumi.Int(80),\n\t\t\t\t},\n\t\t\t},\n\t\t\tDomains: ServiceVclDomainArray{\n\t\t\t\t\u0026ServiceVclDomainArgs{\n\t\t\t\t\tComment: pulumi.String(\"demo\"),\n\t\t\t\t\tName:    pulumi.String(\"demo.notexample.com\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tForceDestroy: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\nBasic usage with an Amazon S3 Website and that removes the `x-amz-request-id` header:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst demo = new fastly.ServiceVcl(\"demo\", {\n    backends: [{\n        address: \"demo.notexample.com.s3-website-us-west-2.amazonaws.com\",\n        name: \"AWS S3 hosting\",\n        overrideHost: \"demo.notexample.com.s3-website-us-west-2.amazonaws.com\",\n        port: 80,\n    }],\n    domains: [{\n        comment: \"demo\",\n        name: \"demo.notexample.com\",\n    }],\n    forceDestroy: true,\n    gzips: [{\n        contentTypes: [\n            \"text/html\",\n            \"text/css\",\n        ],\n        extensions: [\n            \"css\",\n            \"js\",\n        ],\n        name: \"file extensions and content types\",\n    }],\n    headers: [{\n        action: \"delete\",\n        destination: \"http.x-amz-request-id\",\n        name: \"remove x-amz-request-id\",\n        type: \"cache\",\n    }],\n});\nconst website = new aws.s3.BucketV2(\"website\", {\n    acl: \"public-read\",\n    websites: [{\n        errorDocument: \"error.html\",\n        indexDocument: \"index.html\",\n    }],\n});\n```\n\nBasic usage with [custom\nVCL](https://docs.fastly.com/vcl/custom-vcl/uploading-custom-vcl/):\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\nimport * as fs from \"fs\";\n\nconst demo = new fastly.ServiceVcl(\"demo\", {\n    backends: [{\n        address: \"127.0.0.1\",\n        name: \"localhost\",\n        port: 80,\n    }],\n    domains: [{\n        comment: \"demo\",\n        name: \"demo.notexample.com\",\n    }],\n    forceDestroy: true,\n    vcls: [\n        {\n            content: fs.readFileSync(`./my_custom_main.vcl`, \"utf-8\"),\n            main: true,\n            name: \"my_custom_main_vcl\",\n        },\n        {\n            content: fs.readFileSync(`./my_custom_library.vcl`, \"utf-8\"),\n            name: \"my_custom_library_vcl\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\ndemo = fastly.ServiceVcl(\"demo\",\n    backends=[fastly.ServiceVclBackendArgs(\n        address=\"127.0.0.1\",\n        name=\"localhost\",\n        port=80,\n    )],\n    domains=[fastly.ServiceVclDomainArgs(\n        comment=\"demo\",\n        name=\"demo.notexample.com\",\n    )],\n    force_destroy=True,\n    vcls=[\n        fastly.ServiceVclVclArgs(\n            content=(lambda path: open(path).read())(f\"{path['module']}/my_custom_main.vcl\"),\n            main=True,\n            name=\"my_custom_main_vcl\",\n        ),\n        fastly.ServiceVclVclArgs(\n            content=(lambda path: open(path).read())(f\"{path['module']}/my_custom_library.vcl\"),\n            name=\"my_custom_library_vcl\",\n        ),\n    ])\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demo = new Fastly.ServiceVcl(\"demo\", new Fastly.ServiceVclArgs\n        {\n            Backends = \n            {\n                new Fastly.Inputs.ServiceVclBackendArgs\n                {\n                    Address = \"127.0.0.1\",\n                    Name = \"localhost\",\n                    Port = 80,\n                },\n            },\n            Domains = \n            {\n                new Fastly.Inputs.ServiceVclDomainArgs\n                {\n                    Comment = \"demo\",\n                    Name = \"demo.notexample.com\",\n                },\n            },\n            ForceDestroy = true,\n            Vcls = \n            {\n                new Fastly.Inputs.ServiceVclVclArgs\n                {\n                    Content = File.ReadAllText($\"{path.Module}/my_custom_main.vcl\"),\n                    Main = true,\n                    Name = \"my_custom_main_vcl\",\n                },\n                new Fastly.Inputs.ServiceVclVclArgs\n                {\n                    Content = File.ReadAllText($\"{path.Module}/my_custom_library.vcl\"),\n                    Name = \"my_custom_library_vcl\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := fastly.NewServiceVcl(ctx, \"demo\", \u0026fastly.ServiceVclArgs{\n\t\t\tBackends: ServiceVclBackendArray{\n\t\t\t\t\u0026ServiceVclBackendArgs{\n\t\t\t\t\tAddress: pulumi.String(\"127.0.0.1\"),\n\t\t\t\t\tName:    pulumi.String(\"localhost\"),\n\t\t\t\t\tPort:    pulumi.Int(80),\n\t\t\t\t},\n\t\t\t},\n\t\t\tDomains: ServiceVclDomainArray{\n\t\t\t\t\u0026ServiceVclDomainArgs{\n\t\t\t\t\tComment: pulumi.String(\"demo\"),\n\t\t\t\t\tName:    pulumi.String(\"demo.notexample.com\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tForceDestroy: pulumi.Bool(true),\n\t\t\tVcls: ServiceVclVclArray{\n\t\t\t\t\u0026ServiceVclVclArgs{\n\t\t\t\t\tContent: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/my_custom_main.vcl\")),\n\t\t\t\t\tMain:    pulumi.Bool(true),\n\t\t\t\t\tName:    pulumi.String(\"my_custom_main_vcl\"),\n\t\t\t\t},\n\t\t\t\t\u0026ServiceVclVclArgs{\n\t\t\t\t\tContent: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/my_custom_library.vcl\")),\n\t\t\t\t\tName:    pulumi.String(\"my_custom_library_vcl\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\nBasic usage with [custom Director](https://developer.fastly.com/reference/api/load-balancing/directors/director/):\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst demo = new fastly.ServiceVcl(\"demo\", {\n    backends: [\n        {\n            address: \"127.0.0.1\",\n            name: \"origin1\",\n            port: 80,\n        },\n        {\n            address: \"127.0.0.2\",\n            name: \"origin2\",\n            port: 80,\n        },\n    ],\n    directors: [{\n        backends: [\n            \"origin1\",\n            \"origin2\",\n        ],\n        name: \"mydirector\",\n        quorum: 0,\n        type: 3,\n    }],\n    domains: [{\n        comment: \"demo\",\n        name: \"demo.notexample.com\",\n    }],\n    forceDestroy: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\ndemo = fastly.ServiceVcl(\"demo\",\n    backends=[\n        fastly.ServiceVclBackendArgs(\n            address=\"127.0.0.1\",\n            name=\"origin1\",\n            port=80,\n        ),\n        fastly.ServiceVclBackendArgs(\n            address=\"127.0.0.2\",\n            name=\"origin2\",\n            port=80,\n        ),\n    ],\n    directors=[fastly.ServiceVclDirectorArgs(\n        backends=[\n            \"origin1\",\n            \"origin2\",\n        ],\n        name=\"mydirector\",\n        quorum=0,\n        type=3,\n    )],\n    domains=[fastly.ServiceVclDomainArgs(\n        comment=\"demo\",\n        name=\"demo.notexample.com\",\n    )],\n    force_destroy=True)\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demo = new Fastly.ServiceVcl(\"demo\", new Fastly.ServiceVclArgs\n        {\n            Backends = \n            {\n                new Fastly.Inputs.ServiceVclBackendArgs\n                {\n                    Address = \"127.0.0.1\",\n                    Name = \"origin1\",\n                    Port = 80,\n                },\n                new Fastly.Inputs.ServiceVclBackendArgs\n                {\n                    Address = \"127.0.0.2\",\n                    Name = \"origin2\",\n                    Port = 80,\n                },\n            },\n            Directors = \n            {\n                new Fastly.Inputs.ServiceVclDirectorArgs\n                {\n                    Backends = \n                    {\n                        \"origin1\",\n                        \"origin2\",\n                    },\n                    Name = \"mydirector\",\n                    Quorum = 0,\n                    Type = 3,\n                },\n            },\n            Domains = \n            {\n                new Fastly.Inputs.ServiceVclDomainArgs\n                {\n                    Comment = \"demo\",\n                    Name = \"demo.notexample.com\",\n                },\n            },\n            ForceDestroy = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := fastly.NewServiceVcl(ctx, \"demo\", \u0026fastly.ServiceVclArgs{\n\t\t\tBackends: ServiceVclBackendArray{\n\t\t\t\t\u0026ServiceVclBackendArgs{\n\t\t\t\t\tAddress: pulumi.String(\"127.0.0.1\"),\n\t\t\t\t\tName:    pulumi.String(\"origin1\"),\n\t\t\t\t\tPort:    pulumi.Int(80),\n\t\t\t\t},\n\t\t\t\t\u0026ServiceVclBackendArgs{\n\t\t\t\t\tAddress: pulumi.String(\"127.0.0.2\"),\n\t\t\t\t\tName:    pulumi.String(\"origin2\"),\n\t\t\t\t\tPort:    pulumi.Int(80),\n\t\t\t\t},\n\t\t\t},\n\t\t\tDirectors: ServiceVclDirectorArray{\n\t\t\t\t\u0026ServiceVclDirectorArgs{\n\t\t\t\t\tBackends: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"origin1\"),\n\t\t\t\t\t\tpulumi.String(\"origin2\"),\n\t\t\t\t\t},\n\t\t\t\t\tName:   pulumi.String(\"mydirector\"),\n\t\t\t\t\tQuorum: pulumi.Int(0),\n\t\t\t\t\tType:   pulumi.Int(3),\n\t\t\t\t},\n\t\t\t},\n\t\t\tDomains: ServiceVclDomainArray{\n\t\t\t\t\u0026ServiceVclDomainArgs{\n\t\t\t\t\tComment: pulumi.String(\"demo\"),\n\t\t\t\t\tName:    pulumi.String(\"demo.notexample.com\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tForceDestroy: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\nBasic usage with [Web Application Firewall](https://developer.fastly.com/reference/api/waf/):\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst demo = new fastly.ServiceVcl(\"demo\", {\n    backends: [{\n        address: \"127.0.0.1\",\n        name: \"origin1\",\n        port: 80,\n    }],\n    conditions: [\n        {\n            name: \"WAF_Prefetch\",\n            statement: \"req.backend.is_origin\",\n            type: \"PREFETCH\",\n        },\n        // This condition will always be false\n        // adding it to the response object created below\n        // prevents Fastly from returning a 403 on all of your traffic.\n        {\n            name: \"WAF_always_false\",\n            statement: \"false\",\n            type: \"REQUEST\",\n        },\n    ],\n    domains: [{\n        comment: \"demo\",\n        name: \"example.com\",\n    }],\n    forceDestroy: true,\n    responseObjects: [{\n        content: \"\u003chtml\u003e\u003cbody\u003eForbidden\u003c/body\u003e\u003c/html\u003e\",\n        contentType: \"text/html\",\n        name: \"WAF_Response\",\n        requestCondition: \"WAF_always_false\",\n        response: \"Forbidden\",\n        status: 403,\n    }],\n    waf: {\n        prefetchCondition: \"WAF_Prefetch\",\n        responseObject: \"WAF_Response\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\ndemo = fastly.ServiceVcl(\"demo\",\n    backends=[fastly.ServiceVclBackendArgs(\n        address=\"127.0.0.1\",\n        name=\"origin1\",\n        port=80,\n    )],\n    conditions=[\n        fastly.ServiceVclConditionArgs(\n            name=\"WAF_Prefetch\",\n            statement=\"req.backend.is_origin\",\n            type=\"PREFETCH\",\n        ),\n        fastly.ServiceVclConditionArgs(\n            name=\"WAF_always_false\",\n            statement=\"false\",\n            type=\"REQUEST\",\n        ),\n    ],\n    domains=[fastly.ServiceVclDomainArgs(\n        comment=\"demo\",\n        name=\"example.com\",\n    )],\n    force_destroy=True,\n    response_objects=[fastly.ServiceVclResponseObjectArgs(\n        content=\"\u003chtml\u003e\u003cbody\u003eForbidden\u003c/body\u003e\u003c/html\u003e\",\n        content_type=\"text/html\",\n        name=\"WAF_Response\",\n        request_condition=\"WAF_always_false\",\n        response=\"Forbidden\",\n        status=403,\n    )],\n    waf=fastly.ServiceVclWafArgs(\n        prefetch_condition=\"WAF_Prefetch\",\n        response_object=\"WAF_Response\",\n    ))\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demo = new Fastly.ServiceVcl(\"demo\", new Fastly.ServiceVclArgs\n        {\n            Backends = \n            {\n                new Fastly.Inputs.ServiceVclBackendArgs\n                {\n                    Address = \"127.0.0.1\",\n                    Name = \"origin1\",\n                    Port = 80,\n                },\n            },\n            Conditions = \n            {\n                new Fastly.Inputs.ServiceVclConditionArgs\n                {\n                    Name = \"WAF_Prefetch\",\n                    Statement = \"req.backend.is_origin\",\n                    Type = \"PREFETCH\",\n                },\n                new Fastly.Inputs.ServiceVclConditionArgs\n                {\n                    Name = \"WAF_always_false\",\n                    Statement = \"false\",\n                    Type = \"REQUEST\",\n                },\n            },\n            Domains = \n            {\n                new Fastly.Inputs.ServiceVclDomainArgs\n                {\n                    Comment = \"demo\",\n                    Name = \"example.com\",\n                },\n            },\n            ForceDestroy = true,\n            ResponseObjects = \n            {\n                new Fastly.Inputs.ServiceVclResponseObjectArgs\n                {\n                    Content = \"\u003chtml\u003e\u003cbody\u003eForbidden\u003c/body\u003e\u003c/html\u003e\",\n                    ContentType = \"text/html\",\n                    Name = \"WAF_Response\",\n                    RequestCondition = \"WAF_always_false\",\n                    Response = \"Forbidden\",\n                    Status = 403,\n                },\n            },\n            Waf = new Fastly.Inputs.ServiceVclWafArgs\n            {\n                PrefetchCondition = \"WAF_Prefetch\",\n                ResponseObject = \"WAF_Response\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := fastly.NewServiceVcl(ctx, \"demo\", \u0026fastly.ServiceVclArgs{\n\t\t\tBackends: ServiceVclBackendArray{\n\t\t\t\t\u0026ServiceVclBackendArgs{\n\t\t\t\t\tAddress: pulumi.String(\"127.0.0.1\"),\n\t\t\t\t\tName:    pulumi.String(\"origin1\"),\n\t\t\t\t\tPort:    pulumi.Int(80),\n\t\t\t\t},\n\t\t\t},\n\t\t\tConditions: ServiceVclConditionArray{\n\t\t\t\t\u0026ServiceVclConditionArgs{\n\t\t\t\t\tName:      pulumi.String(\"WAF_Prefetch\"),\n\t\t\t\t\tStatement: pulumi.String(\"req.backend.is_origin\"),\n\t\t\t\t\tType:      pulumi.String(\"PREFETCH\"),\n\t\t\t\t},\n\t\t\t\t\u0026ServiceVclConditionArgs{\n\t\t\t\t\tName:      pulumi.String(\"WAF_always_false\"),\n\t\t\t\t\tStatement: pulumi.String(\"false\"),\n\t\t\t\t\tType:      pulumi.String(\"REQUEST\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tDomains: ServiceVclDomainArray{\n\t\t\t\t\u0026ServiceVclDomainArgs{\n\t\t\t\t\tComment: pulumi.String(\"demo\"),\n\t\t\t\t\tName:    pulumi.String(\"example.com\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tForceDestroy: pulumi.Bool(true),\n\t\t\tResponseObjects: ServiceVclResponseObjectArray{\n\t\t\t\t\u0026ServiceVclResponseObjectArgs{\n\t\t\t\t\tContent:          pulumi.String(\"\u003chtml\u003e\u003cbody\u003eForbidden\u003c/body\u003e\u003c/html\u003e\"),\n\t\t\t\t\tContentType:      pulumi.String(\"text/html\"),\n\t\t\t\t\tName:             pulumi.String(\"WAF_Response\"),\n\t\t\t\t\tRequestCondition: pulumi.String(\"WAF_always_false\"),\n\t\t\t\t\tResponse:         pulumi.String(\"Forbidden\"),\n\t\t\t\t\tStatus:           pulumi.Int(403),\n\t\t\t\t},\n\t\t\t},\n\t\t\tWaf: \u0026ServiceVclWafArgs{\n\t\t\t\tPrefetchCondition: pulumi.String(\"WAF_Prefetch\"),\n\t\t\t\tResponseObject:    pulumi.String(\"WAF_Response\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n\u003e **Note:** For an AWS S3 Bucket, the Backend address is\n`\u003cdomain\u003e.s3-website-\u003cregion\u003e.amazonaws.com`. The `override_host` attribute\nshould be set to `\u003cbucket_name\u003e.s3-website-\u003cregion\u003e.amazonaws.com` in the `backend` block. See the\nFastly documentation on [Amazon S3][fastly-s3].\n\n[fastly-s3]: https://docs.fastly.com/en/guides/amazon-s3\n[fastly-cname]: https://docs.fastly.com/en/guides/adding-cname-records\n[fastly-conditionals]: https://docs.fastly.com/en/guides/using-conditions\n[fastly-sumologic]: https://developer.fastly.com/reference/api/logging/sumologic/\n[fastly-gcs]: https://developer.fastly.com/reference/api/logging/gcs/\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFastly Services can be imported using their service ID, e.g.\n\n```sh\n $ pulumi import fastly:index/serviceVcl:ServiceVcl demo xxxxxxxxxxxxxxxxxxxx\n```\n\n By default, either the active version will be imported, or the latest version if no version is active. Alternatively, a specific version of the service can be selected by appending an `@` followed by the version number to the service ID, e.g.\n\n```sh\n $ pulumi import fastly:index/serviceVcl:ServiceVcl demo xxxxxxxxxxxxxxxxxxxx@2\n```\n\n ",
            "properties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclAcl:ServiceVclAcl"
                    }
                },
                "activate": {
                    "type": "boolean",
                    "description": "Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`\n"
                },
                "activeVersion": {
                    "type": "integer",
                    "description": "The currently active version of your Fastly Service\n"
                },
                "backends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclBackend:ServiceVclBackend"
                    }
                },
                "cacheSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclCacheSetting:ServiceVclCacheSetting"
                    }
                },
                "clonedVersion": {
                    "type": "integer",
                    "description": "The latest cloned version by the provider\n"
                },
                "comment": {
                    "type": "string",
                    "description": "Description field for the service. Default `Managed by Terraform`\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclCondition:ServiceVclCondition"
                    }
                },
                "defaultHost": {
                    "type": "string",
                    "description": "The default hostname\n"
                },
                "defaultTtl": {
                    "type": "integer",
                    "description": "The default Time-to-live (TTL) for requests\n"
                },
                "dictionaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclDictionary:ServiceVclDictionary"
                    }
                },
                "directors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclDirector:ServiceVclDirector"
                    }
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclDomain:ServiceVclDomain"
                    },
                    "description": "A set of Domain names to serve as entry points for your Service\n"
                },
                "dynamicsnippets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclDynamicsnippet:ServiceVclDynamicsnippet"
                    }
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Services that are active cannot be destroyed. In order to destroy the Service, set `force_destroy` to `true`. Default `false`\n"
                },
                "gzips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclGzip:ServiceVclGzip"
                    }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclHeader:ServiceVclHeader"
                    }
                },
                "healthchecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclHealthcheck:ServiceVclHealthcheck"
                    }
                },
                "imported": {
                    "type": "boolean",
                    "description": "Used internally by the provider to temporarily indicate if the service is being imported, and is reset to false once the import is finished\n"
                },
                "loggingBigqueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingBigquery:ServiceVclLoggingBigquery"
                    }
                },
                "loggingBlobstorages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingBlobstorage:ServiceVclLoggingBlobstorage"
                    }
                },
                "loggingCloudfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingCloudfile:ServiceVclLoggingCloudfile"
                    }
                },
                "loggingDatadogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingDatadog:ServiceVclLoggingDatadog"
                    }
                },
                "loggingDigitaloceans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingDigitalocean:ServiceVclLoggingDigitalocean"
                    }
                },
                "loggingElasticsearches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingElasticsearch:ServiceVclLoggingElasticsearch"
                    }
                },
                "loggingFtps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingFtp:ServiceVclLoggingFtp"
                    }
                },
                "loggingGcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingGc:ServiceVclLoggingGc"
                    }
                },
                "loggingGooglepubsubs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingGooglepubsub:ServiceVclLoggingGooglepubsub"
                    }
                },
                "loggingHerokus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingHerokus:ServiceVclLoggingHerokus"
                    }
                },
                "loggingHoneycombs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingHoneycomb:ServiceVclLoggingHoneycomb"
                    }
                },
                "loggingHttps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingHttp:ServiceVclLoggingHttp"
                    }
                },
                "loggingKafkas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingKafka:ServiceVclLoggingKafka"
                    }
                },
                "loggingKineses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingKinese:ServiceVclLoggingKinese"
                    }
                },
                "loggingLogentries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingLogentry:ServiceVclLoggingLogentry"
                    }
                },
                "loggingLogglies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingLoggly:ServiceVclLoggingLoggly"
                    }
                },
                "loggingLogshuttles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingLogshuttle:ServiceVclLoggingLogshuttle"
                    }
                },
                "loggingNewrelics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingNewrelic:ServiceVclLoggingNewrelic"
                    }
                },
                "loggingOpenstacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingOpenstack:ServiceVclLoggingOpenstack"
                    }
                },
                "loggingPapertrails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingPapertrail:ServiceVclLoggingPapertrail"
                    }
                },
                "loggingS3s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingS3:ServiceVclLoggingS3"
                    }
                },
                "loggingScalyrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingScalyr:ServiceVclLoggingScalyr"
                    }
                },
                "loggingSftps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingSftp:ServiceVclLoggingSftp"
                    }
                },
                "loggingSplunks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingSplunk:ServiceVclLoggingSplunk"
                    }
                },
                "loggingSumologics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingSumologic:ServiceVclLoggingSumologic"
                    }
                },
                "loggingSyslogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingSyslog:ServiceVclLoggingSyslog"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name for the Service to create\n"
                },
                "requestSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclRequestSetting:ServiceVclRequestSetting"
                    }
                },
                "responseObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclResponseObject:ServiceVclResponseObject"
                    }
                },
                "reuse": {
                    "type": "boolean",
                    "description": "Services that are active cannot be destroyed. If set to `true` a service Terraform intends to destroy will instead be\ndeactivated (allowing it to be reused by importing it into another Terraform project). If `false`, attempting to destroy\nan active service will cause an error. Default `false`\n"
                },
                "snippets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclSnippet:ServiceVclSnippet"
                    }
                },
                "staleIfError": {
                    "type": "boolean",
                    "description": "Enables serving a stale object if there is an error\n"
                },
                "staleIfErrorTtl": {
                    "type": "integer",
                    "description": "The default time-to-live (TTL) for serving the stale object for the version\n"
                },
                "vcls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclVcl:ServiceVclVcl"
                    }
                },
                "versionComment": {
                    "type": "string",
                    "description": "Description field for the version\n"
                },
                "waf": {
                    "$ref": "#/types/fastly:index/ServiceVclWaf:ServiceVclWaf"
                }
            },
            "required": [
                "activeVersion",
                "clonedVersion",
                "domains",
                "imported",
                "name"
            ],
            "inputProperties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclAcl:ServiceVclAcl"
                    }
                },
                "activate": {
                    "type": "boolean",
                    "description": "Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`\n"
                },
                "backends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclBackend:ServiceVclBackend"
                    }
                },
                "cacheSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclCacheSetting:ServiceVclCacheSetting"
                    }
                },
                "comment": {
                    "type": "string",
                    "description": "Description field for the service. Default `Managed by Terraform`\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclCondition:ServiceVclCondition"
                    }
                },
                "defaultHost": {
                    "type": "string",
                    "description": "The default hostname\n"
                },
                "defaultTtl": {
                    "type": "integer",
                    "description": "The default Time-to-live (TTL) for requests\n"
                },
                "dictionaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclDictionary:ServiceVclDictionary"
                    }
                },
                "directors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclDirector:ServiceVclDirector"
                    }
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclDomain:ServiceVclDomain"
                    },
                    "description": "A set of Domain names to serve as entry points for your Service\n"
                },
                "dynamicsnippets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclDynamicsnippet:ServiceVclDynamicsnippet"
                    }
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Services that are active cannot be destroyed. In order to destroy the Service, set `force_destroy` to `true`. Default `false`\n"
                },
                "gzips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclGzip:ServiceVclGzip"
                    }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclHeader:ServiceVclHeader"
                    }
                },
                "healthchecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclHealthcheck:ServiceVclHealthcheck"
                    }
                },
                "loggingBigqueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingBigquery:ServiceVclLoggingBigquery"
                    }
                },
                "loggingBlobstorages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingBlobstorage:ServiceVclLoggingBlobstorage"
                    }
                },
                "loggingCloudfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingCloudfile:ServiceVclLoggingCloudfile"
                    }
                },
                "loggingDatadogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingDatadog:ServiceVclLoggingDatadog"
                    }
                },
                "loggingDigitaloceans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingDigitalocean:ServiceVclLoggingDigitalocean"
                    }
                },
                "loggingElasticsearches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingElasticsearch:ServiceVclLoggingElasticsearch"
                    }
                },
                "loggingFtps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingFtp:ServiceVclLoggingFtp"
                    }
                },
                "loggingGcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingGc:ServiceVclLoggingGc"
                    }
                },
                "loggingGooglepubsubs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingGooglepubsub:ServiceVclLoggingGooglepubsub"
                    }
                },
                "loggingHerokus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingHerokus:ServiceVclLoggingHerokus"
                    }
                },
                "loggingHoneycombs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingHoneycomb:ServiceVclLoggingHoneycomb"
                    }
                },
                "loggingHttps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingHttp:ServiceVclLoggingHttp"
                    }
                },
                "loggingKafkas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingKafka:ServiceVclLoggingKafka"
                    }
                },
                "loggingKineses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingKinese:ServiceVclLoggingKinese"
                    }
                },
                "loggingLogentries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingLogentry:ServiceVclLoggingLogentry"
                    }
                },
                "loggingLogglies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingLoggly:ServiceVclLoggingLoggly"
                    }
                },
                "loggingLogshuttles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingLogshuttle:ServiceVclLoggingLogshuttle"
                    }
                },
                "loggingNewrelics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingNewrelic:ServiceVclLoggingNewrelic"
                    }
                },
                "loggingOpenstacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingOpenstack:ServiceVclLoggingOpenstack"
                    }
                },
                "loggingPapertrails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingPapertrail:ServiceVclLoggingPapertrail"
                    }
                },
                "loggingS3s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingS3:ServiceVclLoggingS3"
                    }
                },
                "loggingScalyrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingScalyr:ServiceVclLoggingScalyr"
                    }
                },
                "loggingSftps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingSftp:ServiceVclLoggingSftp"
                    }
                },
                "loggingSplunks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingSplunk:ServiceVclLoggingSplunk"
                    }
                },
                "loggingSumologics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingSumologic:ServiceVclLoggingSumologic"
                    }
                },
                "loggingSyslogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclLoggingSyslog:ServiceVclLoggingSyslog"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The unique name for the Service to create\n"
                },
                "requestSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclRequestSetting:ServiceVclRequestSetting"
                    }
                },
                "responseObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclResponseObject:ServiceVclResponseObject"
                    }
                },
                "reuse": {
                    "type": "boolean",
                    "description": "Services that are active cannot be destroyed. If set to `true` a service Terraform intends to destroy will instead be\ndeactivated (allowing it to be reused by importing it into another Terraform project). If `false`, attempting to destroy\nan active service will cause an error. Default `false`\n"
                },
                "snippets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclSnippet:ServiceVclSnippet"
                    }
                },
                "staleIfError": {
                    "type": "boolean",
                    "description": "Enables serving a stale object if there is an error\n"
                },
                "staleIfErrorTtl": {
                    "type": "integer",
                    "description": "The default time-to-live (TTL) for serving the stale object for the version\n"
                },
                "vcls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceVclVcl:ServiceVclVcl"
                    }
                },
                "versionComment": {
                    "type": "string",
                    "description": "Description field for the version\n"
                },
                "waf": {
                    "$ref": "#/types/fastly:index/ServiceVclWaf:ServiceVclWaf"
                }
            },
            "requiredInputs": [
                "domains"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceVcl resources.\n",
                "properties": {
                    "acls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclAcl:ServiceVclAcl"
                        }
                    },
                    "activate": {
                        "type": "boolean",
                        "description": "Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`\n"
                    },
                    "activeVersion": {
                        "type": "integer",
                        "description": "The currently active version of your Fastly Service\n"
                    },
                    "backends": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclBackend:ServiceVclBackend"
                        }
                    },
                    "cacheSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclCacheSetting:ServiceVclCacheSetting"
                        }
                    },
                    "clonedVersion": {
                        "type": "integer",
                        "description": "The latest cloned version by the provider\n"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Description field for the service. Default `Managed by Terraform`\n"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclCondition:ServiceVclCondition"
                        }
                    },
                    "defaultHost": {
                        "type": "string",
                        "description": "The default hostname\n"
                    },
                    "defaultTtl": {
                        "type": "integer",
                        "description": "The default Time-to-live (TTL) for requests\n"
                    },
                    "dictionaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclDictionary:ServiceVclDictionary"
                        }
                    },
                    "directors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclDirector:ServiceVclDirector"
                        }
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclDomain:ServiceVclDomain"
                        },
                        "description": "A set of Domain names to serve as entry points for your Service\n"
                    },
                    "dynamicsnippets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclDynamicsnippet:ServiceVclDynamicsnippet"
                        }
                    },
                    "forceDestroy": {
                        "type": "boolean",
                        "description": "Services that are active cannot be destroyed. In order to destroy the Service, set `force_destroy` to `true`. Default `false`\n"
                    },
                    "gzips": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclGzip:ServiceVclGzip"
                        }
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclHeader:ServiceVclHeader"
                        }
                    },
                    "healthchecks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclHealthcheck:ServiceVclHealthcheck"
                        }
                    },
                    "imported": {
                        "type": "boolean",
                        "description": "Used internally by the provider to temporarily indicate if the service is being imported, and is reset to false once the import is finished\n"
                    },
                    "loggingBigqueries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingBigquery:ServiceVclLoggingBigquery"
                        }
                    },
                    "loggingBlobstorages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingBlobstorage:ServiceVclLoggingBlobstorage"
                        }
                    },
                    "loggingCloudfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingCloudfile:ServiceVclLoggingCloudfile"
                        }
                    },
                    "loggingDatadogs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingDatadog:ServiceVclLoggingDatadog"
                        }
                    },
                    "loggingDigitaloceans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingDigitalocean:ServiceVclLoggingDigitalocean"
                        }
                    },
                    "loggingElasticsearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingElasticsearch:ServiceVclLoggingElasticsearch"
                        }
                    },
                    "loggingFtps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingFtp:ServiceVclLoggingFtp"
                        }
                    },
                    "loggingGcs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingGc:ServiceVclLoggingGc"
                        }
                    },
                    "loggingGooglepubsubs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingGooglepubsub:ServiceVclLoggingGooglepubsub"
                        }
                    },
                    "loggingHerokus": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingHerokus:ServiceVclLoggingHerokus"
                        }
                    },
                    "loggingHoneycombs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingHoneycomb:ServiceVclLoggingHoneycomb"
                        }
                    },
                    "loggingHttps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingHttp:ServiceVclLoggingHttp"
                        }
                    },
                    "loggingKafkas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingKafka:ServiceVclLoggingKafka"
                        }
                    },
                    "loggingKineses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingKinese:ServiceVclLoggingKinese"
                        }
                    },
                    "loggingLogentries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingLogentry:ServiceVclLoggingLogentry"
                        }
                    },
                    "loggingLogglies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingLoggly:ServiceVclLoggingLoggly"
                        }
                    },
                    "loggingLogshuttles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingLogshuttle:ServiceVclLoggingLogshuttle"
                        }
                    },
                    "loggingNewrelics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingNewrelic:ServiceVclLoggingNewrelic"
                        }
                    },
                    "loggingOpenstacks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingOpenstack:ServiceVclLoggingOpenstack"
                        }
                    },
                    "loggingPapertrails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingPapertrail:ServiceVclLoggingPapertrail"
                        }
                    },
                    "loggingS3s": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingS3:ServiceVclLoggingS3"
                        }
                    },
                    "loggingScalyrs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingScalyr:ServiceVclLoggingScalyr"
                        }
                    },
                    "loggingSftps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingSftp:ServiceVclLoggingSftp"
                        }
                    },
                    "loggingSplunks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingSplunk:ServiceVclLoggingSplunk"
                        }
                    },
                    "loggingSumologics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingSumologic:ServiceVclLoggingSumologic"
                        }
                    },
                    "loggingSyslogs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclLoggingSyslog:ServiceVclLoggingSyslog"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name for the Service to create\n"
                    },
                    "requestSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclRequestSetting:ServiceVclRequestSetting"
                        }
                    },
                    "responseObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclResponseObject:ServiceVclResponseObject"
                        }
                    },
                    "reuse": {
                        "type": "boolean",
                        "description": "Services that are active cannot be destroyed. If set to `true` a service Terraform intends to destroy will instead be\ndeactivated (allowing it to be reused by importing it into another Terraform project). If `false`, attempting to destroy\nan active service will cause an error. Default `false`\n"
                    },
                    "snippets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclSnippet:ServiceVclSnippet"
                        }
                    },
                    "staleIfError": {
                        "type": "boolean",
                        "description": "Enables serving a stale object if there is an error\n"
                    },
                    "staleIfErrorTtl": {
                        "type": "integer",
                        "description": "The default time-to-live (TTL) for serving the stale object for the version\n"
                    },
                    "vcls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceVclVcl:ServiceVclVcl"
                        }
                    },
                    "versionComment": {
                        "type": "string",
                        "description": "Description field for the version\n"
                    },
                    "waf": {
                        "$ref": "#/types/fastly:index/ServiceVclWaf:ServiceVclWaf"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/serviceWafConfiguration:ServiceWafConfiguration": {
            "description": "Defines a set of Web Application Firewall configuration options that can be used to populate a service WAF. This resource will configure rules, thresholds and other settings for a WAF.\n\n\n\u003e **Warning:** This provider will take precedence over any changes you make in the UI or API. Such changes are likely to be reversed if you run the provider again.\n\n\n## Adding a WAF to an existing service\n\n\u003e **Warning:** A two-phase change is required when adding a WAF to an existing service\n\nWhen adding a `waf` to an existing `fastly.ServiceVcl` and at the same time adding a `fastly.ServiceWafConfiguration`\nresource with `waf_id = fastly_service_vcl.demo.waf[0].waf_id` might result with the in the following error:\n\n\u003e fastly_service_vcl.demo.waf is empty list of object\n\nFor this scenario, it's recommended to split the changes into two distinct steps:\n\n1. Add the `waf` block to the `fastly.ServiceVcl` and apply the changes\n2. Add the `fastly.ServiceWafConfiguration` to the HCL and apply the changes\n\n\n## Import\n\nThis is an example of the import command being applied to the resource named `fastly_service_waf_configuration.waf` The resource ID should be the WAF ID.\n\n```sh\n $ pulumi import fastly:index/serviceWafConfiguration:ServiceWafConfiguration waf xxxxxxxxxxxxxxxxxxxx\n```\n\n ",
            "properties": {
                "activate": {
                    "type": "boolean",
                    "description": "Conditionally prevents a new firewall version from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`\n"
                },
                "active": {
                    "type": "boolean",
                    "description": "Whether a specific firewall version is currently deployed\n"
                },
                "allowedHttpVersions": {
                    "type": "string",
                    "description": "Allowed HTTP versions\n"
                },
                "allowedMethods": {
                    "type": "string",
                    "description": "A space-separated list of HTTP method names\n"
                },
                "allowedRequestContentType": {
                    "type": "string",
                    "description": "Allowed request content types\n"
                },
                "allowedRequestContentTypeCharset": {
                    "type": "string",
                    "description": "Allowed request content type charset\n"
                },
                "argLength": {
                    "type": "integer",
                    "description": "The maximum number of arguments allowed\n"
                },
                "argNameLength": {
                    "type": "integer",
                    "description": "The maximum allowed argument name length\n"
                },
                "clonedVersion": {
                    "type": "integer",
                    "description": "The latest cloned firewall version by the provider\n"
                },
                "combinedFileSizes": {
                    "type": "integer",
                    "description": "The maximum allowed size of all files\n"
                },
                "criticalAnomalyScore": {
                    "type": "integer",
                    "description": "Score value to add for critical anomalies\n"
                },
                "crsValidateUtf8Encoding": {
                    "type": "boolean",
                    "description": "CRS validate UTF8 encoding\n"
                },
                "errorAnomalyScore": {
                    "type": "integer",
                    "description": "Score value to add for error anomalies\n"
                },
                "highRiskCountryCodes": {
                    "type": "string",
                    "description": "A space-separated list of country codes in ISO 3166-1 (two-letter) format\n"
                },
                "httpViolationScoreThreshold": {
                    "type": "integer",
                    "description": "HTTP violation threshold\n"
                },
                "inboundAnomalyScoreThreshold": {
                    "type": "integer",
                    "description": "Inbound anomaly threshold\n"
                },
                "lfiScoreThreshold": {
                    "type": "integer",
                    "description": "Local file inclusion attack threshold\n"
                },
                "maxFileSize": {
                    "type": "integer",
                    "description": "The maximum allowed file size, in bytes\n"
                },
                "maxNumArgs": {
                    "type": "integer",
                    "description": "The maximum number of arguments allowed\n"
                },
                "noticeAnomalyScore": {
                    "type": "integer",
                    "description": "Score value to add for notice anomalies\n"
                },
                "number": {
                    "type": "integer",
                    "description": "The WAF firewall version\n"
                },
                "paranoiaLevel": {
                    "type": "integer",
                    "description": "The configured paranoia level\n"
                },
                "phpInjectionScoreThreshold": {
                    "type": "integer",
                    "description": "PHP injection threshold\n"
                },
                "rceScoreThreshold": {
                    "type": "integer",
                    "description": "Remote code execution threshold\n"
                },
                "restrictedExtensions": {
                    "type": "string",
                    "description": "A space-separated list of allowed file extensions\n"
                },
                "restrictedHeaders": {
                    "type": "string",
                    "description": "A space-separated list of allowed header names\n"
                },
                "rfiScoreThreshold": {
                    "type": "integer",
                    "description": "Remote file inclusion attack threshold\n"
                },
                "ruleExclusions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceWafConfigurationRuleExclusion:ServiceWafConfigurationRuleExclusion"
                    }
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceWafConfigurationRule:ServiceWafConfigurationRule"
                    }
                },
                "sessionFixationScoreThreshold": {
                    "type": "integer",
                    "description": "Session fixation attack threshold\n"
                },
                "sqlInjectionScoreThreshold": {
                    "type": "integer",
                    "description": "SQL injection attack threshold\n"
                },
                "totalArgLength": {
                    "type": "integer",
                    "description": "The maximum size of argument names and values\n"
                },
                "wafId": {
                    "type": "string",
                    "description": "The ID of the Web Application Firewall that the configuration belongs to\n"
                },
                "warningAnomalyScore": {
                    "type": "integer",
                    "description": "Score value to add for warning anomalies\n"
                },
                "xssScoreThreshold": {
                    "type": "integer",
                    "description": "XSS attack threshold\n"
                }
            },
            "required": [
                "active",
                "allowedHttpVersions",
                "allowedMethods",
                "allowedRequestContentType",
                "allowedRequestContentTypeCharset",
                "argLength",
                "argNameLength",
                "clonedVersion",
                "combinedFileSizes",
                "criticalAnomalyScore",
                "crsValidateUtf8Encoding",
                "errorAnomalyScore",
                "highRiskCountryCodes",
                "httpViolationScoreThreshold",
                "inboundAnomalyScoreThreshold",
                "lfiScoreThreshold",
                "maxFileSize",
                "maxNumArgs",
                "noticeAnomalyScore",
                "number",
                "paranoiaLevel",
                "phpInjectionScoreThreshold",
                "rceScoreThreshold",
                "restrictedExtensions",
                "restrictedHeaders",
                "rfiScoreThreshold",
                "sessionFixationScoreThreshold",
                "sqlInjectionScoreThreshold",
                "totalArgLength",
                "wafId",
                "warningAnomalyScore",
                "xssScoreThreshold"
            ],
            "inputProperties": {
                "activate": {
                    "type": "boolean",
                    "description": "Conditionally prevents a new firewall version from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`\n"
                },
                "allowedHttpVersions": {
                    "type": "string",
                    "description": "Allowed HTTP versions\n"
                },
                "allowedMethods": {
                    "type": "string",
                    "description": "A space-separated list of HTTP method names\n"
                },
                "allowedRequestContentType": {
                    "type": "string",
                    "description": "Allowed request content types\n"
                },
                "allowedRequestContentTypeCharset": {
                    "type": "string",
                    "description": "Allowed request content type charset\n"
                },
                "argLength": {
                    "type": "integer",
                    "description": "The maximum number of arguments allowed\n"
                },
                "argNameLength": {
                    "type": "integer",
                    "description": "The maximum allowed argument name length\n"
                },
                "combinedFileSizes": {
                    "type": "integer",
                    "description": "The maximum allowed size of all files\n"
                },
                "criticalAnomalyScore": {
                    "type": "integer",
                    "description": "Score value to add for critical anomalies\n"
                },
                "crsValidateUtf8Encoding": {
                    "type": "boolean",
                    "description": "CRS validate UTF8 encoding\n"
                },
                "errorAnomalyScore": {
                    "type": "integer",
                    "description": "Score value to add for error anomalies\n"
                },
                "highRiskCountryCodes": {
                    "type": "string",
                    "description": "A space-separated list of country codes in ISO 3166-1 (two-letter) format\n"
                },
                "httpViolationScoreThreshold": {
                    "type": "integer",
                    "description": "HTTP violation threshold\n"
                },
                "inboundAnomalyScoreThreshold": {
                    "type": "integer",
                    "description": "Inbound anomaly threshold\n"
                },
                "lfiScoreThreshold": {
                    "type": "integer",
                    "description": "Local file inclusion attack threshold\n"
                },
                "maxFileSize": {
                    "type": "integer",
                    "description": "The maximum allowed file size, in bytes\n"
                },
                "maxNumArgs": {
                    "type": "integer",
                    "description": "The maximum number of arguments allowed\n"
                },
                "noticeAnomalyScore": {
                    "type": "integer",
                    "description": "Score value to add for notice anomalies\n"
                },
                "paranoiaLevel": {
                    "type": "integer",
                    "description": "The configured paranoia level\n"
                },
                "phpInjectionScoreThreshold": {
                    "type": "integer",
                    "description": "PHP injection threshold\n"
                },
                "rceScoreThreshold": {
                    "type": "integer",
                    "description": "Remote code execution threshold\n"
                },
                "restrictedExtensions": {
                    "type": "string",
                    "description": "A space-separated list of allowed file extensions\n"
                },
                "restrictedHeaders": {
                    "type": "string",
                    "description": "A space-separated list of allowed header names\n"
                },
                "rfiScoreThreshold": {
                    "type": "integer",
                    "description": "Remote file inclusion attack threshold\n"
                },
                "ruleExclusions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceWafConfigurationRuleExclusion:ServiceWafConfigurationRuleExclusion"
                    }
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/ServiceWafConfigurationRule:ServiceWafConfigurationRule"
                    }
                },
                "sessionFixationScoreThreshold": {
                    "type": "integer",
                    "description": "Session fixation attack threshold\n"
                },
                "sqlInjectionScoreThreshold": {
                    "type": "integer",
                    "description": "SQL injection attack threshold\n"
                },
                "totalArgLength": {
                    "type": "integer",
                    "description": "The maximum size of argument names and values\n"
                },
                "wafId": {
                    "type": "string",
                    "description": "The ID of the Web Application Firewall that the configuration belongs to\n"
                },
                "warningAnomalyScore": {
                    "type": "integer",
                    "description": "Score value to add for warning anomalies\n"
                },
                "xssScoreThreshold": {
                    "type": "integer",
                    "description": "XSS attack threshold\n"
                }
            },
            "requiredInputs": [
                "wafId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceWafConfiguration resources.\n",
                "properties": {
                    "activate": {
                        "type": "boolean",
                        "description": "Conditionally prevents a new firewall version from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`\n"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Whether a specific firewall version is currently deployed\n"
                    },
                    "allowedHttpVersions": {
                        "type": "string",
                        "description": "Allowed HTTP versions\n"
                    },
                    "allowedMethods": {
                        "type": "string",
                        "description": "A space-separated list of HTTP method names\n"
                    },
                    "allowedRequestContentType": {
                        "type": "string",
                        "description": "Allowed request content types\n"
                    },
                    "allowedRequestContentTypeCharset": {
                        "type": "string",
                        "description": "Allowed request content type charset\n"
                    },
                    "argLength": {
                        "type": "integer",
                        "description": "The maximum number of arguments allowed\n"
                    },
                    "argNameLength": {
                        "type": "integer",
                        "description": "The maximum allowed argument name length\n"
                    },
                    "clonedVersion": {
                        "type": "integer",
                        "description": "The latest cloned firewall version by the provider\n"
                    },
                    "combinedFileSizes": {
                        "type": "integer",
                        "description": "The maximum allowed size of all files\n"
                    },
                    "criticalAnomalyScore": {
                        "type": "integer",
                        "description": "Score value to add for critical anomalies\n"
                    },
                    "crsValidateUtf8Encoding": {
                        "type": "boolean",
                        "description": "CRS validate UTF8 encoding\n"
                    },
                    "errorAnomalyScore": {
                        "type": "integer",
                        "description": "Score value to add for error anomalies\n"
                    },
                    "highRiskCountryCodes": {
                        "type": "string",
                        "description": "A space-separated list of country codes in ISO 3166-1 (two-letter) format\n"
                    },
                    "httpViolationScoreThreshold": {
                        "type": "integer",
                        "description": "HTTP violation threshold\n"
                    },
                    "inboundAnomalyScoreThreshold": {
                        "type": "integer",
                        "description": "Inbound anomaly threshold\n"
                    },
                    "lfiScoreThreshold": {
                        "type": "integer",
                        "description": "Local file inclusion attack threshold\n"
                    },
                    "maxFileSize": {
                        "type": "integer",
                        "description": "The maximum allowed file size, in bytes\n"
                    },
                    "maxNumArgs": {
                        "type": "integer",
                        "description": "The maximum number of arguments allowed\n"
                    },
                    "noticeAnomalyScore": {
                        "type": "integer",
                        "description": "Score value to add for notice anomalies\n"
                    },
                    "number": {
                        "type": "integer",
                        "description": "The WAF firewall version\n"
                    },
                    "paranoiaLevel": {
                        "type": "integer",
                        "description": "The configured paranoia level\n"
                    },
                    "phpInjectionScoreThreshold": {
                        "type": "integer",
                        "description": "PHP injection threshold\n"
                    },
                    "rceScoreThreshold": {
                        "type": "integer",
                        "description": "Remote code execution threshold\n"
                    },
                    "restrictedExtensions": {
                        "type": "string",
                        "description": "A space-separated list of allowed file extensions\n"
                    },
                    "restrictedHeaders": {
                        "type": "string",
                        "description": "A space-separated list of allowed header names\n"
                    },
                    "rfiScoreThreshold": {
                        "type": "integer",
                        "description": "Remote file inclusion attack threshold\n"
                    },
                    "ruleExclusions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceWafConfigurationRuleExclusion:ServiceWafConfigurationRuleExclusion"
                        }
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/ServiceWafConfigurationRule:ServiceWafConfigurationRule"
                        }
                    },
                    "sessionFixationScoreThreshold": {
                        "type": "integer",
                        "description": "Session fixation attack threshold\n"
                    },
                    "sqlInjectionScoreThreshold": {
                        "type": "integer",
                        "description": "SQL injection attack threshold\n"
                    },
                    "totalArgLength": {
                        "type": "integer",
                        "description": "The maximum size of argument names and values\n"
                    },
                    "wafId": {
                        "type": "string",
                        "description": "The ID of the Web Application Firewall that the configuration belongs to\n"
                    },
                    "warningAnomalyScore": {
                        "type": "integer",
                        "description": "Score value to add for warning anomalies\n"
                    },
                    "xssScoreThreshold": {
                        "type": "integer",
                        "description": "XSS attack threshold\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/tlsActivation:TlsActivation": {
            "description": "Enables TLS on a domain using a specified custom TLS certificate.\n\n\u003e **Note:** The Fastly service must be provisioned _prior_ to enabling TLS on it.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst demoServiceVcl = new fastly.ServiceVcl(\"demoServiceVcl\", {\n    domains: [{\n        name: \"example.com\",\n    }],\n    backends: [{\n        address: \"127.0.0.1\",\n        name: \"localhost\",\n    }],\n    forceDestroy: true,\n});\nconst demoTlsPrivateKey = new fastly.TlsPrivateKey(\"demoTlsPrivateKey\", {keyPem: \"...\"});\nconst demoTlsCertificate = new fastly.TlsCertificate(\"demoTlsCertificate\", {certificateBody: \"...\"}, {\n    dependsOn: [demoTlsPrivateKey],\n});\nconst test = new fastly.TlsActivation(\"test\", {\n    certificateId: demoTlsCertificate.id,\n    domain: \"example.com\",\n}, {\n    dependsOn: [demoServiceVcl],\n});\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\ndemo_service_vcl = fastly.ServiceVcl(\"demoServiceVcl\",\n    domains=[fastly.ServiceVclDomainArgs(\n        name=\"example.com\",\n    )],\n    backends=[fastly.ServiceVclBackendArgs(\n        address=\"127.0.0.1\",\n        name=\"localhost\",\n    )],\n    force_destroy=True)\ndemo_tls_private_key = fastly.TlsPrivateKey(\"demoTlsPrivateKey\", key_pem=\"...\")\ndemo_tls_certificate = fastly.TlsCertificate(\"demoTlsCertificate\", certificate_body=\"...\",\nopts=pulumi.ResourceOptions(depends_on=[demo_tls_private_key]))\ntest = fastly.TlsActivation(\"test\",\n    certificate_id=demo_tls_certificate.id,\n    domain=\"example.com\",\n    opts=pulumi.ResourceOptions(depends_on=[demo_service_vcl]))\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoServiceVcl = new Fastly.ServiceVcl(\"demoServiceVcl\", new Fastly.ServiceVclArgs\n        {\n            Domains = \n            {\n                new Fastly.Inputs.ServiceVclDomainArgs\n                {\n                    Name = \"example.com\",\n                },\n            },\n            Backends = \n            {\n                new Fastly.Inputs.ServiceVclBackendArgs\n                {\n                    Address = \"127.0.0.1\",\n                    Name = \"localhost\",\n                },\n            },\n            ForceDestroy = true,\n        });\n        var demoTlsPrivateKey = new Fastly.TlsPrivateKey(\"demoTlsPrivateKey\", new Fastly.TlsPrivateKeyArgs\n        {\n            KeyPem = \"...\",\n        });\n        var demoTlsCertificate = new Fastly.TlsCertificate(\"demoTlsCertificate\", new Fastly.TlsCertificateArgs\n        {\n            CertificateBody = \"...\",\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                demoTlsPrivateKey,\n            },\n        });\n        var test = new Fastly.TlsActivation(\"test\", new Fastly.TlsActivationArgs\n        {\n            CertificateId = demoTlsCertificate.Id,\n            Domain = \"example.com\",\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                demoServiceVcl,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdemoServiceVcl, err := fastly.NewServiceVcl(ctx, \"demoServiceVcl\", \u0026fastly.ServiceVclArgs{\n\t\t\tDomains: ServiceVclDomainArray{\n\t\t\t\t\u0026ServiceVclDomainArgs{\n\t\t\t\t\tName: pulumi.String(\"example.com\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tBackends: ServiceVclBackendArray{\n\t\t\t\t\u0026ServiceVclBackendArgs{\n\t\t\t\t\tAddress: pulumi.String(\"127.0.0.1\"),\n\t\t\t\t\tName:    pulumi.String(\"localhost\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tForceDestroy: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdemoTlsPrivateKey, err := fastly.NewTlsPrivateKey(ctx, \"demoTlsPrivateKey\", \u0026fastly.TlsPrivateKeyArgs{\n\t\t\tKeyPem: pulumi.String(\"...\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdemoTlsCertificate, err := fastly.NewTlsCertificate(ctx, \"demoTlsCertificate\", \u0026fastly.TlsCertificateArgs{\n\t\t\tCertificateBody: pulumi.String(\"...\"),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tdemoTlsPrivateKey,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = fastly.NewTlsActivation(ctx, \"test\", \u0026fastly.TlsActivationArgs{\n\t\t\tCertificateId: demoTlsCertificate.ID(),\n\t\t\tDomain:        pulumi.String(\"example.com\"),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tdemoServiceVcl,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n\u003e **Warning:** Updating the `fastly.TlsPrivateKey`/`fastly.TlsCertificate` resources should be done in multiple plan/apply steps to avoid potential downtime. The new certificate and associated private key must first be created so they exist alongside the currently active resources. Once the new resources have been created, then the `fastly.TlsActivation` can be updated to point to the new certificate. Finally, the original key/certificate resources can be deleted.\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA TLS activation can be imported using its ID, e.g.\n\n```sh\n $ pulumi import fastly:index/tlsActivation:TlsActivation demo xxxxxxxx\n```\n\n ",
            "properties": {
                "certificateId": {
                    "type": "string",
                    "description": "ID of certificate to use. Must have the `domain` specified in the certificate's Subject Alternative Names.\n"
                },
                "configurationId": {
                    "type": "string",
                    "description": "ID of TLS configuration to be used to terminate TLS traffic, or use the default one if missing.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Time-stamp (GMT) when TLS was enabled.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain to enable TLS on. Must be assigned to an existing Fastly Service.\n"
                }
            },
            "required": [
                "certificateId",
                "configurationId",
                "createdAt",
                "domain"
            ],
            "inputProperties": {
                "certificateId": {
                    "type": "string",
                    "description": "ID of certificate to use. Must have the `domain` specified in the certificate's Subject Alternative Names.\n"
                },
                "configurationId": {
                    "type": "string",
                    "description": "ID of TLS configuration to be used to terminate TLS traffic, or use the default one if missing.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain to enable TLS on. Must be assigned to an existing Fastly Service.\n"
                }
            },
            "requiredInputs": [
                "certificateId",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TlsActivation resources.\n",
                "properties": {
                    "certificateId": {
                        "type": "string",
                        "description": "ID of certificate to use. Must have the `domain` specified in the certificate's Subject Alternative Names.\n"
                    },
                    "configurationId": {
                        "type": "string",
                        "description": "ID of TLS configuration to be used to terminate TLS traffic, or use the default one if missing.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time-stamp (GMT) when TLS was enabled.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Domain to enable TLS on. Must be assigned to an existing Fastly Service.\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/tlsCertificate:TlsCertificate": {
            "description": "Uploads a custom TLS certificate to Fastly to be used to terminate TLS traffic.\n\n\u003e Each TLS certificate **must** have its corresponding private key uploaded _prior_ to uploading the certificate.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\nimport * as tls from \"@pulumi/tls\";\n\nconst keyPrivateKey = new tls.PrivateKey(\"keyPrivateKey\", {algorithm: \"RSA\"});\nconst cert = new tls.SelfSignedCert(\"cert\", {\n    keyAlgorithm: keyPrivateKey.algorithm,\n    privateKeyPem: keyPrivateKey.privateKeyPem,\n    subjects: [{\n        commonName: \"example.com\",\n    }],\n    isCaCertificate: true,\n    validityPeriodHours: 360,\n    allowedUses: [\n        \"cert_signing\",\n        \"server_auth\",\n    ],\n    dnsNames: [\"example.com\"],\n});\nconst keyTlsPrivateKey = new fastly.TlsPrivateKey(\"keyTlsPrivateKey\", {keyPem: keyPrivateKey.privateKeyPem});\nconst example = new fastly.TlsCertificate(\"example\", {certificateBody: cert.certPem}, {\n    dependsOn: [keyTlsPrivateKey],\n});\n// The private key has to be present before the certificate can be uploaded\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\nimport pulumi_tls as tls\n\nkey_private_key = tls.PrivateKey(\"keyPrivateKey\", algorithm=\"RSA\")\ncert = tls.SelfSignedCert(\"cert\",\n    key_algorithm=key_private_key.algorithm,\n    private_key_pem=key_private_key.private_key_pem,\n    subjects=[tls.SelfSignedCertSubjectArgs(\n        common_name=\"example.com\",\n    )],\n    is_ca_certificate=True,\n    validity_period_hours=360,\n    allowed_uses=[\n        \"cert_signing\",\n        \"server_auth\",\n    ],\n    dns_names=[\"example.com\"])\nkey_tls_private_key = fastly.TlsPrivateKey(\"keyTlsPrivateKey\", key_pem=key_private_key.private_key_pem)\nexample = fastly.TlsCertificate(\"example\", certificate_body=cert.cert_pem,\nopts=pulumi.ResourceOptions(depends_on=[key_tls_private_key]))\n# The private key has to be present before the certificate can be uploaded\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\nusing Tls = Pulumi.Tls;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var keyPrivateKey = new Tls.PrivateKey(\"keyPrivateKey\", new Tls.PrivateKeyArgs\n        {\n            Algorithm = \"RSA\",\n        });\n        var cert = new Tls.SelfSignedCert(\"cert\", new Tls.SelfSignedCertArgs\n        {\n            KeyAlgorithm = keyPrivateKey.Algorithm,\n            PrivateKeyPem = keyPrivateKey.PrivateKeyPem,\n            Subjects = \n            {\n                new Tls.Inputs.SelfSignedCertSubjectArgs\n                {\n                    CommonName = \"example.com\",\n                },\n            },\n            IsCaCertificate = true,\n            ValidityPeriodHours = 360,\n            AllowedUses = \n            {\n                \"cert_signing\",\n                \"server_auth\",\n            },\n            DnsNames = \n            {\n                \"example.com\",\n            },\n        });\n        var keyTlsPrivateKey = new Fastly.TlsPrivateKey(\"keyTlsPrivateKey\", new Fastly.TlsPrivateKeyArgs\n        {\n            KeyPem = keyPrivateKey.PrivateKeyPem,\n        });\n        var example = new Fastly.TlsCertificate(\"example\", new Fastly.TlsCertificateArgs\n        {\n            CertificateBody = cert.CertPem,\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                keyTlsPrivateKey,\n            },\n        });\n        // The private key has to be present before the certificate can be uploaded\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi-tls/sdk/v4/go/tls\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tkeyPrivateKey, err := tls.NewPrivateKey(ctx, \"keyPrivateKey\", \u0026tls.PrivateKeyArgs{\n\t\t\tAlgorithm: pulumi.String(\"RSA\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcert, err := tls.NewSelfSignedCert(ctx, \"cert\", \u0026tls.SelfSignedCertArgs{\n\t\t\tKeyAlgorithm:  keyPrivateKey.Algorithm,\n\t\t\tPrivateKeyPem: keyPrivateKey.PrivateKeyPem,\n\t\t\tSubjects: SelfSignedCertSubjectArray{\n\t\t\t\t\u0026SelfSignedCertSubjectArgs{\n\t\t\t\t\tCommonName: pulumi.String(\"example.com\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tIsCaCertificate:     pulumi.Bool(true),\n\t\t\tValidityPeriodHours: pulumi.Int(360),\n\t\t\tAllowedUses: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"cert_signing\"),\n\t\t\t\tpulumi.String(\"server_auth\"),\n\t\t\t},\n\t\t\tDnsNames: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"example.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tkeyTlsPrivateKey, err := fastly.NewTlsPrivateKey(ctx, \"keyTlsPrivateKey\", \u0026fastly.TlsPrivateKeyArgs{\n\t\t\tKeyPem: keyPrivateKey.PrivateKeyPem,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = fastly.NewTlsCertificate(ctx, \"example\", \u0026fastly.TlsCertificateArgs{\n\t\t\tCertificateBody: cert.CertPem,\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tkeyTlsPrivateKey,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Updating certificates\n\nThere are three scenarios for updating a certificate:\n\n1. The certificate is about to expire but the private key stays the same.\n2. The certificate is about to expire but the private key is changing.\n3. The domains on the certificate are changing.\n\nIn the first scenario you only need to update the `certificate_body` attribute of the `fastly.TlsCertificate` resource, while the other scenarios require a new private key (`fastly.TlsPrivateKey`) and certificate (`fastly.TlsCertificate`) to be generated.\n\nWhen updating both the `fastly.TlsPrivateKey` and `fastly.TlsCertificate` resources, they should be done in multiple plan/apply steps to avoid potential downtime. The new certificate and associated private key must first be created so they exist alongside the currently active resources. Once the new resources have been created, then the `fastly.TlsActivation` can be updated to point to the new certificate. Finally, the original key/certificate resources can be deleted.\n\n\n## Import\n\nA certificate can be imported using its Fastly certificate ID, e.g.\n\n```sh\n $ pulumi import fastly:index/tlsCertificate:TlsCertificate demo xxxxxxxxxxx\n```\n\n ",
            "properties": {
                "certificateBody": {
                    "type": "string",
                    "description": "PEM-formatted certificate, optionally including any intermediary certificates.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Timestamp (GMT) when the certificate was created.\n"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "All the domains (including wildcard domains) that are listed in the certificate's Subject Alternative Names (SAN) list.\n"
                },
                "issuedTo": {
                    "type": "string",
                    "description": "The hostname for which a certificate was issued.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The certificate authority that issued the certificate.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Human-readable name used to identify the certificate. Defaults to the certificate's Common Name or first Subject Alternative Name entry.\n"
                },
                "replace": {
                    "type": "boolean",
                    "description": "A recommendation from Fastly indicating the key associated with this certificate is in need of rotation.\n"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "A value assigned by the issuer that is unique to a certificate.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "The algorithm used to sign the certificate.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Timestamp (GMT) when the certificate was last updated.\n"
                }
            },
            "required": [
                "certificateBody",
                "createdAt",
                "domains",
                "issuedTo",
                "issuer",
                "name",
                "replace",
                "serialNumber",
                "signatureAlgorithm",
                "updatedAt"
            ],
            "inputProperties": {
                "certificateBody": {
                    "type": "string",
                    "description": "PEM-formatted certificate, optionally including any intermediary certificates.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Human-readable name used to identify the certificate. Defaults to the certificate's Common Name or first Subject Alternative Name entry.\n"
                }
            },
            "requiredInputs": [
                "certificateBody"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TlsCertificate resources.\n",
                "properties": {
                    "certificateBody": {
                        "type": "string",
                        "description": "PEM-formatted certificate, optionally including any intermediary certificates.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the certificate was created.\n"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "All the domains (including wildcard domains) that are listed in the certificate's Subject Alternative Names (SAN) list.\n"
                    },
                    "issuedTo": {
                        "type": "string",
                        "description": "The hostname for which a certificate was issued.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The certificate authority that issued the certificate.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Human-readable name used to identify the certificate. Defaults to the certificate's Common Name or first Subject Alternative Name entry.\n"
                    },
                    "replace": {
                        "type": "boolean",
                        "description": "A recommendation from Fastly indicating the key associated with this certificate is in need of rotation.\n"
                    },
                    "serialNumber": {
                        "type": "string",
                        "description": "A value assigned by the issuer that is unique to a certificate.\n"
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "description": "The algorithm used to sign the certificate.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the certificate was last updated.\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/tlsPlatformCertificate:TlsPlatformCertificate": {
            "description": "Uploads a TLS certificate to the Fastly Platform TLS service.\n\n\u003e Each TLS certificate **must** have its corresponding private key uploaded _prior_ to uploading the certificate.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage with self-signed CA:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\nimport * as tls from \"@pulumi/tls\";\n\nconst caKey = new tls.PrivateKey(\"caKey\", {algorithm: \"RSA\"});\nconst keyPrivateKey = new tls.PrivateKey(\"keyPrivateKey\", {algorithm: \"RSA\"});\nconst ca = new tls.SelfSignedCert(\"ca\", {\n    keyAlgorithm: caKey.algorithm,\n    privateKeyPem: caKey.privateKeyPem,\n    subjects: [{\n        commonName: \"Example CA\",\n    }],\n    isCaCertificate: true,\n    validityPeriodHours: 360,\n    allowedUses: [\n        \"cert_signing\",\n        \"server_auth\",\n    ],\n});\nconst example = new tls.CertRequest(\"example\", {\n    keyAlgorithm: keyPrivateKey.algorithm,\n    privateKeyPem: keyPrivateKey.privateKeyPem,\n    subjects: [{\n        commonName: \"example.com\",\n    }],\n    dnsNames: [\n        \"example.com\",\n        \"www.example.com\",\n    ],\n});\nconst certLocallySignedCert = new tls.LocallySignedCert(\"certLocallySignedCert\", {\n    certRequestPem: example.certRequestPem,\n    caKeyAlgorithm: caKey.algorithm,\n    caPrivateKeyPem: caKey.privateKeyPem,\n    caCertPem: ca.certPem,\n    validityPeriodHours: 360,\n    allowedUses: [\n        \"cert_signing\",\n        \"server_auth\",\n    ],\n});\nconst config = fastly.getTlsConfiguration({\n    tlsService: \"PLATFORM\",\n});\nconst keyTlsPrivateKey = new fastly.TlsPrivateKey(\"keyTlsPrivateKey\", {keyPem: keyPrivateKey.privateKeyPem});\nconst certTlsPlatformCertificate = new fastly.TlsPlatformCertificate(\"certTlsPlatformCertificate\", {\n    certificateBody: certLocallySignedCert.certPem,\n    intermediatesBlob: ca.certPem,\n    configurationId: config.then(config =\u003e config.id),\n    allowUntrustedRoot: true,\n}, {\n    dependsOn: [keyTlsPrivateKey],\n});\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\nimport pulumi_tls as tls\n\nca_key = tls.PrivateKey(\"caKey\", algorithm=\"RSA\")\nkey_private_key = tls.PrivateKey(\"keyPrivateKey\", algorithm=\"RSA\")\nca = tls.SelfSignedCert(\"ca\",\n    key_algorithm=ca_key.algorithm,\n    private_key_pem=ca_key.private_key_pem,\n    subjects=[tls.SelfSignedCertSubjectArgs(\n        common_name=\"Example CA\",\n    )],\n    is_ca_certificate=True,\n    validity_period_hours=360,\n    allowed_uses=[\n        \"cert_signing\",\n        \"server_auth\",\n    ])\nexample = tls.CertRequest(\"example\",\n    key_algorithm=key_private_key.algorithm,\n    private_key_pem=key_private_key.private_key_pem,\n    subjects=[tls.CertRequestSubjectArgs(\n        common_name=\"example.com\",\n    )],\n    dns_names=[\n        \"example.com\",\n        \"www.example.com\",\n    ])\ncert_locally_signed_cert = tls.LocallySignedCert(\"certLocallySignedCert\",\n    cert_request_pem=example.cert_request_pem,\n    ca_key_algorithm=ca_key.algorithm,\n    ca_private_key_pem=ca_key.private_key_pem,\n    ca_cert_pem=ca.cert_pem,\n    validity_period_hours=360,\n    allowed_uses=[\n        \"cert_signing\",\n        \"server_auth\",\n    ])\nconfig = fastly.get_tls_configuration(tls_service=\"PLATFORM\")\nkey_tls_private_key = fastly.TlsPrivateKey(\"keyTlsPrivateKey\", key_pem=key_private_key.private_key_pem)\ncert_tls_platform_certificate = fastly.TlsPlatformCertificate(\"certTlsPlatformCertificate\",\n    certificate_body=cert_locally_signed_cert.cert_pem,\n    intermediates_blob=ca.cert_pem,\n    configuration_id=config.id,\n    allow_untrusted_root=True,\n    opts=pulumi.ResourceOptions(depends_on=[key_tls_private_key]))\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\nusing Tls = Pulumi.Tls;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var caKey = new Tls.PrivateKey(\"caKey\", new Tls.PrivateKeyArgs\n        {\n            Algorithm = \"RSA\",\n        });\n        var keyPrivateKey = new Tls.PrivateKey(\"keyPrivateKey\", new Tls.PrivateKeyArgs\n        {\n            Algorithm = \"RSA\",\n        });\n        var ca = new Tls.SelfSignedCert(\"ca\", new Tls.SelfSignedCertArgs\n        {\n            KeyAlgorithm = caKey.Algorithm,\n            PrivateKeyPem = caKey.PrivateKeyPem,\n            Subjects = \n            {\n                new Tls.Inputs.SelfSignedCertSubjectArgs\n                {\n                    CommonName = \"Example CA\",\n                },\n            },\n            IsCaCertificate = true,\n            ValidityPeriodHours = 360,\n            AllowedUses = \n            {\n                \"cert_signing\",\n                \"server_auth\",\n            },\n        });\n        var example = new Tls.CertRequest(\"example\", new Tls.CertRequestArgs\n        {\n            KeyAlgorithm = keyPrivateKey.Algorithm,\n            PrivateKeyPem = keyPrivateKey.PrivateKeyPem,\n            Subjects = \n            {\n                new Tls.Inputs.CertRequestSubjectArgs\n                {\n                    CommonName = \"example.com\",\n                },\n            },\n            DnsNames = \n            {\n                \"example.com\",\n                \"www.example.com\",\n            },\n        });\n        var certLocallySignedCert = new Tls.LocallySignedCert(\"certLocallySignedCert\", new Tls.LocallySignedCertArgs\n        {\n            CertRequestPem = example.CertRequestPem,\n            CaKeyAlgorithm = caKey.Algorithm,\n            CaPrivateKeyPem = caKey.PrivateKeyPem,\n            CaCertPem = ca.CertPem,\n            ValidityPeriodHours = 360,\n            AllowedUses = \n            {\n                \"cert_signing\",\n                \"server_auth\",\n            },\n        });\n        var config = Output.Create(Fastly.GetTlsConfiguration.InvokeAsync(new Fastly.GetTlsConfigurationArgs\n        {\n            TlsService = \"PLATFORM\",\n        }));\n        var keyTlsPrivateKey = new Fastly.TlsPrivateKey(\"keyTlsPrivateKey\", new Fastly.TlsPrivateKeyArgs\n        {\n            KeyPem = keyPrivateKey.PrivateKeyPem,\n        });\n        var certTlsPlatformCertificate = new Fastly.TlsPlatformCertificate(\"certTlsPlatformCertificate\", new Fastly.TlsPlatformCertificateArgs\n        {\n            CertificateBody = certLocallySignedCert.CertPem,\n            IntermediatesBlob = ca.CertPem,\n            ConfigurationId = config.Apply(config =\u003e config.Id),\n            AllowUntrustedRoot = true,\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                keyTlsPrivateKey,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi-tls/sdk/v4/go/tls\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcaKey, err := tls.NewPrivateKey(ctx, \"caKey\", \u0026tls.PrivateKeyArgs{\n\t\t\tAlgorithm: pulumi.String(\"RSA\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tkeyPrivateKey, err := tls.NewPrivateKey(ctx, \"keyPrivateKey\", \u0026tls.PrivateKeyArgs{\n\t\t\tAlgorithm: pulumi.String(\"RSA\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tca, err := tls.NewSelfSignedCert(ctx, \"ca\", \u0026tls.SelfSignedCertArgs{\n\t\t\tKeyAlgorithm:  caKey.Algorithm,\n\t\t\tPrivateKeyPem: caKey.PrivateKeyPem,\n\t\t\tSubjects: SelfSignedCertSubjectArray{\n\t\t\t\t\u0026SelfSignedCertSubjectArgs{\n\t\t\t\t\tCommonName: pulumi.String(\"Example CA\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tIsCaCertificate:     pulumi.Bool(true),\n\t\t\tValidityPeriodHours: pulumi.Int(360),\n\t\t\tAllowedUses: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"cert_signing\"),\n\t\t\t\tpulumi.String(\"server_auth\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texample, err := tls.NewCertRequest(ctx, \"example\", \u0026tls.CertRequestArgs{\n\t\t\tKeyAlgorithm:  keyPrivateKey.Algorithm,\n\t\t\tPrivateKeyPem: keyPrivateKey.PrivateKeyPem,\n\t\t\tSubjects: CertRequestSubjectArray{\n\t\t\t\t\u0026CertRequestSubjectArgs{\n\t\t\t\t\tCommonName: pulumi.String(\"example.com\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tDnsNames: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"example.com\"),\n\t\t\t\tpulumi.String(\"www.example.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcertLocallySignedCert, err := tls.NewLocallySignedCert(ctx, \"certLocallySignedCert\", \u0026tls.LocallySignedCertArgs{\n\t\t\tCertRequestPem:      example.CertRequestPem,\n\t\t\tCaKeyAlgorithm:      caKey.Algorithm,\n\t\t\tCaPrivateKeyPem:     caKey.PrivateKeyPem,\n\t\t\tCaCertPem:           ca.CertPem,\n\t\t\tValidityPeriodHours: pulumi.Int(360),\n\t\t\tAllowedUses: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"cert_signing\"),\n\t\t\t\tpulumi.String(\"server_auth\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tconfig, err := fastly.GetTlsConfiguration(ctx, \u0026GetTlsConfigurationArgs{\n\t\t\tTlsService: pulumi.StringRef(\"PLATFORM\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tkeyTlsPrivateKey, err := fastly.NewTlsPrivateKey(ctx, \"keyTlsPrivateKey\", \u0026fastly.TlsPrivateKeyArgs{\n\t\t\tKeyPem: keyPrivateKey.PrivateKeyPem,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = fastly.NewTlsPlatformCertificate(ctx, \"certTlsPlatformCertificate\", \u0026fastly.TlsPlatformCertificateArgs{\n\t\t\tCertificateBody:    certLocallySignedCert.CertPem,\n\t\t\tIntermediatesBlob:  ca.CertPem,\n\t\t\tConfigurationId:    pulumi.String(config.Id),\n\t\t\tAllowUntrustedRoot: pulumi.Bool(true),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tkeyTlsPrivateKey,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA certificate can be imported using its Fastly certificate ID, e.g.\n\n```sh\n $ pulumi import fastly:index/tlsPlatformCertificate:TlsPlatformCertificate demo xxxxxxxxxxx\n```\n\n ",
            "properties": {
                "allowUntrustedRoot": {
                    "type": "boolean",
                    "description": "Disable checking whether the root of the certificate chain is trusted. Useful for development purposes to allow use of self-signed CAs. Defaults to false. Write-only on create.\n"
                },
                "certificateBody": {
                    "type": "string",
                    "description": "PEM-formatted certificate.\n"
                },
                "configurationId": {
                    "type": "string",
                    "description": "ID of TLS configuration to be used to terminate TLS traffic.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Timestamp (GMT) when the certificate was created.\n"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "All the domains (including wildcard domains) that are listed in any certificate's Subject Alternative Names (SAN) list.\n"
                },
                "intermediatesBlob": {
                    "type": "string",
                    "description": "PEM-formatted certificate chain from the `certificate_body` to its root.\n"
                },
                "notAfter": {
                    "type": "string",
                    "description": "Timestamp (GMT) when the certificate will expire.\n"
                },
                "notBefore": {
                    "type": "string",
                    "description": "Timestamp (GMT) when the certificate will become valid.\n"
                },
                "replace": {
                    "type": "boolean",
                    "description": "A recommendation from Fastly indicating the key associated with this certificate is in need of rotation.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Timestamp (GMT) when the certificate was last updated.\n"
                }
            },
            "required": [
                "certificateBody",
                "configurationId",
                "createdAt",
                "domains",
                "intermediatesBlob",
                "notAfter",
                "notBefore",
                "replace",
                "updatedAt"
            ],
            "inputProperties": {
                "allowUntrustedRoot": {
                    "type": "boolean",
                    "description": "Disable checking whether the root of the certificate chain is trusted. Useful for development purposes to allow use of self-signed CAs. Defaults to false. Write-only on create.\n"
                },
                "certificateBody": {
                    "type": "string",
                    "description": "PEM-formatted certificate.\n"
                },
                "configurationId": {
                    "type": "string",
                    "description": "ID of TLS configuration to be used to terminate TLS traffic.\n"
                },
                "intermediatesBlob": {
                    "type": "string",
                    "description": "PEM-formatted certificate chain from the `certificate_body` to its root.\n"
                }
            },
            "requiredInputs": [
                "certificateBody",
                "configurationId",
                "intermediatesBlob"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TlsPlatformCertificate resources.\n",
                "properties": {
                    "allowUntrustedRoot": {
                        "type": "boolean",
                        "description": "Disable checking whether the root of the certificate chain is trusted. Useful for development purposes to allow use of self-signed CAs. Defaults to false. Write-only on create.\n"
                    },
                    "certificateBody": {
                        "type": "string",
                        "description": "PEM-formatted certificate.\n"
                    },
                    "configurationId": {
                        "type": "string",
                        "description": "ID of TLS configuration to be used to terminate TLS traffic.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the certificate was created.\n"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "All the domains (including wildcard domains) that are listed in any certificate's Subject Alternative Names (SAN) list.\n"
                    },
                    "intermediatesBlob": {
                        "type": "string",
                        "description": "PEM-formatted certificate chain from the `certificate_body` to its root.\n"
                    },
                    "notAfter": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the certificate will expire.\n"
                    },
                    "notBefore": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the certificate will become valid.\n"
                    },
                    "replace": {
                        "type": "boolean",
                        "description": "A recommendation from Fastly indicating the key associated with this certificate is in need of rotation.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the certificate was last updated.\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/tlsPrivateKey:TlsPrivateKey": {
            "description": "Uploads a Custom TLS Private Key to Fastly. This can be combined with a `fastly.TlsCertificate` resource to provide a TLS Certificate able to be applied to a Fastly Service.\n\nThe Private Key resource requires a key in PEM format, and a name to identify it.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\nimport * as tls from \"@pulumi/tls\";\n\nconst demoPrivateKey = new tls.PrivateKey(\"demoPrivateKey\", {algorithm: \"RSA\"});\nconst demoTlsPrivateKey = new fastly.TlsPrivateKey(\"demoTlsPrivateKey\", {keyPem: demoPrivateKey.privateKeyPem});\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\nimport pulumi_tls as tls\n\ndemo_private_key = tls.PrivateKey(\"demoPrivateKey\", algorithm=\"RSA\")\ndemo_tls_private_key = fastly.TlsPrivateKey(\"demoTlsPrivateKey\", key_pem=demo_private_key.private_key_pem)\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\nusing Tls = Pulumi.Tls;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoPrivateKey = new Tls.PrivateKey(\"demoPrivateKey\", new Tls.PrivateKeyArgs\n        {\n            Algorithm = \"RSA\",\n        });\n        var demoTlsPrivateKey = new Fastly.TlsPrivateKey(\"demoTlsPrivateKey\", new Fastly.TlsPrivateKeyArgs\n        {\n            KeyPem = demoPrivateKey.PrivateKeyPem,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi-tls/sdk/v4/go/tls\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdemoPrivateKey, err := tls.NewPrivateKey(ctx, \"demoPrivateKey\", \u0026tls.PrivateKeyArgs{\n\t\t\tAlgorithm: pulumi.String(\"RSA\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = fastly.NewTlsPrivateKey(ctx, \"demoTlsPrivateKey\", \u0026fastly.TlsPrivateKeyArgs{\n\t\t\tKeyPem: demoPrivateKey.PrivateKeyPem,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Private Key can be imported using its ID, e.g.\n\n```sh\n $ pulumi import fastly:index/tlsPrivateKey:TlsPrivateKey demo xxxxxxxxxxx\n```\n\n ",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Time-stamp (GMT) when the private key was created.\n"
                },
                "keyLength": {
                    "type": "integer",
                    "description": "The key length used to generate the private key.\n"
                },
                "keyPem": {
                    "type": "string",
                    "description": "Private key in PEM format.\n"
                },
                "keyType": {
                    "type": "string",
                    "description": "The algorithm used to generate the private key. Must be RSA.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Customisable name of the private key.\n"
                },
                "publicKeySha1": {
                    "type": "string",
                    "description": "Useful for safely identifying the key.\n"
                },
                "replace": {
                    "type": "boolean",
                    "description": "Whether Fastly recommends replacing this private key.\n"
                }
            },
            "required": [
                "createdAt",
                "keyLength",
                "keyPem",
                "keyType",
                "name",
                "publicKeySha1",
                "replace"
            ],
            "inputProperties": {
                "keyPem": {
                    "type": "string",
                    "description": "Private key in PEM format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Customisable name of the private key.\n"
                }
            },
            "requiredInputs": [
                "keyPem"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TlsPrivateKey resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Time-stamp (GMT) when the private key was created.\n"
                    },
                    "keyLength": {
                        "type": "integer",
                        "description": "The key length used to generate the private key.\n"
                    },
                    "keyPem": {
                        "type": "string",
                        "description": "Private key in PEM format.\n"
                    },
                    "keyType": {
                        "type": "string",
                        "description": "The algorithm used to generate the private key. Must be RSA.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Customisable name of the private key.\n"
                    },
                    "publicKeySha1": {
                        "type": "string",
                        "description": "Useful for safely identifying the key.\n"
                    },
                    "replace": {
                        "type": "boolean",
                        "description": "Whether Fastly recommends replacing this private key.\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/tlsSubscription:TlsSubscription": {
            "description": "Enables TLS on a domain using a certificate managed by Fastly.\n\nDNS records need to be modified on the domain being secured, in order to respond to the ACME domain ownership challenge.\n\nThere are two options for doing this: the `managed_dns_challenges`, which is the default method; and the `managed_http_challenges`, which points production traffic to Fastly.\n\n\u003e See the [Fastly documentation](https://docs.fastly.com/en/guides/serving-https-traffic-using-fastly-managed-certificates#verifying-domain-ownership) for more information on verifying domain ownership.\n\nThe example below demonstrates usage with AWS Route53 to configure DNS, and the `fastly.TlsSubscriptionValidation` resource to wait for validation to complete.\n\n\n## Import\n\nA subscription can be imported using its Fastly subscription ID, e.g.\n\n```sh\n $ pulumi import fastly:index/tlsSubscription:TlsSubscription demo xxxxxxxxxxx\n```\n\n ",
            "properties": {
                "certificateAuthority": {
                    "type": "string",
                    "description": "The entity that issues and certifies the TLS certificates for your subscription. Valid values are `lets-encrypt` or `globalsign`.\n"
                },
                "certificateId": {
                    "type": "string",
                    "description": "The certificate ID associated with the subscription.\n"
                },
                "commonName": {
                    "type": "string",
                    "description": "The common name associated with the subscription generated by Fastly TLS. If you do not pass a common name on create, we will default to the first TLS domain included. If provided, the domain chosen as the common name must be included in TLS domains.\n"
                },
                "configurationId": {
                    "type": "string",
                    "description": "The ID of the set of TLS configuration options that apply to the enabled domains on this subscription.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Timestamp (GMT) when the subscription was created.\n"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of domains on which to enable TLS.\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Always delete subscription, even when active domains are present. Defaults to false.\n"
                },
                "forceUpdate": {
                    "type": "boolean",
                    "description": "Always update subscription, even when active domains are present. Defaults to false.\n"
                },
                "managedDnsChallenge": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The details required to configure DNS to respond to ACME DNS challenge in order to verify domain ownership.\n",
                    "deprecationMessage": "Use 'managed_dns_challenges' attribute instead"
                },
                "managedDnsChallenges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/TlsSubscriptionManagedDnsChallenge:TlsSubscriptionManagedDnsChallenge"
                    },
                    "description": "A list of options for configuring DNS to respond to ACME DNS challenge in order to verify domain ownership.\n"
                },
                "managedHttpChallenges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/fastly:index/TlsSubscriptionManagedHttpChallenge:TlsSubscriptionManagedHttpChallenge"
                    },
                    "description": "A list of options for configuring DNS to respond to ACME HTTP challenge in order to verify domain ownership. Best accessed through a `for` expression to filter the relevant record.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The current state of the subscription. The list of possible states are: `pending`, `processing`, `issued`, and `renewing`.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Timestamp (GMT) when the subscription was updated.\n"
                }
            },
            "required": [
                "certificateAuthority",
                "certificateId",
                "commonName",
                "configurationId",
                "createdAt",
                "domains",
                "managedDnsChallenge",
                "managedDnsChallenges",
                "managedHttpChallenges",
                "state",
                "updatedAt"
            ],
            "inputProperties": {
                "certificateAuthority": {
                    "type": "string",
                    "description": "The entity that issues and certifies the TLS certificates for your subscription. Valid values are `lets-encrypt` or `globalsign`.\n"
                },
                "commonName": {
                    "type": "string",
                    "description": "The common name associated with the subscription generated by Fastly TLS. If you do not pass a common name on create, we will default to the first TLS domain included. If provided, the domain chosen as the common name must be included in TLS domains.\n"
                },
                "configurationId": {
                    "type": "string",
                    "description": "The ID of the set of TLS configuration options that apply to the enabled domains on this subscription.\n"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of domains on which to enable TLS.\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Always delete subscription, even when active domains are present. Defaults to false.\n"
                },
                "forceUpdate": {
                    "type": "boolean",
                    "description": "Always update subscription, even when active domains are present. Defaults to false.\n"
                }
            },
            "requiredInputs": [
                "certificateAuthority",
                "domains"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TlsSubscription resources.\n",
                "properties": {
                    "certificateAuthority": {
                        "type": "string",
                        "description": "The entity that issues and certifies the TLS certificates for your subscription. Valid values are `lets-encrypt` or `globalsign`.\n"
                    },
                    "certificateId": {
                        "type": "string",
                        "description": "The certificate ID associated with the subscription.\n"
                    },
                    "commonName": {
                        "type": "string",
                        "description": "The common name associated with the subscription generated by Fastly TLS. If you do not pass a common name on create, we will default to the first TLS domain included. If provided, the domain chosen as the common name must be included in TLS domains.\n"
                    },
                    "configurationId": {
                        "type": "string",
                        "description": "The ID of the set of TLS configuration options that apply to the enabled domains on this subscription.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the subscription was created.\n"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of domains on which to enable TLS.\n"
                    },
                    "forceDestroy": {
                        "type": "boolean",
                        "description": "Always delete subscription, even when active domains are present. Defaults to false.\n"
                    },
                    "forceUpdate": {
                        "type": "boolean",
                        "description": "Always update subscription, even when active domains are present. Defaults to false.\n"
                    },
                    "managedDnsChallenge": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The details required to configure DNS to respond to ACME DNS challenge in order to verify domain ownership.\n",
                        "deprecationMessage": "Use 'managed_dns_challenges' attribute instead"
                    },
                    "managedDnsChallenges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/TlsSubscriptionManagedDnsChallenge:TlsSubscriptionManagedDnsChallenge"
                        },
                        "description": "A list of options for configuring DNS to respond to ACME DNS challenge in order to verify domain ownership.\n"
                    },
                    "managedHttpChallenges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/TlsSubscriptionManagedHttpChallenge:TlsSubscriptionManagedHttpChallenge"
                        },
                        "description": "A list of options for configuring DNS to respond to ACME HTTP challenge in order to verify domain ownership. Best accessed through a `for` expression to filter the relevant record.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current state of the subscription. The list of possible states are: `pending`, `processing`, `issued`, and `renewing`.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the subscription was updated.\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/tlsSubscriptionValidation:TlsSubscriptionValidation": {
            "description": "This resource represents a successful validation of a Fastly TLS Subscription in concert with other resources.\n\nMost commonly, this resource is used together with a resource for a DNS record and `fastly.TlsSubscription` to request a DNS validated certificate, deploy the required validation records and wait for validation to complete.\n\n\u003e **Warning:** This resource implements a part of the validation workflow. It does not represent a real-world entity in Fastly, therefore changing or deleting this resource on its own has no immediate effect.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nDNS Validation with AWS Route53:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst domainName = \"example.com\";\nconst exampleServiceVcl = new fastly.ServiceVcl(\"exampleServiceVcl\", {\n    domains: [{\n        name: domainName,\n    }],\n    backends: [{\n        address: \"127.0.0.1\",\n        name: \"localhost\",\n    }],\n    forceDestroy: true,\n});\nconst exampleTlsSubscription = new fastly.TlsSubscription(\"exampleTlsSubscription\", {\n    domains: exampleServiceVcl.domains.apply(domains =\u003e domains.map(domain =\u003e domain.name)),\n    certificateAuthority: \"lets-encrypt\",\n});\nconst demo = aws.route53.getZone({\n    name: domainName,\n    privateZone: false,\n});\n// Set up DNS record for managed DNS domain validation method\nconst domainValidation = new aws.route53.Record(\"domainValidation\", {\n    name: exampleTlsSubscription.managedDnsChallenge.recordName,\n    type: exampleTlsSubscription.managedDnsChallenge.recordType,\n    zoneId: demo.then(demo =\u003e demo.id),\n    allowOverwrite: true,\n    records: [exampleTlsSubscription.managedDnsChallenge.recordValue],\n    ttl: 60,\n});\n// Resource that other resources can depend on if they require the certificate to be issued\nconst exampleTlsSubscriptionValidation = new fastly.TlsSubscriptionValidation(\"exampleTlsSubscriptionValidation\", {subscriptionId: exampleTlsSubscription.id}, {\n    dependsOn: [domainValidation],\n});\n```\n```python\nimport pulumi\nimport pulumi_aws as aws\nimport pulumi_fastly as fastly\n\ndomain_name = \"example.com\"\nexample_service_vcl = fastly.ServiceVcl(\"exampleServiceVcl\",\n    domains=[fastly.ServiceVclDomainArgs(\n        name=domain_name,\n    )],\n    backends=[fastly.ServiceVclBackendArgs(\n        address=\"127.0.0.1\",\n        name=\"localhost\",\n    )],\n    force_destroy=True)\nexample_tls_subscription = fastly.TlsSubscription(\"exampleTlsSubscription\",\n    domains=example_service_vcl.domains.apply(lambda domains: [domain.name for domain in domains]),\n    certificate_authority=\"lets-encrypt\")\ndemo = aws.route53.get_zone(name=domain_name,\n    private_zone=False)\n# Set up DNS record for managed DNS domain validation method\ndomain_validation = aws.route53.Record(\"domainValidation\",\n    name=example_tls_subscription.managed_dns_challenge[\"recordName\"],\n    type=aws.route53/recordtype.RecordType(example_tls_subscription.managed_dns_challenge[\"recordType\"]),\n    zone_id=demo.id,\n    allow_overwrite=True,\n    records=[example_tls_subscription.managed_dns_challenge[\"recordValue\"]],\n    ttl=60)\n# Resource that other resources can depend on if they require the certificate to be issued\nexample_tls_subscription_validation = fastly.TlsSubscriptionValidation(\"exampleTlsSubscriptionValidation\", subscription_id=example_tls_subscription.id,\nopts=pulumi.ResourceOptions(depends_on=[domain_validation]))\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "subscriptionId": {
                    "type": "string",
                    "description": "The ID of the TLS Subscription that should be validated.\n"
                }
            },
            "required": [
                "subscriptionId"
            ],
            "inputProperties": {
                "subscriptionId": {
                    "type": "string",
                    "description": "The ID of the TLS Subscription that should be validated.\n"
                }
            },
            "requiredInputs": [
                "subscriptionId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TlsSubscriptionValidation resources.\n",
                "properties": {
                    "subscriptionId": {
                        "type": "string",
                        "description": "The ID of the TLS Subscription that should be validated.\n"
                    }
                },
                "type": "object"
            }
        },
        "fastly:index/user:User": {
            "description": "Provides a Fastly User, representing the configuration for a user account for interacting with Fastly.\n\nThe User resource requires a login and name, and optionally a role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst demo = new fastly.User(\"demo\", {\n    login: \"demo@example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\ndemo = fastly.User(\"demo\", login=\"demo@example.com\")\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demo = new Fastly.User(\"demo\", new Fastly.UserArgs\n        {\n            Login = \"demo@example.com\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := fastly.NewUser(ctx, \"demo\", \u0026fastly.UserArgs{\n\t\t\tLogin: pulumi.String(\"demo@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Fastly User can be imported using their user ID, e.g.\n\n```sh\n $ pulumi import fastly:index/user:User demo xxxxxxxxxxxxxxxxxxxx\n```\n\n ",
            "properties": {
                "login": {
                    "type": "string",
                    "description": "The email address, which is the login name, of the User\n"
                },
                "name": {
                    "type": "string",
                    "description": "The real life name of the user\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role of this user. Can be `user` (the default), `billing`, `engineer`, or `superuser`. For detailed information on the abilities granted to each role, see [Fastly's Documentation on User roles](https://docs.fastly.com/en/guides/configuring-user-roles-and-permissions#user-roles-and-what-they-can-do)\n"
                }
            },
            "required": [
                "login",
                "name"
            ],
            "inputProperties": {
                "login": {
                    "type": "string",
                    "description": "The email address, which is the login name, of the User\n"
                },
                "name": {
                    "type": "string",
                    "description": "The real life name of the user\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role of this user. Can be `user` (the default), `billing`, `engineer`, or `superuser`. For detailed information on the abilities granted to each role, see [Fastly's Documentation on User roles](https://docs.fastly.com/en/guides/configuring-user-roles-and-permissions#user-roles-and-what-they-can-do)\n"
                }
            },
            "requiredInputs": [
                "login"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "login": {
                        "type": "string",
                        "description": "The email address, which is the login name, of the User\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The real life name of the user\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role of this user. Can be `user` (the default), `billing`, `engineer`, or `superuser`. For detailed information on the abilities granted to each role, see [Fastly's Documentation on User roles](https://docs.fastly.com/en/guides/configuring-user-roles-and-permissions#user-roles-and-what-they-can-do)\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "fastly:index/getDatacenters:getDatacenters": {
            "description": "Use this data source to get the list of the [Fastly datacenters](https://developer.fastly.com/reference/api/utils/pops/).\n",
            "outputs": {
                "description": "A collection of values returned by getDatacenters.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "pops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/getDatacentersPop:getDatacentersPop"
                        },
                        "description": "A list of all Fastly POPs.\n"
                    }
                },
                "type": "object",
                "required": [
                    "pops",
                    "id"
                ]
            }
        },
        "fastly:index/getFastlyIpRanges:getFastlyIpRanges": {
            "description": "Use this data source to get the [IP ranges](https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges) of Fastly edge nodes.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst fastly = fastly.getFastlyIpRanges({});\nconst fromFastly = new aws.ec2.SecurityGroup(\"fromFastly\", {ingress: [{\n    fromPort: 443,\n    toPort: 443,\n    protocol: \"tcp\",\n    cidrBlocks: fastly.then(fastly =\u003e fastly.cidrBlocks),\n    ipv6CidrBlocks: fastly.then(fastly =\u003e fastly.ipv6CidrBlocks),\n}]});\n```\n```python\nimport pulumi\nimport pulumi_aws as aws\nimport pulumi_fastly as fastly\n\nfastly = fastly.get_fastly_ip_ranges()\nfrom_fastly = aws.ec2.SecurityGroup(\"fromFastly\", ingress=[aws.ec2.SecurityGroupIngressArgs(\n    from_port=443,\n    to_port=443,\n    protocol=\"tcp\",\n    cidr_blocks=fastly.cidr_blocks,\n    ipv6_cidr_blocks=fastly.ipv6_cidr_blocks,\n)])\n```\n```csharp\nusing Pulumi;\nusing Aws = Pulumi.Aws;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var fastly = Output.Create(Fastly.GetFastlyIpRanges.InvokeAsync());\n        var fromFastly = new Aws.Ec2.SecurityGroup(\"fromFastly\", new Aws.Ec2.SecurityGroupArgs\n        {\n            Ingress = \n            {\n                new Aws.Ec2.Inputs.SecurityGroupIngressArgs\n                {\n                    FromPort = 443,\n                    ToPort = 443,\n                    Protocol = \"tcp\",\n                    CidrBlocks = fastly.Apply(fastly =\u003e fastly.CidrBlocks),\n                    Ipv6CidrBlocks = fastly.Apply(fastly =\u003e fastly.Ipv6CidrBlocks),\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2\"\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tfastly, err := fastly.GetFastlyIpRanges(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ec2.NewSecurityGroup(ctx, \"fromFastly\", \u0026ec2.SecurityGroupArgs{\n\t\t\tIngress: ec2.SecurityGroupIngressArray{\n\t\t\t\t\u0026ec2.SecurityGroupIngressArgs{\n\t\t\t\t\tFromPort:       pulumi.Int(443),\n\t\t\t\t\tToPort:         pulumi.Int(443),\n\t\t\t\t\tProtocol:       pulumi.String(\"tcp\"),\n\t\t\t\t\tCidrBlocks:     interface{}(fastly.CidrBlocks),\n\t\t\t\t\tIpv6CidrBlocks: interface{}(fastly.Ipv6CidrBlocks),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n[1]: https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getFastlyIpRanges.\n",
                "properties": {
                    "cidrBlocks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The lexically ordered list of ipv4 CIDR blocks.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipv6CidrBlocks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The lexically ordered list of ipv6 CIDR blocks.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cidrBlocks",
                    "ipv6CidrBlocks",
                    "id"
                ]
            }
        },
        "fastly:index/getServices:getServices": {
            "description": "Use this data source to get the list of the [Fastly services](https://developer.fastly.com/reference/api/services/service/).\n",
            "outputs": {
                "description": "A collection of values returned by getServices.\n",
                "properties": {
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/getServicesDetail:getServicesDetail"
                        },
                        "description": "A detailed list of Fastly services in your account. This is limited to the services the API token can read.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of service IDs in your account. This is limited to the services the API token can read.\n"
                    }
                },
                "type": "object",
                "required": [
                    "details",
                    "ids",
                    "id"
                ]
            }
        },
        "fastly:index/getTlsActivation:getTlsActivation": {
            "description": "Use this data source to get information on a TLS activation, including the certificate used, and the domain on which TLS was enabled.\n\n\u003e **Warning:** The data source's filters are applied using an **AND** boolean operator, so depending on the combination\nof filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination\nwith any of the others.\n\n\u003e **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst example = pulumi.output(fastly.getTlsActivation({\n    domain: \"example.com\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\nexample = fastly.get_tls_activation(domain=\"example.com\")\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Fastly.GetTlsActivation.InvokeAsync(new Fastly.GetTlsActivationArgs\n        {\n            Domain = \"example.com\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := fastly.LookupTlsActivation(ctx, \u0026GetTlsActivationArgs{\n\t\t\tDomain: pulumi.StringRef(\"example.com\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTlsActivation.\n",
                "properties": {
                    "certificateId": {
                        "type": "string",
                        "description": "ID of the TLS Certificate used.\n"
                    },
                    "configurationId": {
                        "type": "string",
                        "description": "ID of the TLS Configuration used.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Domain that TLS was enabled on.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Fastly Activation ID. Conflicts with all other filters.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTlsActivation.\n",
                "properties": {
                    "certificateId": {
                        "type": "string",
                        "description": "ID of the TLS Certificate used.\n"
                    },
                    "configurationId": {
                        "type": "string",
                        "description": "ID of the TLS Configuration used.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Timestamp (GMT) when TLS was enabled.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Domain that TLS was enabled on.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Fastly Activation ID. Conflicts with all other filters.\n"
                    }
                },
                "type": "object",
                "required": [
                    "certificateId",
                    "configurationId",
                    "createdAt",
                    "domain",
                    "id"
                ]
            }
        },
        "fastly:index/getTlsActivationIds:getTlsActivationIds": {
            "description": "Use this data source to get the list of TLS Activation identifiers in Fastly.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTlsActivationIds.\n",
                "properties": {
                    "certificateId": {
                        "type": "string",
                        "description": "ID of TLS certificate used to filter activations\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTlsActivationIds.\n",
                "properties": {
                    "certificateId": {
                        "type": "string",
                        "description": "ID of TLS certificate used to filter activations\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IDs of the TLS Activations.\n"
                    }
                },
                "type": "object",
                "required": [
                    "ids",
                    "id"
                ]
            }
        },
        "fastly:index/getTlsCertificate:getTlsCertificate": {
            "description": "Use this data source to get information of a TLS certificate for use with other resources.\n\n\u003e **Warning:** The data source's filters are applied using an **AND** boolean operator, so depending on the combination\nof filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination\nwith any of the others.\n\n\u003e **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst example = pulumi.output(fastly.getTlsCertificate({\n    name: \"example.com\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\nexample = fastly.get_tls_certificate(name=\"example.com\")\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Fastly.GetTlsCertificate.InvokeAsync(new Fastly.GetTlsCertificateArgs\n        {\n            Name = \"example.com\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := fastly.LookupTlsCertificate(ctx, \u0026GetTlsCertificateArgs{\n\t\t\tName: pulumi.StringRef(\"example.com\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTlsCertificate.\n",
                "properties": {
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Domains that are listed in any certificates' Subject Alternative Names (SAN) list.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique ID assigned to certificate by Fastly\n"
                    },
                    "issuedTo": {
                        "type": "string",
                        "description": "The hostname for which a certificate was issued.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The certificate authority that issued the certificate.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Human-readable name used to identify the certificate. Defaults to the certificate's Common Name or first Subject Alternative Name entry.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTlsCertificate.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the certificate was created\n"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Domains that are listed in any certificates' Subject Alternative Names (SAN) list.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique ID assigned to certificate by Fastly\n"
                    },
                    "issuedTo": {
                        "type": "string",
                        "description": "The hostname for which a certificate was issued.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The certificate authority that issued the certificate.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Human-readable name used to identify the certificate. Defaults to the certificate's Common Name or first Subject Alternative Name entry.\n"
                    },
                    "replace": {
                        "type": "boolean",
                        "description": "A recommendation from Fastly indicating the key associated with this certificate is in need of rotation\n"
                    },
                    "serialNumber": {
                        "type": "string",
                        "description": "A value assigned by the issuer that is unique to a certificate\n"
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "description": "The algorithm used to sign the certificate\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the certificate was last updated\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "domains",
                    "id",
                    "issuedTo",
                    "issuer",
                    "name",
                    "replace",
                    "serialNumber",
                    "signatureAlgorithm",
                    "updatedAt"
                ]
            }
        },
        "fastly:index/getTlsCertificateIds:getTlsCertificateIds": {
            "description": "Use this data source to get the IDs of available TLS certificates for use with other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst exampleTlsCertificateIds = fastly.getTlsCertificateIds({});\nconst exampleTlsActivation = new fastly.TlsActivation(\"exampleTlsActivation\", {certificateId: exampleTlsCertificateIds.then(exampleTlsCertificateIds =\u003e exampleTlsCertificateIds.ids?[0])});\n// ...\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\nexample_tls_certificate_ids = fastly.get_tls_certificate_ids()\nexample_tls_activation = fastly.TlsActivation(\"exampleTlsActivation\", certificate_id=example_tls_certificate_ids.ids[0])\n# ...\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleTlsCertificateIds = Output.Create(Fastly.GetTlsCertificateIds.InvokeAsync());\n        var exampleTlsActivation = new Fastly.TlsActivation(\"exampleTlsActivation\", new Fastly.TlsActivationArgs\n        {\n            CertificateId = exampleTlsCertificateIds.Apply(exampleTlsCertificateIds =\u003e exampleTlsCertificateIds.Ids?[0]),\n        });\n        // ...\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleTlsCertificateIds, err := fastly.GetTlsCertificateIds(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = fastly.NewTlsActivation(ctx, \"exampleTlsActivation\", \u0026fastly.TlsActivationArgs{\n\t\t\tCertificateId: pulumi.String(exampleTlsCertificateIds.Ids[0]),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getTlsCertificateIds.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IDs corresponding to Custom TLS certificates.\n"
                    }
                },
                "type": "object",
                "required": [
                    "ids",
                    "id"
                ]
            }
        },
        "fastly:index/getTlsConfiguration:getTlsConfiguration": {
            "description": "Use this data source to get the ID of a TLS configuration for use with other resources.\n\n\u003e **Warning:** The data source's filters are applied using an **AND** boolean operator, so depending on the combination\nof filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination\nwith any of the others.\n\n\u003e **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst exampleTlsConfiguration = fastly.getTlsConfiguration({\n    \"default\": true,\n});\nconst exampleTlsActivation = new fastly.TlsActivation(\"exampleTlsActivation\", {configurationId: exampleTlsConfiguration.then(exampleTlsConfiguration =\u003e exampleTlsConfiguration.id)});\n// ...\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\nexample_tls_configuration = fastly.get_tls_configuration(default=True)\nexample_tls_activation = fastly.TlsActivation(\"exampleTlsActivation\", configuration_id=example_tls_configuration.id)\n# ...\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleTlsConfiguration = Output.Create(Fastly.GetTlsConfiguration.InvokeAsync(new Fastly.GetTlsConfigurationArgs\n        {\n            Default = true,\n        }));\n        var exampleTlsActivation = new Fastly.TlsActivation(\"exampleTlsActivation\", new Fastly.TlsActivationArgs\n        {\n            ConfigurationId = exampleTlsConfiguration.Apply(exampleTlsConfiguration =\u003e exampleTlsConfiguration.Id),\n        });\n        // ...\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleTlsConfiguration, err := fastly.GetTlsConfiguration(ctx, \u0026GetTlsConfigurationArgs{\n\t\t\tDefault: pulumi.BoolRef(true),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = fastly.NewTlsActivation(ctx, \"exampleTlsActivation\", \u0026fastly.TlsActivationArgs{\n\t\t\tConfigurationId: pulumi.String(exampleTlsConfiguration.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTlsConfiguration.\n",
                "properties": {
                    "default": {
                        "type": "boolean",
                        "description": "Signifies whether Fastly will use this configuration as a default when creating a new TLS activation.\n"
                    },
                    "httpProtocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "HTTP protocols available on the TLS configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of the TLS configuration obtained from the Fastly API or another data source. Conflicts with all the other filters.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Custom name of the TLS configuration.\n"
                    },
                    "tlsProtocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "TLS protocols available on the TLS configuration.\n"
                    },
                    "tlsService": {
                        "type": "string",
                        "description": "Whether the configuration should support the `PLATFORM` or `CUSTOM` TLS service.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTlsConfiguration.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the configuration was created.\n"
                    },
                    "default": {
                        "type": "boolean",
                        "description": "Signifies whether Fastly will use this configuration as a default when creating a new TLS activation.\n"
                    },
                    "dnsRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/getTlsConfigurationDnsRecord:getTlsConfigurationDnsRecord"
                        },
                        "description": "The available DNS addresses that can be used to enable TLS for a domain. DNS must be configured for a domain for TLS handshakes to succeed. If enabling TLS on an apex domain (e.g. `example.com`) you must create four A records (or four AAAA records for IPv6 support) using the displayed global A record's IP addresses with your DNS provider. For subdomains and wildcard domains (e.g. `www.example.com` or `*.example.com`) you will need to create a relevant CNAME record.\n"
                    },
                    "httpProtocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "HTTP protocols available on the TLS configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of the TLS configuration obtained from the Fastly API or another data source. Conflicts with all the other filters.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Custom name of the TLS configuration.\n"
                    },
                    "tlsProtocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "TLS protocols available on the TLS configuration.\n"
                    },
                    "tlsService": {
                        "type": "string",
                        "description": "Whether the configuration should support the `PLATFORM` or `CUSTOM` TLS service.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the configuration was last updated.\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "default",
                    "dnsRecords",
                    "httpProtocols",
                    "id",
                    "name",
                    "tlsProtocols",
                    "tlsService",
                    "updatedAt"
                ]
            }
        },
        "fastly:index/getTlsConfigurationIds:getTlsConfigurationIds": {
            "description": "Use this data source to get the IDs of available TLS configurations for use with other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst exampleTlsConfigurationIds = fastly.getTlsConfigurationIds({});\nconst exampleTlsActivation = new fastly.TlsActivation(\"exampleTlsActivation\", {configurationId: data.fastly_tls_configuration.example.ids[0]});\n// ...\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\nexample_tls_configuration_ids = fastly.get_tls_configuration_ids()\nexample_tls_activation = fastly.TlsActivation(\"exampleTlsActivation\", configuration_id=data[\"fastly_tls_configuration\"][\"example\"][\"ids\"])\n# ...\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleTlsConfigurationIds = Output.Create(Fastly.GetTlsConfigurationIds.InvokeAsync());\n        var exampleTlsActivation = new Fastly.TlsActivation(\"exampleTlsActivation\", new Fastly.TlsActivationArgs\n        {\n            ConfigurationId = data.Fastly_tls_configuration.Example.Ids[0],\n        });\n        // ...\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := fastly.GetTlsConfigurationIds(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = fastly.NewTlsActivation(ctx, \"exampleTlsActivation\", \u0026fastly.TlsActivationArgs{\n\t\t\tConfigurationId: pulumi.Any(data.Fastly_tls_configuration.Example.Ids[0]),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getTlsConfigurationIds.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IDs corresponding to available TLS configurations.\n"
                    }
                },
                "type": "object",
                "required": [
                    "ids",
                    "id"
                ]
            }
        },
        "fastly:index/getTlsDomain:getTlsDomain": {
            "description": "Use this data source to get the IDs of activations, certificates and subscriptions associated with a domain.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst domain = pulumi.output(fastly.getTlsDomain({\n    domain: \"example.com\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\ndomain = fastly.get_tls_domain(domain=\"example.com\")\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var domain = Output.Create(Fastly.GetTlsDomain.InvokeAsync(new Fastly.GetTlsDomainArgs\n        {\n            Domain = \"example.com\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := fastly.GetTlsDomain(ctx, \u0026GetTlsDomainArgs{\n\t\t\tDomain: \"example.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTlsDomain.\n",
                "properties": {
                    "domain": {
                        "type": "string",
                        "description": "Domain name to look up activations, certificates and subscriptions for.\n"
                    }
                },
                "type": "object",
                "required": [
                    "domain"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTlsDomain.\n",
                "properties": {
                    "domain": {
                        "type": "string",
                        "description": "Domain name to look up activations, certificates and subscriptions for.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "tlsActivationIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IDs of the activations associated with the domain.\n"
                    },
                    "tlsCertificateIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IDs of the certificates associated with the domain.\n"
                    },
                    "tlsSubscriptionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IDs of the subscriptions associated with the domain.\n"
                    }
                },
                "type": "object",
                "required": [
                    "domain",
                    "tlsActivationIds",
                    "tlsCertificateIds",
                    "tlsSubscriptionIds",
                    "id"
                ]
            }
        },
        "fastly:index/getTlsPlatformCertificate:getTlsPlatformCertificate": {
            "description": "Use this data source to get information of a Platform TLS certificate for use with other resources.\n\n\u003e **Warning:** The data source's filters are applied using an **AND** boolean operator, so depending on the combination\nof filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination\nwith any of the others.\n\n\u003e **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst example = pulumi.output(fastly.getTlsPlatformCertificate({\n    domains: [\"example.com\"],\n}));\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\nexample = fastly.get_tls_platform_certificate(domains=[\"example.com\"])\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Fastly.GetTlsPlatformCertificate.InvokeAsync(new Fastly.GetTlsPlatformCertificateArgs\n        {\n            Domains = \n            {\n                \"example.com\",\n            },\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := fastly.LookupTlsPlatformCertificate(ctx, \u0026GetTlsPlatformCertificateArgs{\n\t\t\tDomains: []string{\n\t\t\t\t\"example.com\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTlsPlatformCertificate.\n",
                "properties": {
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Domains that are listed in any certificate's Subject Alternative Names (SAN) list.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique ID assigned to certificate by Fastly. Conflicts with all the other filters.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTlsPlatformCertificate.\n",
                "properties": {
                    "configurationId": {
                        "type": "string",
                        "description": "ID of TLS configuration used to terminate TLS traffic.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the certificate was created.\n"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Domains that are listed in any certificate's Subject Alternative Names (SAN) list.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique ID assigned to certificate by Fastly. Conflicts with all the other filters.\n"
                    },
                    "notAfter": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the certificate will expire.\n"
                    },
                    "notBefore": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the certificate will become valid.\n"
                    },
                    "replace": {
                        "type": "boolean",
                        "description": "A recommendation from Fastly indicating the key associated with this certificate is in need of rotation.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the certificate was last updated.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configurationId",
                    "createdAt",
                    "domains",
                    "id",
                    "notAfter",
                    "notBefore",
                    "replace",
                    "updatedAt"
                ]
            }
        },
        "fastly:index/getTlsPlatformCertificateIds:getTlsPlatformCertificateIds": {
            "description": "Use this data source to get the IDs of available Platform TLS Certificates for use with other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst exampleTlsPlatformCertificateIds = fastly.getTlsPlatformCertificateIds({});\nconst exampleTlsPlatformCertificate = exampleTlsPlatformCertificateIds.then(exampleTlsPlatformCertificateIds =\u003e fastly.getTlsPlatformCertificate({\n    id: exampleTlsPlatformCertificateIds.ids?[0],\n}));\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\nexample_tls_platform_certificate_ids = fastly.get_tls_platform_certificate_ids()\nexample_tls_platform_certificate = fastly.get_tls_platform_certificate(id=example_tls_platform_certificate_ids.ids[0])\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleTlsPlatformCertificateIds = Output.Create(Fastly.GetTlsPlatformCertificateIds.InvokeAsync());\n        var exampleTlsPlatformCertificate = exampleTlsPlatformCertificateIds.Apply(exampleTlsPlatformCertificateIds =\u003e Output.Create(Fastly.GetTlsPlatformCertificate.InvokeAsync(new Fastly.GetTlsPlatformCertificateArgs\n        {\n            Id = exampleTlsPlatformCertificateIds.Ids?[0],\n        })));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleTlsPlatformCertificateIds, err := fastly.GetTlsPlatformCertificateIds(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = fastly.LookupTlsPlatformCertificate(ctx, \u0026GetTlsPlatformCertificateArgs{\n\t\t\tId: pulumi.StringRef(exampleTlsPlatformCertificateIds.Ids[0]),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getTlsPlatformCertificateIds.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IDs corresponding to Platform TLS certificates.\n"
                    }
                },
                "type": "object",
                "required": [
                    "ids",
                    "id"
                ]
            }
        },
        "fastly:index/getTlsPrivateKey:getTlsPrivateKey": {
            "description": "Use this data source to get information on a TLS Private Key uploaded to Fastly.\n\n\u003e **Warning:** The data source's filters are applied using an **AND** boolean operator, so depending on the combination\n of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination\n with any of the others.\n\n\u003e **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search\n is specific enough to return a single key.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst demo = fastly.getTlsPrivateKey({\n    name: \"demo-private-key\",\n});\nexport const privateKeyNeedsReplacing = demo.then(demo =\u003e demo.replace);\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\ndemo = fastly.get_tls_private_key(name=\"demo-private-key\")\npulumi.export(\"privateKeyNeedsReplacing\", demo.replace)\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demo = Output.Create(Fastly.GetTlsPrivateKey.InvokeAsync(new Fastly.GetTlsPrivateKeyArgs\n        {\n            Name = \"demo-private-key\",\n        }));\n        this.PrivateKeyNeedsReplacing = demo.Apply(demo =\u003e demo.Replace);\n    }\n\n    [Output(\"privateKeyNeedsReplacing\")]\n    public Output\u003cstring\u003e PrivateKeyNeedsReplacing { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdemo, err := fastly.LookupTlsPrivateKey(ctx, \u0026GetTlsPrivateKeyArgs{\n\t\t\tName: pulumi.StringRef(\"demo-private-key\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"privateKeyNeedsReplacing\", demo.Replace)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTlsPrivateKey.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the private key was created.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Fastly private key ID. Conflicts with all the other filters\n"
                    },
                    "keyLength": {
                        "type": "integer",
                        "description": "The key length used to generate the private key.\n"
                    },
                    "keyType": {
                        "type": "string",
                        "description": "The algorithm used to generate the private key. Must be RSA.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The human-readable name assigned to the private key when uploaded.\n"
                    },
                    "publicKeySha1": {
                        "type": "string",
                        "description": "A hash of the associated public key, useful for safely identifying it.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTlsPrivateKey.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Timestamp (GMT) when the private key was created.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Fastly private key ID. Conflicts with all the other filters\n"
                    },
                    "keyLength": {
                        "type": "integer",
                        "description": "The key length used to generate the private key.\n"
                    },
                    "keyType": {
                        "type": "string",
                        "description": "The algorithm used to generate the private key. Must be RSA.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The human-readable name assigned to the private key when uploaded.\n"
                    },
                    "publicKeySha1": {
                        "type": "string",
                        "description": "A hash of the associated public key, useful for safely identifying it.\n"
                    },
                    "replace": {
                        "type": "boolean",
                        "description": "Whether Fastly recommends replacing this private key.\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "id",
                    "keyLength",
                    "keyType",
                    "name",
                    "publicKeySha1",
                    "replace"
                ]
            }
        },
        "fastly:index/getTlsPrivateKeyIds:getTlsPrivateKeyIds": {
            "description": "Use this data source to get the list of TLS private key identifiers in Fastly.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst demo = fastly.getTlsPrivateKeyIds({});\nconst example = fastly.getTlsPrivateKey({\n    id: fastly_tls_private_key_ids.demo.ids[0],\n});\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\ndemo = fastly.get_tls_private_key_ids()\nexample = fastly.get_tls_private_key(id=fastly_tls_private_key_ids[\"demo\"][\"ids\"])\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demo = Output.Create(Fastly.GetTlsPrivateKeyIds.InvokeAsync());\n        var example = Output.Create(Fastly.GetTlsPrivateKey.InvokeAsync(new Fastly.GetTlsPrivateKeyArgs\n        {\n            Id = fastly_tls_private_key_ids.Demo.Ids[0],\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := fastly.GetTlsPrivateKeyIds(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = fastly.LookupTlsPrivateKey(ctx, \u0026GetTlsPrivateKeyArgs{\n\t\t\tId: pulumi.StringRef(fastly_tls_private_key_ids.Demo.Ids[0]),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getTlsPrivateKeyIds.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IDs of the TLS private keys.\n"
                    }
                },
                "type": "object",
                "required": [
                    "ids",
                    "id"
                ]
            }
        },
        "fastly:index/getTlsSubscription:getTlsSubscription": {
            "description": "Use this data source to get information about a TLS subscription.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fastly from \"@pulumi/fastly\";\n\nconst example = pulumi.output(fastly.getTlsSubscription({\n    domains: [\"example.com\"],\n}));\n```\n```python\nimport pulumi\nimport pulumi_fastly as fastly\n\nexample = fastly.get_tls_subscription(domains=[\"example.com\"])\n```\n```csharp\nusing Pulumi;\nusing Fastly = Pulumi.Fastly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Fastly.GetTlsSubscription.InvokeAsync(new Fastly.GetTlsSubscriptionArgs\n        {\n            Domains = \n            {\n                \"example.com\",\n            },\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := fastly.LookupTlsSubscription(ctx, \u0026GetTlsSubscriptionArgs{\n\t\t\tDomains: []string{\n\t\t\t\t\"example.com\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTlsSubscription.\n",
                "properties": {
                    "certificateAuthority": {
                        "type": "string",
                        "description": "The entity that issues and certifies the TLS certificates for the subscription.\n"
                    },
                    "configurationId": {
                        "type": "string",
                        "description": "ID of TLS configuration used to terminate TLS traffic.\n"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of domains on which to enable TLS.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of TLS subscription. Conflicts with all the other filters.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTlsSubscription.\n",
                "properties": {
                    "certificateAuthority": {
                        "type": "string",
                        "description": "The entity that issues and certifies the TLS certificates for the subscription.\n"
                    },
                    "commonName": {
                        "type": "string",
                        "description": "The common name associated with the subscription generated by Fastly TLS.\n"
                    },
                    "configurationId": {
                        "type": "string",
                        "description": "ID of TLS configuration used to terminate TLS traffic.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Timestamp (GMT) when subscription was created.\n"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of domains on which to enable TLS.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of TLS subscription. Conflicts with all the other filters.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current state of the subscription. The list of possible states are: `pending`, `processing`, `issued`, and `renewing`.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Timestamp (GMT) when subscription was last updated.\n"
                    }
                },
                "type": "object",
                "required": [
                    "certificateAuthority",
                    "commonName",
                    "configurationId",
                    "createdAt",
                    "domains",
                    "id",
                    "state",
                    "updatedAt"
                ]
            }
        },
        "fastly:index/getTlsSubscriptionIds:getTlsSubscriptionIds": {
            "description": "Use this data source to get the list of IDs of TLS Subscriptions in Fastly.\n",
            "outputs": {
                "description": "A collection of values returned by getTlsSubscriptionIds.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IDs of available TLS subscriptions.\n"
                    }
                },
                "type": "object",
                "required": [
                    "ids",
                    "id"
                ]
            }
        },
        "fastly:index/getWafRules:getWafRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getWafRules.\n",
                "properties": {
                    "excludeModsecRuleIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Exclusion filter by WAF rule's ModSecurity ID.\n"
                    },
                    "modsecRuleIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of modsecurity rules IDs to be used as filters for the data set.\n"
                    },
                    "publishers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Inclusion filter by WAF rule's publishers.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Inclusion filter by WAF rule's tags.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getWafRules.\n",
                "properties": {
                    "excludeModsecRuleIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of modsecurity rules IDs to be excluded from the data set.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "modsecRuleIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of modsecurity rules IDs to be used as filters for the data set.\n"
                    },
                    "publishers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of publishers to be used as filters for the data set.\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/fastly:index/getWafRulesRule:getWafRulesRule"
                        },
                        "description": "The list of rules that results from any given combination of filters.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to be used as filters for the data set.\n"
                    }
                },
                "type": "object",
                "required": [
                    "rules",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "fastly": "Fastly"
            },
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-fastly/sdk/v5/go/fastly"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing fastly cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/fastly/terraform-provider-fastly)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-fastly` repo](https://github.com/pulumi/pulumi-fastly/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`fastly/terraform-provider-fastly` repo](https://github.com/fastly/terraform-provider-fastly/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/fastly/terraform-provider-fastly)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-fastly` repo](https://github.com/pulumi/pulumi-fastly/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`fastly/terraform-provider-fastly` repo](https://github.com/fastly/terraform-provider-fastly/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}