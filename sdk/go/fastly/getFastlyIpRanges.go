// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fastly

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-fastly/sdk/v9/go/fastly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the [IP ranges](https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges) of Fastly edge nodes.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws"
//	"github.com/pulumi/pulumi-fastly/sdk/v9/go/fastly"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fastly, err := fastly.GetFastlyIpRanges(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = aws.NewSecurityGroup(ctx, "from_fastly", &aws.SecurityGroupArgs{
//				Name: "from_fastly",
//				Ingress: []map[string]interface{}{
//					map[string]interface{}{
//						"fromPort":       "443",
//						"toPort":         "443",
//						"protocol":       "tcp",
//						"cidrBlocks":     fastly.CidrBlocks,
//						"ipv6CidrBlocks": fastly.Ipv6CidrBlocks,
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// [1]: https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges
func GetFastlyIpRanges(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetFastlyIpRangesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFastlyIpRangesResult
	err := ctx.Invoke("fastly:index/getFastlyIpRanges:getFastlyIpRanges", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getFastlyIpRanges.
type GetFastlyIpRangesResult struct {
	// The lexically ordered list of ipv4 CIDR blocks.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The lexically ordered list of ipv6 CIDR blocks.
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
}

func GetFastlyIpRangesOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetFastlyIpRangesResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetFastlyIpRangesResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("fastly:index/getFastlyIpRanges:getFastlyIpRanges", nil, GetFastlyIpRangesResultOutput{}, options).(GetFastlyIpRangesResultOutput), nil
	}).(GetFastlyIpRangesResultOutput)
}

// A collection of values returned by getFastlyIpRanges.
type GetFastlyIpRangesResultOutput struct{ *pulumi.OutputState }

func (GetFastlyIpRangesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFastlyIpRangesResult)(nil)).Elem()
}

func (o GetFastlyIpRangesResultOutput) ToGetFastlyIpRangesResultOutput() GetFastlyIpRangesResultOutput {
	return o
}

func (o GetFastlyIpRangesResultOutput) ToGetFastlyIpRangesResultOutputWithContext(ctx context.Context) GetFastlyIpRangesResultOutput {
	return o
}

// The lexically ordered list of ipv4 CIDR blocks.
func (o GetFastlyIpRangesResultOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFastlyIpRangesResult) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFastlyIpRangesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFastlyIpRangesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The lexically ordered list of ipv6 CIDR blocks.
func (o GetFastlyIpRangesResultOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFastlyIpRangesResult) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFastlyIpRangesResultOutput{})
}
