// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fastly

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-fastly/sdk/v8/go/fastly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of TLS Activation identifiers in Fastly.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fastly/sdk/v8/go/fastly"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleTlsActivationIds, err := fastly.GetTlsActivationIds(ctx, &fastly.GetTlsActivationIdsArgs{
//				CertificateId: pulumi.StringRef(fastly_tls_certificate.Example.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			exampleTlsActivation := "TODO: For expression"
//			ctx.Export("activationDomains", "TODO: For expression")
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetTlsActivationIds(ctx *pulumi.Context, args *GetTlsActivationIdsArgs, opts ...pulumi.InvokeOption) (*GetTlsActivationIdsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTlsActivationIdsResult
	err := ctx.Invoke("fastly:index/getTlsActivationIds:getTlsActivationIds", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTlsActivationIds.
type GetTlsActivationIdsArgs struct {
	// ID of TLS certificate used to filter activations
	CertificateId *string `pulumi:"certificateId"`
}

// A collection of values returned by getTlsActivationIds.
type GetTlsActivationIdsResult struct {
	// ID of TLS certificate used to filter activations
	CertificateId *string `pulumi:"certificateId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of IDs of the TLS Activations.
	Ids []string `pulumi:"ids"`
}

func GetTlsActivationIdsOutput(ctx *pulumi.Context, args GetTlsActivationIdsOutputArgs, opts ...pulumi.InvokeOption) GetTlsActivationIdsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTlsActivationIdsResult, error) {
			args := v.(GetTlsActivationIdsArgs)
			r, err := GetTlsActivationIds(ctx, &args, opts...)
			var s GetTlsActivationIdsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTlsActivationIdsResultOutput)
}

// A collection of arguments for invoking getTlsActivationIds.
type GetTlsActivationIdsOutputArgs struct {
	// ID of TLS certificate used to filter activations
	CertificateId pulumi.StringPtrInput `pulumi:"certificateId"`
}

func (GetTlsActivationIdsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTlsActivationIdsArgs)(nil)).Elem()
}

// A collection of values returned by getTlsActivationIds.
type GetTlsActivationIdsResultOutput struct{ *pulumi.OutputState }

func (GetTlsActivationIdsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTlsActivationIdsResult)(nil)).Elem()
}

func (o GetTlsActivationIdsResultOutput) ToGetTlsActivationIdsResultOutput() GetTlsActivationIdsResultOutput {
	return o
}

func (o GetTlsActivationIdsResultOutput) ToGetTlsActivationIdsResultOutputWithContext(ctx context.Context) GetTlsActivationIdsResultOutput {
	return o
}

// ID of TLS certificate used to filter activations
func (o GetTlsActivationIdsResultOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTlsActivationIdsResult) *string { return v.CertificateId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTlsActivationIdsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTlsActivationIdsResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of IDs of the TLS Activations.
func (o GetTlsActivationIdsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTlsActivationIdsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTlsActivationIdsResultOutput{})
}
