// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fastly

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-fastly/sdk/v11/go/fastly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupNgwafThresholds(ctx *pulumi.Context, args *LookupNgwafThresholdsArgs, opts ...pulumi.InvokeOption) (*LookupNgwafThresholdsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNgwafThresholdsResult
	err := ctx.Invoke("fastly:index/getNgwafThresholds:getNgwafThresholds", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNgwafThresholds.
type LookupNgwafThresholdsArgs struct {
	// The ID of the workspace.
	WorkspaceId string `pulumi:"workspaceId"`
}

// A collection of values returned by getNgwafThresholds.
type LookupNgwafThresholdsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of all thresholds for a given workspace.
	Thresholds []GetNgwafThresholdsThreshold `pulumi:"thresholds"`
	// The ID of the workspace.
	WorkspaceId string `pulumi:"workspaceId"`
}

func LookupNgwafThresholdsOutput(ctx *pulumi.Context, args LookupNgwafThresholdsOutputArgs, opts ...pulumi.InvokeOption) LookupNgwafThresholdsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNgwafThresholdsResultOutput, error) {
			args := v.(LookupNgwafThresholdsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("fastly:index/getNgwafThresholds:getNgwafThresholds", args, LookupNgwafThresholdsResultOutput{}, options).(LookupNgwafThresholdsResultOutput), nil
		}).(LookupNgwafThresholdsResultOutput)
}

// A collection of arguments for invoking getNgwafThresholds.
type LookupNgwafThresholdsOutputArgs struct {
	// The ID of the workspace.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (LookupNgwafThresholdsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNgwafThresholdsArgs)(nil)).Elem()
}

// A collection of values returned by getNgwafThresholds.
type LookupNgwafThresholdsResultOutput struct{ *pulumi.OutputState }

func (LookupNgwafThresholdsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNgwafThresholdsResult)(nil)).Elem()
}

func (o LookupNgwafThresholdsResultOutput) ToLookupNgwafThresholdsResultOutput() LookupNgwafThresholdsResultOutput {
	return o
}

func (o LookupNgwafThresholdsResultOutput) ToLookupNgwafThresholdsResultOutputWithContext(ctx context.Context) LookupNgwafThresholdsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNgwafThresholdsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNgwafThresholdsResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of all thresholds for a given workspace.
func (o LookupNgwafThresholdsResultOutput) Thresholds() GetNgwafThresholdsThresholdArrayOutput {
	return o.ApplyT(func(v LookupNgwafThresholdsResult) []GetNgwafThresholdsThreshold { return v.Thresholds }).(GetNgwafThresholdsThresholdArrayOutput)
}

// The ID of the workspace.
func (o LookupNgwafThresholdsResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNgwafThresholdsResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNgwafThresholdsResultOutput{})
}
