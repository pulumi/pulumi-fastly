// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fastly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-fastly/sdk/v11/go/fastly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Fastly Next-Gen WAF **List** resource scoped to an **account**.
//
// Account-scoped lists are reusable across all workspaces in the account and can be referenced in account-level or workspace-level rules.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fastly/sdk/v11/go/fastly"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fastly.NewNgwafAccountList(ctx, "example", &fastly.NgwafAccountListArgs{
//				Name:        pulumi.String("shared-bot-ip-list"),
//				Description: pulumi.String("List of known bot IPs shared across workspaces"),
//				Type:        pulumi.String("ip"),
//				Entries: pulumi.StringArray{
//					pulumi.String("1.2.3.4"),
//					pulumi.String("5.6.7.8"),
//					pulumi.String("203.0.113.42"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Fastly Next-Gen WAF account-scoped lists can be imported using just the list ID, e.g.:
//
// ```sh
// $ pulumi import fastly:index/ngwafAccountList:NgwafAccountList demo <listID>
// ```
type NgwafAccountList struct {
	pulumi.CustomResourceState

	// INTERNAL: Used to build scope for account-scoped lists. Not user-configurable.
	AppliesTos pulumi.StringArrayOutput `pulumi:"appliesTos"`
	// The description of the list.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The values in the list.
	Entries pulumi.StringArrayOutput `pulumi:"entries"`
	// The name of the list.
	Name pulumi.StringOutput `pulumi:"name"`
	// The type of list. Accepted values are `string`, `wildcard`, `ip`, `country`, and `signal`.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewNgwafAccountList registers a new resource with the given unique name, arguments, and options.
func NewNgwafAccountList(ctx *pulumi.Context,
	name string, args *NgwafAccountListArgs, opts ...pulumi.ResourceOption) (*NgwafAccountList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"appliesTos",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NgwafAccountList
	err := ctx.RegisterResource("fastly:index/ngwafAccountList:NgwafAccountList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNgwafAccountList gets an existing NgwafAccountList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNgwafAccountList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NgwafAccountListState, opts ...pulumi.ResourceOption) (*NgwafAccountList, error) {
	var resource NgwafAccountList
	err := ctx.ReadResource("fastly:index/ngwafAccountList:NgwafAccountList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NgwafAccountList resources.
type ngwafAccountListState struct {
	// INTERNAL: Used to build scope for account-scoped lists. Not user-configurable.
	AppliesTos []string `pulumi:"appliesTos"`
	// The description of the list.
	Description *string `pulumi:"description"`
	// The values in the list.
	Entries []string `pulumi:"entries"`
	// The name of the list.
	Name *string `pulumi:"name"`
	// The type of list. Accepted values are `string`, `wildcard`, `ip`, `country`, and `signal`.
	Type *string `pulumi:"type"`
}

type NgwafAccountListState struct {
	// INTERNAL: Used to build scope for account-scoped lists. Not user-configurable.
	AppliesTos pulumi.StringArrayInput
	// The description of the list.
	Description pulumi.StringPtrInput
	// The values in the list.
	Entries pulumi.StringArrayInput
	// The name of the list.
	Name pulumi.StringPtrInput
	// The type of list. Accepted values are `string`, `wildcard`, `ip`, `country`, and `signal`.
	Type pulumi.StringPtrInput
}

func (NgwafAccountListState) ElementType() reflect.Type {
	return reflect.TypeOf((*ngwafAccountListState)(nil)).Elem()
}

type ngwafAccountListArgs struct {
	// The description of the list.
	Description *string `pulumi:"description"`
	// The values in the list.
	Entries []string `pulumi:"entries"`
	// The name of the list.
	Name *string `pulumi:"name"`
	// The type of list. Accepted values are `string`, `wildcard`, `ip`, `country`, and `signal`.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a NgwafAccountList resource.
type NgwafAccountListArgs struct {
	// The description of the list.
	Description pulumi.StringPtrInput
	// The values in the list.
	Entries pulumi.StringArrayInput
	// The name of the list.
	Name pulumi.StringPtrInput
	// The type of list. Accepted values are `string`, `wildcard`, `ip`, `country`, and `signal`.
	Type pulumi.StringInput
}

func (NgwafAccountListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ngwafAccountListArgs)(nil)).Elem()
}

type NgwafAccountListInput interface {
	pulumi.Input

	ToNgwafAccountListOutput() NgwafAccountListOutput
	ToNgwafAccountListOutputWithContext(ctx context.Context) NgwafAccountListOutput
}

func (*NgwafAccountList) ElementType() reflect.Type {
	return reflect.TypeOf((**NgwafAccountList)(nil)).Elem()
}

func (i *NgwafAccountList) ToNgwafAccountListOutput() NgwafAccountListOutput {
	return i.ToNgwafAccountListOutputWithContext(context.Background())
}

func (i *NgwafAccountList) ToNgwafAccountListOutputWithContext(ctx context.Context) NgwafAccountListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgwafAccountListOutput)
}

// NgwafAccountListArrayInput is an input type that accepts NgwafAccountListArray and NgwafAccountListArrayOutput values.
// You can construct a concrete instance of `NgwafAccountListArrayInput` via:
//
//	NgwafAccountListArray{ NgwafAccountListArgs{...} }
type NgwafAccountListArrayInput interface {
	pulumi.Input

	ToNgwafAccountListArrayOutput() NgwafAccountListArrayOutput
	ToNgwafAccountListArrayOutputWithContext(context.Context) NgwafAccountListArrayOutput
}

type NgwafAccountListArray []NgwafAccountListInput

func (NgwafAccountListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NgwafAccountList)(nil)).Elem()
}

func (i NgwafAccountListArray) ToNgwafAccountListArrayOutput() NgwafAccountListArrayOutput {
	return i.ToNgwafAccountListArrayOutputWithContext(context.Background())
}

func (i NgwafAccountListArray) ToNgwafAccountListArrayOutputWithContext(ctx context.Context) NgwafAccountListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgwafAccountListArrayOutput)
}

// NgwafAccountListMapInput is an input type that accepts NgwafAccountListMap and NgwafAccountListMapOutput values.
// You can construct a concrete instance of `NgwafAccountListMapInput` via:
//
//	NgwafAccountListMap{ "key": NgwafAccountListArgs{...} }
type NgwafAccountListMapInput interface {
	pulumi.Input

	ToNgwafAccountListMapOutput() NgwafAccountListMapOutput
	ToNgwafAccountListMapOutputWithContext(context.Context) NgwafAccountListMapOutput
}

type NgwafAccountListMap map[string]NgwafAccountListInput

func (NgwafAccountListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NgwafAccountList)(nil)).Elem()
}

func (i NgwafAccountListMap) ToNgwafAccountListMapOutput() NgwafAccountListMapOutput {
	return i.ToNgwafAccountListMapOutputWithContext(context.Background())
}

func (i NgwafAccountListMap) ToNgwafAccountListMapOutputWithContext(ctx context.Context) NgwafAccountListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgwafAccountListMapOutput)
}

type NgwafAccountListOutput struct{ *pulumi.OutputState }

func (NgwafAccountListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NgwafAccountList)(nil)).Elem()
}

func (o NgwafAccountListOutput) ToNgwafAccountListOutput() NgwafAccountListOutput {
	return o
}

func (o NgwafAccountListOutput) ToNgwafAccountListOutputWithContext(ctx context.Context) NgwafAccountListOutput {
	return o
}

// INTERNAL: Used to build scope for account-scoped lists. Not user-configurable.
func (o NgwafAccountListOutput) AppliesTos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NgwafAccountList) pulumi.StringArrayOutput { return v.AppliesTos }).(pulumi.StringArrayOutput)
}

// The description of the list.
func (o NgwafAccountListOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NgwafAccountList) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The values in the list.
func (o NgwafAccountListOutput) Entries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NgwafAccountList) pulumi.StringArrayOutput { return v.Entries }).(pulumi.StringArrayOutput)
}

// The name of the list.
func (o NgwafAccountListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NgwafAccountList) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The type of list. Accepted values are `string`, `wildcard`, `ip`, `country`, and `signal`.
func (o NgwafAccountListOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NgwafAccountList) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type NgwafAccountListArrayOutput struct{ *pulumi.OutputState }

func (NgwafAccountListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NgwafAccountList)(nil)).Elem()
}

func (o NgwafAccountListArrayOutput) ToNgwafAccountListArrayOutput() NgwafAccountListArrayOutput {
	return o
}

func (o NgwafAccountListArrayOutput) ToNgwafAccountListArrayOutputWithContext(ctx context.Context) NgwafAccountListArrayOutput {
	return o
}

func (o NgwafAccountListArrayOutput) Index(i pulumi.IntInput) NgwafAccountListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NgwafAccountList {
		return vs[0].([]*NgwafAccountList)[vs[1].(int)]
	}).(NgwafAccountListOutput)
}

type NgwafAccountListMapOutput struct{ *pulumi.OutputState }

func (NgwafAccountListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NgwafAccountList)(nil)).Elem()
}

func (o NgwafAccountListMapOutput) ToNgwafAccountListMapOutput() NgwafAccountListMapOutput {
	return o
}

func (o NgwafAccountListMapOutput) ToNgwafAccountListMapOutputWithContext(ctx context.Context) NgwafAccountListMapOutput {
	return o
}

func (o NgwafAccountListMapOutput) MapIndex(k pulumi.StringInput) NgwafAccountListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NgwafAccountList {
		return vs[0].(map[string]*NgwafAccountList)[vs[1].(string)]
	}).(NgwafAccountListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NgwafAccountListInput)(nil)).Elem(), &NgwafAccountList{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgwafAccountListArrayInput)(nil)).Elem(), NgwafAccountListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgwafAccountListMapInput)(nil)).Elem(), NgwafAccountListMap{})
	pulumi.RegisterOutputType(NgwafAccountListOutput{})
	pulumi.RegisterOutputType(NgwafAccountListArrayOutput{})
	pulumi.RegisterOutputType(NgwafAccountListMapOutput{})
}
