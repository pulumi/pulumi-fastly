// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fastly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-fastly/sdk/v9/go/fastly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an Object Storage Access Key, which can be used to manage resources in various clouds.
//
// Implements the [Object Storage Access Key API functions](https://www.fastly.com/documentation/reference/api/services/resources/object-storage-access-keys/)
//
// > **Note:** Access Keys cannot be updated, so when you change a value in any of the editable fields the key is destroyed and remade
//
// # Basic usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fastly/sdk/v9/go/fastly"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fastly.NewObjectStorageAccessKeys(ctx, "demo", &fastly.ObjectStorageAccessKeysArgs{
//				Buckets: pulumi.StringArray{
//					pulumi.String("bucket1"),
//					pulumi.String("bucket2"),
//				},
//				Description: pulumi.String("this is a bucket"),
//				Permission:  pulumi.String(""),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// > **Note:** Permissions can only be one of these values listed [here](https://quic.fastly.com/documentation/reference/api/services/resources/object-storage-access-keys/#permissions), any other values will return an error
type ObjectStorageAccessKeys struct {
	pulumi.CustomResourceState

	// ID for the object storage access token
	AccessKeyId pulumi.StringOutput `pulumi:"accessKeyId"`
	// Optional list of buckets the access key will be associated with.  Example: `["bucket1", "bucket2"]`
	Buckets pulumi.StringArrayOutput `pulumi:"buckets"`
	// The description of the access key
	Description pulumi.StringOutput `pulumi:"description"`
	// The permissions of the access key
	Permission pulumi.StringOutput `pulumi:"permission"`
	// Secret key for the object storage access token
	SecretKey pulumi.StringOutput `pulumi:"secretKey"`
}

// NewObjectStorageAccessKeys registers a new resource with the given unique name, arguments, and options.
func NewObjectStorageAccessKeys(ctx *pulumi.Context,
	name string, args *ObjectStorageAccessKeysArgs, opts ...pulumi.ResourceOption) (*ObjectStorageAccessKeys, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Permission == nil {
		return nil, errors.New("invalid value for required argument 'Permission'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"secretKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ObjectStorageAccessKeys
	err := ctx.RegisterResource("fastly:index/objectStorageAccessKeys:ObjectStorageAccessKeys", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectStorageAccessKeys gets an existing ObjectStorageAccessKeys resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectStorageAccessKeys(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectStorageAccessKeysState, opts ...pulumi.ResourceOption) (*ObjectStorageAccessKeys, error) {
	var resource ObjectStorageAccessKeys
	err := ctx.ReadResource("fastly:index/objectStorageAccessKeys:ObjectStorageAccessKeys", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectStorageAccessKeys resources.
type objectStorageAccessKeysState struct {
	// ID for the object storage access token
	AccessKeyId *string `pulumi:"accessKeyId"`
	// Optional list of buckets the access key will be associated with.  Example: `["bucket1", "bucket2"]`
	Buckets []string `pulumi:"buckets"`
	// The description of the access key
	Description *string `pulumi:"description"`
	// The permissions of the access key
	Permission *string `pulumi:"permission"`
	// Secret key for the object storage access token
	SecretKey *string `pulumi:"secretKey"`
}

type ObjectStorageAccessKeysState struct {
	// ID for the object storage access token
	AccessKeyId pulumi.StringPtrInput
	// Optional list of buckets the access key will be associated with.  Example: `["bucket1", "bucket2"]`
	Buckets pulumi.StringArrayInput
	// The description of the access key
	Description pulumi.StringPtrInput
	// The permissions of the access key
	Permission pulumi.StringPtrInput
	// Secret key for the object storage access token
	SecretKey pulumi.StringPtrInput
}

func (ObjectStorageAccessKeysState) ElementType() reflect.Type {
	return reflect.TypeOf((*objectStorageAccessKeysState)(nil)).Elem()
}

type objectStorageAccessKeysArgs struct {
	// Optional list of buckets the access key will be associated with.  Example: `["bucket1", "bucket2"]`
	Buckets []string `pulumi:"buckets"`
	// The description of the access key
	Description string `pulumi:"description"`
	// The permissions of the access key
	Permission string `pulumi:"permission"`
}

// The set of arguments for constructing a ObjectStorageAccessKeys resource.
type ObjectStorageAccessKeysArgs struct {
	// Optional list of buckets the access key will be associated with.  Example: `["bucket1", "bucket2"]`
	Buckets pulumi.StringArrayInput
	// The description of the access key
	Description pulumi.StringInput
	// The permissions of the access key
	Permission pulumi.StringInput
}

func (ObjectStorageAccessKeysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*objectStorageAccessKeysArgs)(nil)).Elem()
}

type ObjectStorageAccessKeysInput interface {
	pulumi.Input

	ToObjectStorageAccessKeysOutput() ObjectStorageAccessKeysOutput
	ToObjectStorageAccessKeysOutputWithContext(ctx context.Context) ObjectStorageAccessKeysOutput
}

func (*ObjectStorageAccessKeys) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStorageAccessKeys)(nil)).Elem()
}

func (i *ObjectStorageAccessKeys) ToObjectStorageAccessKeysOutput() ObjectStorageAccessKeysOutput {
	return i.ToObjectStorageAccessKeysOutputWithContext(context.Background())
}

func (i *ObjectStorageAccessKeys) ToObjectStorageAccessKeysOutputWithContext(ctx context.Context) ObjectStorageAccessKeysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageAccessKeysOutput)
}

// ObjectStorageAccessKeysArrayInput is an input type that accepts ObjectStorageAccessKeysArray and ObjectStorageAccessKeysArrayOutput values.
// You can construct a concrete instance of `ObjectStorageAccessKeysArrayInput` via:
//
//	ObjectStorageAccessKeysArray{ ObjectStorageAccessKeysArgs{...} }
type ObjectStorageAccessKeysArrayInput interface {
	pulumi.Input

	ToObjectStorageAccessKeysArrayOutput() ObjectStorageAccessKeysArrayOutput
	ToObjectStorageAccessKeysArrayOutputWithContext(context.Context) ObjectStorageAccessKeysArrayOutput
}

type ObjectStorageAccessKeysArray []ObjectStorageAccessKeysInput

func (ObjectStorageAccessKeysArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectStorageAccessKeys)(nil)).Elem()
}

func (i ObjectStorageAccessKeysArray) ToObjectStorageAccessKeysArrayOutput() ObjectStorageAccessKeysArrayOutput {
	return i.ToObjectStorageAccessKeysArrayOutputWithContext(context.Background())
}

func (i ObjectStorageAccessKeysArray) ToObjectStorageAccessKeysArrayOutputWithContext(ctx context.Context) ObjectStorageAccessKeysArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageAccessKeysArrayOutput)
}

// ObjectStorageAccessKeysMapInput is an input type that accepts ObjectStorageAccessKeysMap and ObjectStorageAccessKeysMapOutput values.
// You can construct a concrete instance of `ObjectStorageAccessKeysMapInput` via:
//
//	ObjectStorageAccessKeysMap{ "key": ObjectStorageAccessKeysArgs{...} }
type ObjectStorageAccessKeysMapInput interface {
	pulumi.Input

	ToObjectStorageAccessKeysMapOutput() ObjectStorageAccessKeysMapOutput
	ToObjectStorageAccessKeysMapOutputWithContext(context.Context) ObjectStorageAccessKeysMapOutput
}

type ObjectStorageAccessKeysMap map[string]ObjectStorageAccessKeysInput

func (ObjectStorageAccessKeysMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectStorageAccessKeys)(nil)).Elem()
}

func (i ObjectStorageAccessKeysMap) ToObjectStorageAccessKeysMapOutput() ObjectStorageAccessKeysMapOutput {
	return i.ToObjectStorageAccessKeysMapOutputWithContext(context.Background())
}

func (i ObjectStorageAccessKeysMap) ToObjectStorageAccessKeysMapOutputWithContext(ctx context.Context) ObjectStorageAccessKeysMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageAccessKeysMapOutput)
}

type ObjectStorageAccessKeysOutput struct{ *pulumi.OutputState }

func (ObjectStorageAccessKeysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStorageAccessKeys)(nil)).Elem()
}

func (o ObjectStorageAccessKeysOutput) ToObjectStorageAccessKeysOutput() ObjectStorageAccessKeysOutput {
	return o
}

func (o ObjectStorageAccessKeysOutput) ToObjectStorageAccessKeysOutputWithContext(ctx context.Context) ObjectStorageAccessKeysOutput {
	return o
}

// ID for the object storage access token
func (o ObjectStorageAccessKeysOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStorageAccessKeys) pulumi.StringOutput { return v.AccessKeyId }).(pulumi.StringOutput)
}

// Optional list of buckets the access key will be associated with.  Example: `["bucket1", "bucket2"]`
func (o ObjectStorageAccessKeysOutput) Buckets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ObjectStorageAccessKeys) pulumi.StringArrayOutput { return v.Buckets }).(pulumi.StringArrayOutput)
}

// The description of the access key
func (o ObjectStorageAccessKeysOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStorageAccessKeys) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The permissions of the access key
func (o ObjectStorageAccessKeysOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStorageAccessKeys) pulumi.StringOutput { return v.Permission }).(pulumi.StringOutput)
}

// Secret key for the object storage access token
func (o ObjectStorageAccessKeysOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStorageAccessKeys) pulumi.StringOutput { return v.SecretKey }).(pulumi.StringOutput)
}

type ObjectStorageAccessKeysArrayOutput struct{ *pulumi.OutputState }

func (ObjectStorageAccessKeysArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectStorageAccessKeys)(nil)).Elem()
}

func (o ObjectStorageAccessKeysArrayOutput) ToObjectStorageAccessKeysArrayOutput() ObjectStorageAccessKeysArrayOutput {
	return o
}

func (o ObjectStorageAccessKeysArrayOutput) ToObjectStorageAccessKeysArrayOutputWithContext(ctx context.Context) ObjectStorageAccessKeysArrayOutput {
	return o
}

func (o ObjectStorageAccessKeysArrayOutput) Index(i pulumi.IntInput) ObjectStorageAccessKeysOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ObjectStorageAccessKeys {
		return vs[0].([]*ObjectStorageAccessKeys)[vs[1].(int)]
	}).(ObjectStorageAccessKeysOutput)
}

type ObjectStorageAccessKeysMapOutput struct{ *pulumi.OutputState }

func (ObjectStorageAccessKeysMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectStorageAccessKeys)(nil)).Elem()
}

func (o ObjectStorageAccessKeysMapOutput) ToObjectStorageAccessKeysMapOutput() ObjectStorageAccessKeysMapOutput {
	return o
}

func (o ObjectStorageAccessKeysMapOutput) ToObjectStorageAccessKeysMapOutputWithContext(ctx context.Context) ObjectStorageAccessKeysMapOutput {
	return o
}

func (o ObjectStorageAccessKeysMapOutput) MapIndex(k pulumi.StringInput) ObjectStorageAccessKeysOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ObjectStorageAccessKeys {
		return vs[0].(map[string]*ObjectStorageAccessKeys)[vs[1].(string)]
	}).(ObjectStorageAccessKeysOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageAccessKeysInput)(nil)).Elem(), &ObjectStorageAccessKeys{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageAccessKeysArrayInput)(nil)).Elem(), ObjectStorageAccessKeysArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageAccessKeysMapInput)(nil)).Elem(), ObjectStorageAccessKeysMap{})
	pulumi.RegisterOutputType(ObjectStorageAccessKeysOutput{})
	pulumi.RegisterOutputType(ObjectStorageAccessKeysArrayOutput{})
	pulumi.RegisterOutputType(ObjectStorageAccessKeysMapOutput{})
}
