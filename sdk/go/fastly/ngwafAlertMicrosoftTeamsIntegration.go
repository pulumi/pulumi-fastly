// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fastly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-fastly/sdk/v11/go/fastly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides Fastly Next-Gen WAF Alert Microsoft Teams integrations, which provide a connection to Microsoft Teams.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fastly/sdk/v11/go/fastly"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fastly.NewNgwafAlertMicrosoftTeamsIntegration(ctx, "demo_microsoft_teams_alert", &fastly.NgwafAlertMicrosoftTeamsIntegrationArgs{
//				Description: pulumi.String("Some Description"),
//				Webhook:     pulumi.String("https://example.com/microsoft-teams/my-service"),
//				WorkspaceId: pulumi.Any(demo.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Fastly Next-Gen WAF Alert Microsoft Teams integrations can be imported using their ID and the ID of the workspace they belong to.
//
// ```sh
// $ pulumi import fastly:index/ngwafAlertMicrosoftTeamsIntegration:NgwafAlertMicrosoftTeamsIntegration example <workspace_id>/<alert_id>
// ```
type NgwafAlertMicrosoftTeamsIntegration struct {
	pulumi.CustomResourceState

	// The description of the alert.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The Microsoft Teams webhook URL.
	Webhook pulumi.StringOutput `pulumi:"webhook"`
	// The ID of the workspace.
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewNgwafAlertMicrosoftTeamsIntegration registers a new resource with the given unique name, arguments, and options.
func NewNgwafAlertMicrosoftTeamsIntegration(ctx *pulumi.Context,
	name string, args *NgwafAlertMicrosoftTeamsIntegrationArgs, opts ...pulumi.ResourceOption) (*NgwafAlertMicrosoftTeamsIntegration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Webhook == nil {
		return nil, errors.New("invalid value for required argument 'Webhook'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	if args.Webhook != nil {
		args.Webhook = pulumi.ToSecret(args.Webhook).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"webhook",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NgwafAlertMicrosoftTeamsIntegration
	err := ctx.RegisterResource("fastly:index/ngwafAlertMicrosoftTeamsIntegration:NgwafAlertMicrosoftTeamsIntegration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNgwafAlertMicrosoftTeamsIntegration gets an existing NgwafAlertMicrosoftTeamsIntegration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNgwafAlertMicrosoftTeamsIntegration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NgwafAlertMicrosoftTeamsIntegrationState, opts ...pulumi.ResourceOption) (*NgwafAlertMicrosoftTeamsIntegration, error) {
	var resource NgwafAlertMicrosoftTeamsIntegration
	err := ctx.ReadResource("fastly:index/ngwafAlertMicrosoftTeamsIntegration:NgwafAlertMicrosoftTeamsIntegration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NgwafAlertMicrosoftTeamsIntegration resources.
type ngwafAlertMicrosoftTeamsIntegrationState struct {
	// The description of the alert.
	Description *string `pulumi:"description"`
	// The Microsoft Teams webhook URL.
	Webhook *string `pulumi:"webhook"`
	// The ID of the workspace.
	WorkspaceId *string `pulumi:"workspaceId"`
}

type NgwafAlertMicrosoftTeamsIntegrationState struct {
	// The description of the alert.
	Description pulumi.StringPtrInput
	// The Microsoft Teams webhook URL.
	Webhook pulumi.StringPtrInput
	// The ID of the workspace.
	WorkspaceId pulumi.StringPtrInput
}

func (NgwafAlertMicrosoftTeamsIntegrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*ngwafAlertMicrosoftTeamsIntegrationState)(nil)).Elem()
}

type ngwafAlertMicrosoftTeamsIntegrationArgs struct {
	// The description of the alert.
	Description *string `pulumi:"description"`
	// The Microsoft Teams webhook URL.
	Webhook string `pulumi:"webhook"`
	// The ID of the workspace.
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a NgwafAlertMicrosoftTeamsIntegration resource.
type NgwafAlertMicrosoftTeamsIntegrationArgs struct {
	// The description of the alert.
	Description pulumi.StringPtrInput
	// The Microsoft Teams webhook URL.
	Webhook pulumi.StringInput
	// The ID of the workspace.
	WorkspaceId pulumi.StringInput
}

func (NgwafAlertMicrosoftTeamsIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ngwafAlertMicrosoftTeamsIntegrationArgs)(nil)).Elem()
}

type NgwafAlertMicrosoftTeamsIntegrationInput interface {
	pulumi.Input

	ToNgwafAlertMicrosoftTeamsIntegrationOutput() NgwafAlertMicrosoftTeamsIntegrationOutput
	ToNgwafAlertMicrosoftTeamsIntegrationOutputWithContext(ctx context.Context) NgwafAlertMicrosoftTeamsIntegrationOutput
}

func (*NgwafAlertMicrosoftTeamsIntegration) ElementType() reflect.Type {
	return reflect.TypeOf((**NgwafAlertMicrosoftTeamsIntegration)(nil)).Elem()
}

func (i *NgwafAlertMicrosoftTeamsIntegration) ToNgwafAlertMicrosoftTeamsIntegrationOutput() NgwafAlertMicrosoftTeamsIntegrationOutput {
	return i.ToNgwafAlertMicrosoftTeamsIntegrationOutputWithContext(context.Background())
}

func (i *NgwafAlertMicrosoftTeamsIntegration) ToNgwafAlertMicrosoftTeamsIntegrationOutputWithContext(ctx context.Context) NgwafAlertMicrosoftTeamsIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgwafAlertMicrosoftTeamsIntegrationOutput)
}

// NgwafAlertMicrosoftTeamsIntegrationArrayInput is an input type that accepts NgwafAlertMicrosoftTeamsIntegrationArray and NgwafAlertMicrosoftTeamsIntegrationArrayOutput values.
// You can construct a concrete instance of `NgwafAlertMicrosoftTeamsIntegrationArrayInput` via:
//
//	NgwafAlertMicrosoftTeamsIntegrationArray{ NgwafAlertMicrosoftTeamsIntegrationArgs{...} }
type NgwafAlertMicrosoftTeamsIntegrationArrayInput interface {
	pulumi.Input

	ToNgwafAlertMicrosoftTeamsIntegrationArrayOutput() NgwafAlertMicrosoftTeamsIntegrationArrayOutput
	ToNgwafAlertMicrosoftTeamsIntegrationArrayOutputWithContext(context.Context) NgwafAlertMicrosoftTeamsIntegrationArrayOutput
}

type NgwafAlertMicrosoftTeamsIntegrationArray []NgwafAlertMicrosoftTeamsIntegrationInput

func (NgwafAlertMicrosoftTeamsIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NgwafAlertMicrosoftTeamsIntegration)(nil)).Elem()
}

func (i NgwafAlertMicrosoftTeamsIntegrationArray) ToNgwafAlertMicrosoftTeamsIntegrationArrayOutput() NgwafAlertMicrosoftTeamsIntegrationArrayOutput {
	return i.ToNgwafAlertMicrosoftTeamsIntegrationArrayOutputWithContext(context.Background())
}

func (i NgwafAlertMicrosoftTeamsIntegrationArray) ToNgwafAlertMicrosoftTeamsIntegrationArrayOutputWithContext(ctx context.Context) NgwafAlertMicrosoftTeamsIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgwafAlertMicrosoftTeamsIntegrationArrayOutput)
}

// NgwafAlertMicrosoftTeamsIntegrationMapInput is an input type that accepts NgwafAlertMicrosoftTeamsIntegrationMap and NgwafAlertMicrosoftTeamsIntegrationMapOutput values.
// You can construct a concrete instance of `NgwafAlertMicrosoftTeamsIntegrationMapInput` via:
//
//	NgwafAlertMicrosoftTeamsIntegrationMap{ "key": NgwafAlertMicrosoftTeamsIntegrationArgs{...} }
type NgwafAlertMicrosoftTeamsIntegrationMapInput interface {
	pulumi.Input

	ToNgwafAlertMicrosoftTeamsIntegrationMapOutput() NgwafAlertMicrosoftTeamsIntegrationMapOutput
	ToNgwafAlertMicrosoftTeamsIntegrationMapOutputWithContext(context.Context) NgwafAlertMicrosoftTeamsIntegrationMapOutput
}

type NgwafAlertMicrosoftTeamsIntegrationMap map[string]NgwafAlertMicrosoftTeamsIntegrationInput

func (NgwafAlertMicrosoftTeamsIntegrationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NgwafAlertMicrosoftTeamsIntegration)(nil)).Elem()
}

func (i NgwafAlertMicrosoftTeamsIntegrationMap) ToNgwafAlertMicrosoftTeamsIntegrationMapOutput() NgwafAlertMicrosoftTeamsIntegrationMapOutput {
	return i.ToNgwafAlertMicrosoftTeamsIntegrationMapOutputWithContext(context.Background())
}

func (i NgwafAlertMicrosoftTeamsIntegrationMap) ToNgwafAlertMicrosoftTeamsIntegrationMapOutputWithContext(ctx context.Context) NgwafAlertMicrosoftTeamsIntegrationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgwafAlertMicrosoftTeamsIntegrationMapOutput)
}

type NgwafAlertMicrosoftTeamsIntegrationOutput struct{ *pulumi.OutputState }

func (NgwafAlertMicrosoftTeamsIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NgwafAlertMicrosoftTeamsIntegration)(nil)).Elem()
}

func (o NgwafAlertMicrosoftTeamsIntegrationOutput) ToNgwafAlertMicrosoftTeamsIntegrationOutput() NgwafAlertMicrosoftTeamsIntegrationOutput {
	return o
}

func (o NgwafAlertMicrosoftTeamsIntegrationOutput) ToNgwafAlertMicrosoftTeamsIntegrationOutputWithContext(ctx context.Context) NgwafAlertMicrosoftTeamsIntegrationOutput {
	return o
}

// The description of the alert.
func (o NgwafAlertMicrosoftTeamsIntegrationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NgwafAlertMicrosoftTeamsIntegration) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The Microsoft Teams webhook URL.
func (o NgwafAlertMicrosoftTeamsIntegrationOutput) Webhook() pulumi.StringOutput {
	return o.ApplyT(func(v *NgwafAlertMicrosoftTeamsIntegration) pulumi.StringOutput { return v.Webhook }).(pulumi.StringOutput)
}

// The ID of the workspace.
func (o NgwafAlertMicrosoftTeamsIntegrationOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *NgwafAlertMicrosoftTeamsIntegration) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type NgwafAlertMicrosoftTeamsIntegrationArrayOutput struct{ *pulumi.OutputState }

func (NgwafAlertMicrosoftTeamsIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NgwafAlertMicrosoftTeamsIntegration)(nil)).Elem()
}

func (o NgwafAlertMicrosoftTeamsIntegrationArrayOutput) ToNgwafAlertMicrosoftTeamsIntegrationArrayOutput() NgwafAlertMicrosoftTeamsIntegrationArrayOutput {
	return o
}

func (o NgwafAlertMicrosoftTeamsIntegrationArrayOutput) ToNgwafAlertMicrosoftTeamsIntegrationArrayOutputWithContext(ctx context.Context) NgwafAlertMicrosoftTeamsIntegrationArrayOutput {
	return o
}

func (o NgwafAlertMicrosoftTeamsIntegrationArrayOutput) Index(i pulumi.IntInput) NgwafAlertMicrosoftTeamsIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NgwafAlertMicrosoftTeamsIntegration {
		return vs[0].([]*NgwafAlertMicrosoftTeamsIntegration)[vs[1].(int)]
	}).(NgwafAlertMicrosoftTeamsIntegrationOutput)
}

type NgwafAlertMicrosoftTeamsIntegrationMapOutput struct{ *pulumi.OutputState }

func (NgwafAlertMicrosoftTeamsIntegrationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NgwafAlertMicrosoftTeamsIntegration)(nil)).Elem()
}

func (o NgwafAlertMicrosoftTeamsIntegrationMapOutput) ToNgwafAlertMicrosoftTeamsIntegrationMapOutput() NgwafAlertMicrosoftTeamsIntegrationMapOutput {
	return o
}

func (o NgwafAlertMicrosoftTeamsIntegrationMapOutput) ToNgwafAlertMicrosoftTeamsIntegrationMapOutputWithContext(ctx context.Context) NgwafAlertMicrosoftTeamsIntegrationMapOutput {
	return o
}

func (o NgwafAlertMicrosoftTeamsIntegrationMapOutput) MapIndex(k pulumi.StringInput) NgwafAlertMicrosoftTeamsIntegrationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NgwafAlertMicrosoftTeamsIntegration {
		return vs[0].(map[string]*NgwafAlertMicrosoftTeamsIntegration)[vs[1].(string)]
	}).(NgwafAlertMicrosoftTeamsIntegrationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NgwafAlertMicrosoftTeamsIntegrationInput)(nil)).Elem(), &NgwafAlertMicrosoftTeamsIntegration{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgwafAlertMicrosoftTeamsIntegrationArrayInput)(nil)).Elem(), NgwafAlertMicrosoftTeamsIntegrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgwafAlertMicrosoftTeamsIntegrationMapInput)(nil)).Elem(), NgwafAlertMicrosoftTeamsIntegrationMap{})
	pulumi.RegisterOutputType(NgwafAlertMicrosoftTeamsIntegrationOutput{})
	pulumi.RegisterOutputType(NgwafAlertMicrosoftTeamsIntegrationArrayOutput{})
	pulumi.RegisterOutputType(NgwafAlertMicrosoftTeamsIntegrationMapOutput{})
}
