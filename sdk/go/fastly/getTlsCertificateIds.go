// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fastly

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-fastly/sdk/v8/go/fastly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the IDs of available TLS certificates for use with other resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fastly/sdk/v8/go/fastly"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := fastly.GetTlsCertificateIds(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = fastly.NewTlsActivation(ctx, "example", &fastly.TlsActivationArgs{
//				CertificateId: pulumi.String(example.Ids[0]),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTlsCertificateIds(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetTlsCertificateIdsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTlsCertificateIdsResult
	err := ctx.Invoke("fastly:index/getTlsCertificateIds:getTlsCertificateIds", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getTlsCertificateIds.
type GetTlsCertificateIdsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of IDs corresponding to Custom TLS certificates.
	Ids []string `pulumi:"ids"`
}

func GetTlsCertificateIdsOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetTlsCertificateIdsResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetTlsCertificateIdsResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("fastly:index/getTlsCertificateIds:getTlsCertificateIds", nil, GetTlsCertificateIdsResultOutput{}, options).(GetTlsCertificateIdsResultOutput), nil
	}).(GetTlsCertificateIdsResultOutput)
}

// A collection of values returned by getTlsCertificateIds.
type GetTlsCertificateIdsResultOutput struct{ *pulumi.OutputState }

func (GetTlsCertificateIdsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTlsCertificateIdsResult)(nil)).Elem()
}

func (o GetTlsCertificateIdsResultOutput) ToGetTlsCertificateIdsResultOutput() GetTlsCertificateIdsResultOutput {
	return o
}

func (o GetTlsCertificateIdsResultOutput) ToGetTlsCertificateIdsResultOutputWithContext(ctx context.Context) GetTlsCertificateIdsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTlsCertificateIdsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTlsCertificateIdsResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of IDs corresponding to Custom TLS certificates.
func (o GetTlsCertificateIdsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTlsCertificateIdsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTlsCertificateIdsResultOutput{})
}
