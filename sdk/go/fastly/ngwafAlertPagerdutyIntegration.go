// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fastly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-fastly/sdk/v11/go/fastly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides Fastly Next-Gen WAF Alert PagerDuty integrations, which provide a connection to PagerDuty.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fastly/sdk/v11/go/fastly"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fastly.NewNgwafAlertPagerdutyIntegration(ctx, "demo_pagerduty_alert", &fastly.NgwafAlertPagerdutyIntegrationArgs{
//				Description: pulumi.String("Some Description"),
//				Key:         pulumi.String("1234567890abcdef1234567890abcdef"),
//				WorkspaceId: pulumi.Any(demo.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Fastly Next-Gen WAF Alert PagerDuty integrations can be imported using their ID and the ID of the workspace they belong to.
//
// ```sh
// $ pulumi import fastly:index/ngwafAlertPagerdutyIntegration:NgwafAlertPagerdutyIntegration example <workspace_id>/<alert_id>
// ```
type NgwafAlertPagerdutyIntegration struct {
	pulumi.CustomResourceState

	// The description of the alert.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The PagerDuty integration key.
	Key pulumi.StringOutput `pulumi:"key"`
	// The ID of the workspace.
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewNgwafAlertPagerdutyIntegration registers a new resource with the given unique name, arguments, and options.
func NewNgwafAlertPagerdutyIntegration(ctx *pulumi.Context,
	name string, args *NgwafAlertPagerdutyIntegrationArgs, opts ...pulumi.ResourceOption) (*NgwafAlertPagerdutyIntegration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	if args.Key != nil {
		args.Key = pulumi.ToSecret(args.Key).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"key",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NgwafAlertPagerdutyIntegration
	err := ctx.RegisterResource("fastly:index/ngwafAlertPagerdutyIntegration:NgwafAlertPagerdutyIntegration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNgwafAlertPagerdutyIntegration gets an existing NgwafAlertPagerdutyIntegration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNgwafAlertPagerdutyIntegration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NgwafAlertPagerdutyIntegrationState, opts ...pulumi.ResourceOption) (*NgwafAlertPagerdutyIntegration, error) {
	var resource NgwafAlertPagerdutyIntegration
	err := ctx.ReadResource("fastly:index/ngwafAlertPagerdutyIntegration:NgwafAlertPagerdutyIntegration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NgwafAlertPagerdutyIntegration resources.
type ngwafAlertPagerdutyIntegrationState struct {
	// The description of the alert.
	Description *string `pulumi:"description"`
	// The PagerDuty integration key.
	Key *string `pulumi:"key"`
	// The ID of the workspace.
	WorkspaceId *string `pulumi:"workspaceId"`
}

type NgwafAlertPagerdutyIntegrationState struct {
	// The description of the alert.
	Description pulumi.StringPtrInput
	// The PagerDuty integration key.
	Key pulumi.StringPtrInput
	// The ID of the workspace.
	WorkspaceId pulumi.StringPtrInput
}

func (NgwafAlertPagerdutyIntegrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*ngwafAlertPagerdutyIntegrationState)(nil)).Elem()
}

type ngwafAlertPagerdutyIntegrationArgs struct {
	// The description of the alert.
	Description *string `pulumi:"description"`
	// The PagerDuty integration key.
	Key string `pulumi:"key"`
	// The ID of the workspace.
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a NgwafAlertPagerdutyIntegration resource.
type NgwafAlertPagerdutyIntegrationArgs struct {
	// The description of the alert.
	Description pulumi.StringPtrInput
	// The PagerDuty integration key.
	Key pulumi.StringInput
	// The ID of the workspace.
	WorkspaceId pulumi.StringInput
}

func (NgwafAlertPagerdutyIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ngwafAlertPagerdutyIntegrationArgs)(nil)).Elem()
}

type NgwafAlertPagerdutyIntegrationInput interface {
	pulumi.Input

	ToNgwafAlertPagerdutyIntegrationOutput() NgwafAlertPagerdutyIntegrationOutput
	ToNgwafAlertPagerdutyIntegrationOutputWithContext(ctx context.Context) NgwafAlertPagerdutyIntegrationOutput
}

func (*NgwafAlertPagerdutyIntegration) ElementType() reflect.Type {
	return reflect.TypeOf((**NgwafAlertPagerdutyIntegration)(nil)).Elem()
}

func (i *NgwafAlertPagerdutyIntegration) ToNgwafAlertPagerdutyIntegrationOutput() NgwafAlertPagerdutyIntegrationOutput {
	return i.ToNgwafAlertPagerdutyIntegrationOutputWithContext(context.Background())
}

func (i *NgwafAlertPagerdutyIntegration) ToNgwafAlertPagerdutyIntegrationOutputWithContext(ctx context.Context) NgwafAlertPagerdutyIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgwafAlertPagerdutyIntegrationOutput)
}

// NgwafAlertPagerdutyIntegrationArrayInput is an input type that accepts NgwafAlertPagerdutyIntegrationArray and NgwafAlertPagerdutyIntegrationArrayOutput values.
// You can construct a concrete instance of `NgwafAlertPagerdutyIntegrationArrayInput` via:
//
//	NgwafAlertPagerdutyIntegrationArray{ NgwafAlertPagerdutyIntegrationArgs{...} }
type NgwafAlertPagerdutyIntegrationArrayInput interface {
	pulumi.Input

	ToNgwafAlertPagerdutyIntegrationArrayOutput() NgwafAlertPagerdutyIntegrationArrayOutput
	ToNgwafAlertPagerdutyIntegrationArrayOutputWithContext(context.Context) NgwafAlertPagerdutyIntegrationArrayOutput
}

type NgwafAlertPagerdutyIntegrationArray []NgwafAlertPagerdutyIntegrationInput

func (NgwafAlertPagerdutyIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NgwafAlertPagerdutyIntegration)(nil)).Elem()
}

func (i NgwafAlertPagerdutyIntegrationArray) ToNgwafAlertPagerdutyIntegrationArrayOutput() NgwafAlertPagerdutyIntegrationArrayOutput {
	return i.ToNgwafAlertPagerdutyIntegrationArrayOutputWithContext(context.Background())
}

func (i NgwafAlertPagerdutyIntegrationArray) ToNgwafAlertPagerdutyIntegrationArrayOutputWithContext(ctx context.Context) NgwafAlertPagerdutyIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgwafAlertPagerdutyIntegrationArrayOutput)
}

// NgwafAlertPagerdutyIntegrationMapInput is an input type that accepts NgwafAlertPagerdutyIntegrationMap and NgwafAlertPagerdutyIntegrationMapOutput values.
// You can construct a concrete instance of `NgwafAlertPagerdutyIntegrationMapInput` via:
//
//	NgwafAlertPagerdutyIntegrationMap{ "key": NgwafAlertPagerdutyIntegrationArgs{...} }
type NgwafAlertPagerdutyIntegrationMapInput interface {
	pulumi.Input

	ToNgwafAlertPagerdutyIntegrationMapOutput() NgwafAlertPagerdutyIntegrationMapOutput
	ToNgwafAlertPagerdutyIntegrationMapOutputWithContext(context.Context) NgwafAlertPagerdutyIntegrationMapOutput
}

type NgwafAlertPagerdutyIntegrationMap map[string]NgwafAlertPagerdutyIntegrationInput

func (NgwafAlertPagerdutyIntegrationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NgwafAlertPagerdutyIntegration)(nil)).Elem()
}

func (i NgwafAlertPagerdutyIntegrationMap) ToNgwafAlertPagerdutyIntegrationMapOutput() NgwafAlertPagerdutyIntegrationMapOutput {
	return i.ToNgwafAlertPagerdutyIntegrationMapOutputWithContext(context.Background())
}

func (i NgwafAlertPagerdutyIntegrationMap) ToNgwafAlertPagerdutyIntegrationMapOutputWithContext(ctx context.Context) NgwafAlertPagerdutyIntegrationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgwafAlertPagerdutyIntegrationMapOutput)
}

type NgwafAlertPagerdutyIntegrationOutput struct{ *pulumi.OutputState }

func (NgwafAlertPagerdutyIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NgwafAlertPagerdutyIntegration)(nil)).Elem()
}

func (o NgwafAlertPagerdutyIntegrationOutput) ToNgwafAlertPagerdutyIntegrationOutput() NgwafAlertPagerdutyIntegrationOutput {
	return o
}

func (o NgwafAlertPagerdutyIntegrationOutput) ToNgwafAlertPagerdutyIntegrationOutputWithContext(ctx context.Context) NgwafAlertPagerdutyIntegrationOutput {
	return o
}

// The description of the alert.
func (o NgwafAlertPagerdutyIntegrationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NgwafAlertPagerdutyIntegration) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The PagerDuty integration key.
func (o NgwafAlertPagerdutyIntegrationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *NgwafAlertPagerdutyIntegration) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// The ID of the workspace.
func (o NgwafAlertPagerdutyIntegrationOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *NgwafAlertPagerdutyIntegration) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type NgwafAlertPagerdutyIntegrationArrayOutput struct{ *pulumi.OutputState }

func (NgwafAlertPagerdutyIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NgwafAlertPagerdutyIntegration)(nil)).Elem()
}

func (o NgwafAlertPagerdutyIntegrationArrayOutput) ToNgwafAlertPagerdutyIntegrationArrayOutput() NgwafAlertPagerdutyIntegrationArrayOutput {
	return o
}

func (o NgwafAlertPagerdutyIntegrationArrayOutput) ToNgwafAlertPagerdutyIntegrationArrayOutputWithContext(ctx context.Context) NgwafAlertPagerdutyIntegrationArrayOutput {
	return o
}

func (o NgwafAlertPagerdutyIntegrationArrayOutput) Index(i pulumi.IntInput) NgwafAlertPagerdutyIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NgwafAlertPagerdutyIntegration {
		return vs[0].([]*NgwafAlertPagerdutyIntegration)[vs[1].(int)]
	}).(NgwafAlertPagerdutyIntegrationOutput)
}

type NgwafAlertPagerdutyIntegrationMapOutput struct{ *pulumi.OutputState }

func (NgwafAlertPagerdutyIntegrationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NgwafAlertPagerdutyIntegration)(nil)).Elem()
}

func (o NgwafAlertPagerdutyIntegrationMapOutput) ToNgwafAlertPagerdutyIntegrationMapOutput() NgwafAlertPagerdutyIntegrationMapOutput {
	return o
}

func (o NgwafAlertPagerdutyIntegrationMapOutput) ToNgwafAlertPagerdutyIntegrationMapOutputWithContext(ctx context.Context) NgwafAlertPagerdutyIntegrationMapOutput {
	return o
}

func (o NgwafAlertPagerdutyIntegrationMapOutput) MapIndex(k pulumi.StringInput) NgwafAlertPagerdutyIntegrationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NgwafAlertPagerdutyIntegration {
		return vs[0].(map[string]*NgwafAlertPagerdutyIntegration)[vs[1].(string)]
	}).(NgwafAlertPagerdutyIntegrationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NgwafAlertPagerdutyIntegrationInput)(nil)).Elem(), &NgwafAlertPagerdutyIntegration{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgwafAlertPagerdutyIntegrationArrayInput)(nil)).Elem(), NgwafAlertPagerdutyIntegrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgwafAlertPagerdutyIntegrationMapInput)(nil)).Elem(), NgwafAlertPagerdutyIntegrationMap{})
	pulumi.RegisterOutputType(NgwafAlertPagerdutyIntegrationOutput{})
	pulumi.RegisterOutputType(NgwafAlertPagerdutyIntegrationArrayOutput{})
	pulumi.RegisterOutputType(NgwafAlertPagerdutyIntegrationMapOutput{})
}
