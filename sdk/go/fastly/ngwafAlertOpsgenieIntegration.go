// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fastly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-fastly/sdk/v11/go/fastly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides Fastly Next-Gen WAF Alert Opsgenie integrations, which provide a connection to Opsgenie.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fastly/sdk/v11/go/fastly"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fastly.NewNgwafAlertOpsgenieIntegration(ctx, "demo_opsgenie_alert", &fastly.NgwafAlertOpsgenieIntegrationArgs{
//				Description: pulumi.String("A description"),
//				Key:         pulumi.String("123456789"),
//				WorkspaceId: pulumi.Any(demo.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Fastly Next-Gen WAF Alert Opsgenie integrations can be imported using their ID and the ID of the workspace they belong to.
//
// ```sh
// $ pulumi import fastly:index/ngwafAlertOpsgenieIntegration:NgwafAlertOpsgenieIntegration example <workspace_id>/<alert_id>
// ```
type NgwafAlertOpsgenieIntegration struct {
	pulumi.CustomResourceState

	// The description of the alert.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The Opsgenie key.
	Key pulumi.StringOutput `pulumi:"key"`
	// The ID of the workspace.
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewNgwafAlertOpsgenieIntegration registers a new resource with the given unique name, arguments, and options.
func NewNgwafAlertOpsgenieIntegration(ctx *pulumi.Context,
	name string, args *NgwafAlertOpsgenieIntegrationArgs, opts ...pulumi.ResourceOption) (*NgwafAlertOpsgenieIntegration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	if args.Key != nil {
		args.Key = pulumi.ToSecret(args.Key).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"key",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NgwafAlertOpsgenieIntegration
	err := ctx.RegisterResource("fastly:index/ngwafAlertOpsgenieIntegration:NgwafAlertOpsgenieIntegration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNgwafAlertOpsgenieIntegration gets an existing NgwafAlertOpsgenieIntegration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNgwafAlertOpsgenieIntegration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NgwafAlertOpsgenieIntegrationState, opts ...pulumi.ResourceOption) (*NgwafAlertOpsgenieIntegration, error) {
	var resource NgwafAlertOpsgenieIntegration
	err := ctx.ReadResource("fastly:index/ngwafAlertOpsgenieIntegration:NgwafAlertOpsgenieIntegration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NgwafAlertOpsgenieIntegration resources.
type ngwafAlertOpsgenieIntegrationState struct {
	// The description of the alert.
	Description *string `pulumi:"description"`
	// The Opsgenie key.
	Key *string `pulumi:"key"`
	// The ID of the workspace.
	WorkspaceId *string `pulumi:"workspaceId"`
}

type NgwafAlertOpsgenieIntegrationState struct {
	// The description of the alert.
	Description pulumi.StringPtrInput
	// The Opsgenie key.
	Key pulumi.StringPtrInput
	// The ID of the workspace.
	WorkspaceId pulumi.StringPtrInput
}

func (NgwafAlertOpsgenieIntegrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*ngwafAlertOpsgenieIntegrationState)(nil)).Elem()
}

type ngwafAlertOpsgenieIntegrationArgs struct {
	// The description of the alert.
	Description *string `pulumi:"description"`
	// The Opsgenie key.
	Key string `pulumi:"key"`
	// The ID of the workspace.
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a NgwafAlertOpsgenieIntegration resource.
type NgwafAlertOpsgenieIntegrationArgs struct {
	// The description of the alert.
	Description pulumi.StringPtrInput
	// The Opsgenie key.
	Key pulumi.StringInput
	// The ID of the workspace.
	WorkspaceId pulumi.StringInput
}

func (NgwafAlertOpsgenieIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ngwafAlertOpsgenieIntegrationArgs)(nil)).Elem()
}

type NgwafAlertOpsgenieIntegrationInput interface {
	pulumi.Input

	ToNgwafAlertOpsgenieIntegrationOutput() NgwafAlertOpsgenieIntegrationOutput
	ToNgwafAlertOpsgenieIntegrationOutputWithContext(ctx context.Context) NgwafAlertOpsgenieIntegrationOutput
}

func (*NgwafAlertOpsgenieIntegration) ElementType() reflect.Type {
	return reflect.TypeOf((**NgwafAlertOpsgenieIntegration)(nil)).Elem()
}

func (i *NgwafAlertOpsgenieIntegration) ToNgwafAlertOpsgenieIntegrationOutput() NgwafAlertOpsgenieIntegrationOutput {
	return i.ToNgwafAlertOpsgenieIntegrationOutputWithContext(context.Background())
}

func (i *NgwafAlertOpsgenieIntegration) ToNgwafAlertOpsgenieIntegrationOutputWithContext(ctx context.Context) NgwafAlertOpsgenieIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgwafAlertOpsgenieIntegrationOutput)
}

// NgwafAlertOpsgenieIntegrationArrayInput is an input type that accepts NgwafAlertOpsgenieIntegrationArray and NgwafAlertOpsgenieIntegrationArrayOutput values.
// You can construct a concrete instance of `NgwafAlertOpsgenieIntegrationArrayInput` via:
//
//	NgwafAlertOpsgenieIntegrationArray{ NgwafAlertOpsgenieIntegrationArgs{...} }
type NgwafAlertOpsgenieIntegrationArrayInput interface {
	pulumi.Input

	ToNgwafAlertOpsgenieIntegrationArrayOutput() NgwafAlertOpsgenieIntegrationArrayOutput
	ToNgwafAlertOpsgenieIntegrationArrayOutputWithContext(context.Context) NgwafAlertOpsgenieIntegrationArrayOutput
}

type NgwafAlertOpsgenieIntegrationArray []NgwafAlertOpsgenieIntegrationInput

func (NgwafAlertOpsgenieIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NgwafAlertOpsgenieIntegration)(nil)).Elem()
}

func (i NgwafAlertOpsgenieIntegrationArray) ToNgwafAlertOpsgenieIntegrationArrayOutput() NgwafAlertOpsgenieIntegrationArrayOutput {
	return i.ToNgwafAlertOpsgenieIntegrationArrayOutputWithContext(context.Background())
}

func (i NgwafAlertOpsgenieIntegrationArray) ToNgwafAlertOpsgenieIntegrationArrayOutputWithContext(ctx context.Context) NgwafAlertOpsgenieIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgwafAlertOpsgenieIntegrationArrayOutput)
}

// NgwafAlertOpsgenieIntegrationMapInput is an input type that accepts NgwafAlertOpsgenieIntegrationMap and NgwafAlertOpsgenieIntegrationMapOutput values.
// You can construct a concrete instance of `NgwafAlertOpsgenieIntegrationMapInput` via:
//
//	NgwafAlertOpsgenieIntegrationMap{ "key": NgwafAlertOpsgenieIntegrationArgs{...} }
type NgwafAlertOpsgenieIntegrationMapInput interface {
	pulumi.Input

	ToNgwafAlertOpsgenieIntegrationMapOutput() NgwafAlertOpsgenieIntegrationMapOutput
	ToNgwafAlertOpsgenieIntegrationMapOutputWithContext(context.Context) NgwafAlertOpsgenieIntegrationMapOutput
}

type NgwafAlertOpsgenieIntegrationMap map[string]NgwafAlertOpsgenieIntegrationInput

func (NgwafAlertOpsgenieIntegrationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NgwafAlertOpsgenieIntegration)(nil)).Elem()
}

func (i NgwafAlertOpsgenieIntegrationMap) ToNgwafAlertOpsgenieIntegrationMapOutput() NgwafAlertOpsgenieIntegrationMapOutput {
	return i.ToNgwafAlertOpsgenieIntegrationMapOutputWithContext(context.Background())
}

func (i NgwafAlertOpsgenieIntegrationMap) ToNgwafAlertOpsgenieIntegrationMapOutputWithContext(ctx context.Context) NgwafAlertOpsgenieIntegrationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgwafAlertOpsgenieIntegrationMapOutput)
}

type NgwafAlertOpsgenieIntegrationOutput struct{ *pulumi.OutputState }

func (NgwafAlertOpsgenieIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NgwafAlertOpsgenieIntegration)(nil)).Elem()
}

func (o NgwafAlertOpsgenieIntegrationOutput) ToNgwafAlertOpsgenieIntegrationOutput() NgwafAlertOpsgenieIntegrationOutput {
	return o
}

func (o NgwafAlertOpsgenieIntegrationOutput) ToNgwafAlertOpsgenieIntegrationOutputWithContext(ctx context.Context) NgwafAlertOpsgenieIntegrationOutput {
	return o
}

// The description of the alert.
func (o NgwafAlertOpsgenieIntegrationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NgwafAlertOpsgenieIntegration) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The Opsgenie key.
func (o NgwafAlertOpsgenieIntegrationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *NgwafAlertOpsgenieIntegration) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// The ID of the workspace.
func (o NgwafAlertOpsgenieIntegrationOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *NgwafAlertOpsgenieIntegration) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type NgwafAlertOpsgenieIntegrationArrayOutput struct{ *pulumi.OutputState }

func (NgwafAlertOpsgenieIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NgwafAlertOpsgenieIntegration)(nil)).Elem()
}

func (o NgwafAlertOpsgenieIntegrationArrayOutput) ToNgwafAlertOpsgenieIntegrationArrayOutput() NgwafAlertOpsgenieIntegrationArrayOutput {
	return o
}

func (o NgwafAlertOpsgenieIntegrationArrayOutput) ToNgwafAlertOpsgenieIntegrationArrayOutputWithContext(ctx context.Context) NgwafAlertOpsgenieIntegrationArrayOutput {
	return o
}

func (o NgwafAlertOpsgenieIntegrationArrayOutput) Index(i pulumi.IntInput) NgwafAlertOpsgenieIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NgwafAlertOpsgenieIntegration {
		return vs[0].([]*NgwafAlertOpsgenieIntegration)[vs[1].(int)]
	}).(NgwafAlertOpsgenieIntegrationOutput)
}

type NgwafAlertOpsgenieIntegrationMapOutput struct{ *pulumi.OutputState }

func (NgwafAlertOpsgenieIntegrationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NgwafAlertOpsgenieIntegration)(nil)).Elem()
}

func (o NgwafAlertOpsgenieIntegrationMapOutput) ToNgwafAlertOpsgenieIntegrationMapOutput() NgwafAlertOpsgenieIntegrationMapOutput {
	return o
}

func (o NgwafAlertOpsgenieIntegrationMapOutput) ToNgwafAlertOpsgenieIntegrationMapOutputWithContext(ctx context.Context) NgwafAlertOpsgenieIntegrationMapOutput {
	return o
}

func (o NgwafAlertOpsgenieIntegrationMapOutput) MapIndex(k pulumi.StringInput) NgwafAlertOpsgenieIntegrationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NgwafAlertOpsgenieIntegration {
		return vs[0].(map[string]*NgwafAlertOpsgenieIntegration)[vs[1].(string)]
	}).(NgwafAlertOpsgenieIntegrationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NgwafAlertOpsgenieIntegrationInput)(nil)).Elem(), &NgwafAlertOpsgenieIntegration{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgwafAlertOpsgenieIntegrationArrayInput)(nil)).Elem(), NgwafAlertOpsgenieIntegrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgwafAlertOpsgenieIntegrationMapInput)(nil)).Elem(), NgwafAlertOpsgenieIntegrationMap{})
	pulumi.RegisterOutputType(NgwafAlertOpsgenieIntegrationOutput{})
	pulumi.RegisterOutputType(NgwafAlertOpsgenieIntegrationArrayOutput{})
	pulumi.RegisterOutputType(NgwafAlertOpsgenieIntegrationMapOutput{})
}
