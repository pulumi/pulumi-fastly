// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fastly

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about a TLS subscription.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fastly/sdk/v3/go/fastly"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fastly.LookupTlsSubscription(ctx, &fastly.LookupTlsSubscriptionArgs{
// 			Domains: []string{
// 				"example.com",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupTlsSubscription(ctx *pulumi.Context, args *LookupTlsSubscriptionArgs, opts ...pulumi.InvokeOption) (*LookupTlsSubscriptionResult, error) {
	var rv LookupTlsSubscriptionResult
	err := ctx.Invoke("fastly:index/getTlsSubscription:getTlsSubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTlsSubscription.
type LookupTlsSubscriptionArgs struct {
	// The entity that issues and certifies the TLS certificates for the subscription.
	CertificateAuthority *string `pulumi:"certificateAuthority"`
	// ID of TLS configuration used to terminate TLS traffic.
	ConfigurationId *string `pulumi:"configurationId"`
	// List of domains on which to enable TLS.
	Domains []string `pulumi:"domains"`
	// ID of TLS subscription. Conflicts with all the other filters.
	Id *string `pulumi:"id"`
}

// A collection of values returned by getTlsSubscription.
type LookupTlsSubscriptionResult struct {
	// The entity that issues and certifies the TLS certificates for the subscription.
	CertificateAuthority string `pulumi:"certificateAuthority"`
	// The common name associated with the subscription generated by Fastly TLS.
	CommonName string `pulumi:"commonName"`
	// ID of TLS configuration used to terminate TLS traffic.
	ConfigurationId string `pulumi:"configurationId"`
	// Timestamp (GMT) when subscription was created.
	CreatedAt string `pulumi:"createdAt"`
	// List of domains on which to enable TLS.
	Domains []string `pulumi:"domains"`
	// ID of TLS subscription. Conflicts with all the other filters.
	Id string `pulumi:"id"`
	// The current state of the subscription. The list of possible states are: `pending`, `processing`, `issued`, and `renewing`.
	State string `pulumi:"state"`
	// Timestamp (GMT) when subscription was last updated.
	UpdatedAt string `pulumi:"updatedAt"`
}
