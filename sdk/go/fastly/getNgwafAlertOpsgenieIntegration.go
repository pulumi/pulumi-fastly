// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fastly

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-fastly/sdk/v11/go/fastly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get a Fastly Next-Gen WAF Alert Opsgenie integration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fastly/sdk/v11/go/fastly"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fastly.LookupNgwafAlertOpsgenieIntegration(ctx, &fastly.LookupNgwafAlertOpsgenieIntegrationArgs{
//				WorkspaceId: testRedactionsWorkspace.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("ngwafOpsgenieAlertsAll", opsgenieAlerts)
//			return nil
//		})
//	}
//
// ```
func LookupNgwafAlertOpsgenieIntegration(ctx *pulumi.Context, args *LookupNgwafAlertOpsgenieIntegrationArgs, opts ...pulumi.InvokeOption) (*LookupNgwafAlertOpsgenieIntegrationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNgwafAlertOpsgenieIntegrationResult
	err := ctx.Invoke("fastly:index/getNgwafAlertOpsgenieIntegration:getNgwafAlertOpsgenieIntegration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNgwafAlertOpsgenieIntegration.
type LookupNgwafAlertOpsgenieIntegrationArgs struct {
	// The ID of the workspace.
	WorkspaceId string `pulumi:"workspaceId"`
}

// A collection of values returned by getNgwafAlertOpsgenieIntegration.
type LookupNgwafAlertOpsgenieIntegrationResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of all Opsgenie alerts for a workspace.
	OpsgenieAlerts []GetNgwafAlertOpsgenieIntegrationOpsgenieAlert `pulumi:"opsgenieAlerts"`
	// The ID of the workspace.
	WorkspaceId string `pulumi:"workspaceId"`
}

func LookupNgwafAlertOpsgenieIntegrationOutput(ctx *pulumi.Context, args LookupNgwafAlertOpsgenieIntegrationOutputArgs, opts ...pulumi.InvokeOption) LookupNgwafAlertOpsgenieIntegrationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNgwafAlertOpsgenieIntegrationResultOutput, error) {
			args := v.(LookupNgwafAlertOpsgenieIntegrationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("fastly:index/getNgwafAlertOpsgenieIntegration:getNgwafAlertOpsgenieIntegration", args, LookupNgwafAlertOpsgenieIntegrationResultOutput{}, options).(LookupNgwafAlertOpsgenieIntegrationResultOutput), nil
		}).(LookupNgwafAlertOpsgenieIntegrationResultOutput)
}

// A collection of arguments for invoking getNgwafAlertOpsgenieIntegration.
type LookupNgwafAlertOpsgenieIntegrationOutputArgs struct {
	// The ID of the workspace.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (LookupNgwafAlertOpsgenieIntegrationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNgwafAlertOpsgenieIntegrationArgs)(nil)).Elem()
}

// A collection of values returned by getNgwafAlertOpsgenieIntegration.
type LookupNgwafAlertOpsgenieIntegrationResultOutput struct{ *pulumi.OutputState }

func (LookupNgwafAlertOpsgenieIntegrationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNgwafAlertOpsgenieIntegrationResult)(nil)).Elem()
}

func (o LookupNgwafAlertOpsgenieIntegrationResultOutput) ToLookupNgwafAlertOpsgenieIntegrationResultOutput() LookupNgwafAlertOpsgenieIntegrationResultOutput {
	return o
}

func (o LookupNgwafAlertOpsgenieIntegrationResultOutput) ToLookupNgwafAlertOpsgenieIntegrationResultOutputWithContext(ctx context.Context) LookupNgwafAlertOpsgenieIntegrationResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNgwafAlertOpsgenieIntegrationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNgwafAlertOpsgenieIntegrationResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of all Opsgenie alerts for a workspace.
func (o LookupNgwafAlertOpsgenieIntegrationResultOutput) OpsgenieAlerts() GetNgwafAlertOpsgenieIntegrationOpsgenieAlertArrayOutput {
	return o.ApplyT(func(v LookupNgwafAlertOpsgenieIntegrationResult) []GetNgwafAlertOpsgenieIntegrationOpsgenieAlert {
		return v.OpsgenieAlerts
	}).(GetNgwafAlertOpsgenieIntegrationOpsgenieAlertArrayOutput)
}

// The ID of the workspace.
func (o LookupNgwafAlertOpsgenieIntegrationResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNgwafAlertOpsgenieIntegrationResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNgwafAlertOpsgenieIntegrationResultOutput{})
}
