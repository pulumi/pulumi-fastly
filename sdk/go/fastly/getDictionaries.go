// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fastly

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-fastly/sdk/v8/go/fastly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get a list of [Fastly dictionaries](https://developer.fastly.com/reference/api/dictionaries/) for the specified service/version.
func GetDictionaries(ctx *pulumi.Context, args *GetDictionariesArgs, opts ...pulumi.InvokeOption) (*GetDictionariesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDictionariesResult
	err := ctx.Invoke("fastly:index/getDictionaries:getDictionaries", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDictionaries.
type GetDictionariesArgs struct {
	// Alphanumeric string identifying the service.
	ServiceId string `pulumi:"serviceId"`
	// Integer identifying a service version.
	ServiceVersion int `pulumi:"serviceVersion"`
}

// A collection of values returned by getDictionaries.
type GetDictionariesResult struct {
	// List of all dictionaries for the version of the service.
	Dictionaries []GetDictionariesDictionary `pulumi:"dictionaries"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Alphanumeric string identifying the service.
	ServiceId string `pulumi:"serviceId"`
	// Integer identifying a service version.
	ServiceVersion int `pulumi:"serviceVersion"`
}

func GetDictionariesOutput(ctx *pulumi.Context, args GetDictionariesOutputArgs, opts ...pulumi.InvokeOption) GetDictionariesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDictionariesResult, error) {
			args := v.(GetDictionariesArgs)
			r, err := GetDictionaries(ctx, &args, opts...)
			var s GetDictionariesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDictionariesResultOutput)
}

// A collection of arguments for invoking getDictionaries.
type GetDictionariesOutputArgs struct {
	// Alphanumeric string identifying the service.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
	// Integer identifying a service version.
	ServiceVersion pulumi.IntInput `pulumi:"serviceVersion"`
}

func (GetDictionariesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDictionariesArgs)(nil)).Elem()
}

// A collection of values returned by getDictionaries.
type GetDictionariesResultOutput struct{ *pulumi.OutputState }

func (GetDictionariesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDictionariesResult)(nil)).Elem()
}

func (o GetDictionariesResultOutput) ToGetDictionariesResultOutput() GetDictionariesResultOutput {
	return o
}

func (o GetDictionariesResultOutput) ToGetDictionariesResultOutputWithContext(ctx context.Context) GetDictionariesResultOutput {
	return o
}

func (o GetDictionariesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDictionariesResult] {
	return pulumix.Output[GetDictionariesResult]{
		OutputState: o.OutputState,
	}
}

// List of all dictionaries for the version of the service.
func (o GetDictionariesResultOutput) Dictionaries() GetDictionariesDictionaryArrayOutput {
	return o.ApplyT(func(v GetDictionariesResult) []GetDictionariesDictionary { return v.Dictionaries }).(GetDictionariesDictionaryArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDictionariesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDictionariesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Alphanumeric string identifying the service.
func (o GetDictionariesResultOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDictionariesResult) string { return v.ServiceId }).(pulumi.StringOutput)
}

// Integer identifying a service version.
func (o GetDictionariesResultOutput) ServiceVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetDictionariesResult) int { return v.ServiceVersion }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDictionariesResultOutput{})
}
