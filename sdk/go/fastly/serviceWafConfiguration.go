// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fastly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-fastly/sdk/v8/go/fastly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Defines a set of Web Application Firewall configuration options that can be used to populate a service WAF. This resource will configure rules, thresholds and other settings for a WAF.
//
// > **Warning:** This provider will take precedence over any changes you make in the UI or API. Such changes are likely to be reversed if you run the provider again.
//
// ## Adding a WAF to an existing service
//
// > **Warning:** A two-phase change is required when adding a WAF to an existing service
//
// When adding a `waf` to an existing `ServiceVcl` and at the same time adding a `ServiceWafConfiguration`
// resource with `wafId = fastly_service_vcl.demo.waf[0].waf_id` might result with the in the following error:
//
// > fastly_service_vcl.demo.waf is empty list of object
//
// For this scenario, it's recommended to split the changes into two distinct steps:
//
// 1. Add the `waf` block to the `ServiceVcl` and apply the changes
// 2. Add the `ServiceWafConfiguration` to the HCL and apply the changes
//
// ## Import
//
// This is an example of the import command being applied to the resource named `fastly_service_waf_configuration.waf` The resource ID should be the WAF ID.
//
// ```sh
//
//	$ pulumi import fastly:index/serviceWafConfiguration:ServiceWafConfiguration waf xxxxxxxxxxxxxxxxxxxx
//
// ```
type ServiceWafConfiguration struct {
	pulumi.CustomResourceState

	// Conditionally prevents a new firewall version from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`
	Activate pulumi.BoolPtrOutput `pulumi:"activate"`
	// Whether a specific firewall version is currently deployed
	Active pulumi.BoolOutput `pulumi:"active"`
	// Allowed HTTP versions
	AllowedHttpVersions pulumi.StringOutput `pulumi:"allowedHttpVersions"`
	// A space-separated list of HTTP method names
	AllowedMethods pulumi.StringOutput `pulumi:"allowedMethods"`
	// Allowed request content types
	AllowedRequestContentType pulumi.StringOutput `pulumi:"allowedRequestContentType"`
	// Allowed request content type charset
	AllowedRequestContentTypeCharset pulumi.StringOutput `pulumi:"allowedRequestContentTypeCharset"`
	// The maximum number of arguments allowed
	ArgLength pulumi.IntOutput `pulumi:"argLength"`
	// The maximum allowed argument name length
	ArgNameLength pulumi.IntOutput `pulumi:"argNameLength"`
	// The latest cloned firewall version by the provider
	ClonedVersion pulumi.IntOutput `pulumi:"clonedVersion"`
	// The maximum allowed size of all files
	CombinedFileSizes pulumi.IntOutput `pulumi:"combinedFileSizes"`
	// Score value to add for critical anomalies
	CriticalAnomalyScore pulumi.IntOutput `pulumi:"criticalAnomalyScore"`
	// CRS validate UTF8 encoding
	CrsValidateUtf8Encoding pulumi.BoolOutput `pulumi:"crsValidateUtf8Encoding"`
	// Score value to add for error anomalies
	ErrorAnomalyScore pulumi.IntOutput `pulumi:"errorAnomalyScore"`
	// A space-separated list of country codes in ISO 3166-1 (two-letter) format
	HighRiskCountryCodes pulumi.StringOutput `pulumi:"highRiskCountryCodes"`
	// HTTP violation threshold
	HttpViolationScoreThreshold pulumi.IntOutput `pulumi:"httpViolationScoreThreshold"`
	// Inbound anomaly threshold
	InboundAnomalyScoreThreshold pulumi.IntOutput `pulumi:"inboundAnomalyScoreThreshold"`
	// Local file inclusion attack threshold
	LfiScoreThreshold pulumi.IntOutput `pulumi:"lfiScoreThreshold"`
	// The maximum allowed file size, in bytes
	MaxFileSize pulumi.IntOutput `pulumi:"maxFileSize"`
	// The maximum number of arguments allowed
	MaxNumArgs pulumi.IntOutput `pulumi:"maxNumArgs"`
	// Score value to add for notice anomalies
	NoticeAnomalyScore pulumi.IntOutput `pulumi:"noticeAnomalyScore"`
	// The numeric ID assigned to the WAF Rule Exclusion
	Number pulumi.IntOutput `pulumi:"number"`
	// The configured paranoia level
	ParanoiaLevel pulumi.IntOutput `pulumi:"paranoiaLevel"`
	// PHP injection threshold
	PhpInjectionScoreThreshold pulumi.IntOutput `pulumi:"phpInjectionScoreThreshold"`
	// Remote code execution threshold
	RceScoreThreshold pulumi.IntOutput `pulumi:"rceScoreThreshold"`
	// A space-separated list of allowed file extensions
	RestrictedExtensions pulumi.StringOutput `pulumi:"restrictedExtensions"`
	// A space-separated list of allowed header names
	RestrictedHeaders pulumi.StringOutput `pulumi:"restrictedHeaders"`
	// Remote file inclusion attack threshold
	RfiScoreThreshold pulumi.IntOutput                                `pulumi:"rfiScoreThreshold"`
	RuleExclusions    ServiceWafConfigurationRuleExclusionArrayOutput `pulumi:"ruleExclusions"`
	Rules             ServiceWafConfigurationRuleArrayOutput          `pulumi:"rules"`
	// Session fixation attack threshold
	SessionFixationScoreThreshold pulumi.IntOutput `pulumi:"sessionFixationScoreThreshold"`
	// SQL injection attack threshold
	SqlInjectionScoreThreshold pulumi.IntOutput `pulumi:"sqlInjectionScoreThreshold"`
	// The maximum size of argument names and values
	TotalArgLength pulumi.IntOutput `pulumi:"totalArgLength"`
	// The ID of the Web Application Firewall that the configuration belongs to
	WafId pulumi.StringOutput `pulumi:"wafId"`
	// Score value to add for warning anomalies
	WarningAnomalyScore pulumi.IntOutput `pulumi:"warningAnomalyScore"`
	// XSS attack threshold
	XssScoreThreshold pulumi.IntOutput `pulumi:"xssScoreThreshold"`
}

// NewServiceWafConfiguration registers a new resource with the given unique name, arguments, and options.
func NewServiceWafConfiguration(ctx *pulumi.Context,
	name string, args *ServiceWafConfigurationArgs, opts ...pulumi.ResourceOption) (*ServiceWafConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.WafId == nil {
		return nil, errors.New("invalid value for required argument 'WafId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceWafConfiguration
	err := ctx.RegisterResource("fastly:index/serviceWafConfiguration:ServiceWafConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceWafConfiguration gets an existing ServiceWafConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceWafConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceWafConfigurationState, opts ...pulumi.ResourceOption) (*ServiceWafConfiguration, error) {
	var resource ServiceWafConfiguration
	err := ctx.ReadResource("fastly:index/serviceWafConfiguration:ServiceWafConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceWafConfiguration resources.
type serviceWafConfigurationState struct {
	// Conditionally prevents a new firewall version from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`
	Activate *bool `pulumi:"activate"`
	// Whether a specific firewall version is currently deployed
	Active *bool `pulumi:"active"`
	// Allowed HTTP versions
	AllowedHttpVersions *string `pulumi:"allowedHttpVersions"`
	// A space-separated list of HTTP method names
	AllowedMethods *string `pulumi:"allowedMethods"`
	// Allowed request content types
	AllowedRequestContentType *string `pulumi:"allowedRequestContentType"`
	// Allowed request content type charset
	AllowedRequestContentTypeCharset *string `pulumi:"allowedRequestContentTypeCharset"`
	// The maximum number of arguments allowed
	ArgLength *int `pulumi:"argLength"`
	// The maximum allowed argument name length
	ArgNameLength *int `pulumi:"argNameLength"`
	// The latest cloned firewall version by the provider
	ClonedVersion *int `pulumi:"clonedVersion"`
	// The maximum allowed size of all files
	CombinedFileSizes *int `pulumi:"combinedFileSizes"`
	// Score value to add for critical anomalies
	CriticalAnomalyScore *int `pulumi:"criticalAnomalyScore"`
	// CRS validate UTF8 encoding
	CrsValidateUtf8Encoding *bool `pulumi:"crsValidateUtf8Encoding"`
	// Score value to add for error anomalies
	ErrorAnomalyScore *int `pulumi:"errorAnomalyScore"`
	// A space-separated list of country codes in ISO 3166-1 (two-letter) format
	HighRiskCountryCodes *string `pulumi:"highRiskCountryCodes"`
	// HTTP violation threshold
	HttpViolationScoreThreshold *int `pulumi:"httpViolationScoreThreshold"`
	// Inbound anomaly threshold
	InboundAnomalyScoreThreshold *int `pulumi:"inboundAnomalyScoreThreshold"`
	// Local file inclusion attack threshold
	LfiScoreThreshold *int `pulumi:"lfiScoreThreshold"`
	// The maximum allowed file size, in bytes
	MaxFileSize *int `pulumi:"maxFileSize"`
	// The maximum number of arguments allowed
	MaxNumArgs *int `pulumi:"maxNumArgs"`
	// Score value to add for notice anomalies
	NoticeAnomalyScore *int `pulumi:"noticeAnomalyScore"`
	// The numeric ID assigned to the WAF Rule Exclusion
	Number *int `pulumi:"number"`
	// The configured paranoia level
	ParanoiaLevel *int `pulumi:"paranoiaLevel"`
	// PHP injection threshold
	PhpInjectionScoreThreshold *int `pulumi:"phpInjectionScoreThreshold"`
	// Remote code execution threshold
	RceScoreThreshold *int `pulumi:"rceScoreThreshold"`
	// A space-separated list of allowed file extensions
	RestrictedExtensions *string `pulumi:"restrictedExtensions"`
	// A space-separated list of allowed header names
	RestrictedHeaders *string `pulumi:"restrictedHeaders"`
	// Remote file inclusion attack threshold
	RfiScoreThreshold *int                                   `pulumi:"rfiScoreThreshold"`
	RuleExclusions    []ServiceWafConfigurationRuleExclusion `pulumi:"ruleExclusions"`
	Rules             []ServiceWafConfigurationRule          `pulumi:"rules"`
	// Session fixation attack threshold
	SessionFixationScoreThreshold *int `pulumi:"sessionFixationScoreThreshold"`
	// SQL injection attack threshold
	SqlInjectionScoreThreshold *int `pulumi:"sqlInjectionScoreThreshold"`
	// The maximum size of argument names and values
	TotalArgLength *int `pulumi:"totalArgLength"`
	// The ID of the Web Application Firewall that the configuration belongs to
	WafId *string `pulumi:"wafId"`
	// Score value to add for warning anomalies
	WarningAnomalyScore *int `pulumi:"warningAnomalyScore"`
	// XSS attack threshold
	XssScoreThreshold *int `pulumi:"xssScoreThreshold"`
}

type ServiceWafConfigurationState struct {
	// Conditionally prevents a new firewall version from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`
	Activate pulumi.BoolPtrInput
	// Whether a specific firewall version is currently deployed
	Active pulumi.BoolPtrInput
	// Allowed HTTP versions
	AllowedHttpVersions pulumi.StringPtrInput
	// A space-separated list of HTTP method names
	AllowedMethods pulumi.StringPtrInput
	// Allowed request content types
	AllowedRequestContentType pulumi.StringPtrInput
	// Allowed request content type charset
	AllowedRequestContentTypeCharset pulumi.StringPtrInput
	// The maximum number of arguments allowed
	ArgLength pulumi.IntPtrInput
	// The maximum allowed argument name length
	ArgNameLength pulumi.IntPtrInput
	// The latest cloned firewall version by the provider
	ClonedVersion pulumi.IntPtrInput
	// The maximum allowed size of all files
	CombinedFileSizes pulumi.IntPtrInput
	// Score value to add for critical anomalies
	CriticalAnomalyScore pulumi.IntPtrInput
	// CRS validate UTF8 encoding
	CrsValidateUtf8Encoding pulumi.BoolPtrInput
	// Score value to add for error anomalies
	ErrorAnomalyScore pulumi.IntPtrInput
	// A space-separated list of country codes in ISO 3166-1 (two-letter) format
	HighRiskCountryCodes pulumi.StringPtrInput
	// HTTP violation threshold
	HttpViolationScoreThreshold pulumi.IntPtrInput
	// Inbound anomaly threshold
	InboundAnomalyScoreThreshold pulumi.IntPtrInput
	// Local file inclusion attack threshold
	LfiScoreThreshold pulumi.IntPtrInput
	// The maximum allowed file size, in bytes
	MaxFileSize pulumi.IntPtrInput
	// The maximum number of arguments allowed
	MaxNumArgs pulumi.IntPtrInput
	// Score value to add for notice anomalies
	NoticeAnomalyScore pulumi.IntPtrInput
	// The numeric ID assigned to the WAF Rule Exclusion
	Number pulumi.IntPtrInput
	// The configured paranoia level
	ParanoiaLevel pulumi.IntPtrInput
	// PHP injection threshold
	PhpInjectionScoreThreshold pulumi.IntPtrInput
	// Remote code execution threshold
	RceScoreThreshold pulumi.IntPtrInput
	// A space-separated list of allowed file extensions
	RestrictedExtensions pulumi.StringPtrInput
	// A space-separated list of allowed header names
	RestrictedHeaders pulumi.StringPtrInput
	// Remote file inclusion attack threshold
	RfiScoreThreshold pulumi.IntPtrInput
	RuleExclusions    ServiceWafConfigurationRuleExclusionArrayInput
	Rules             ServiceWafConfigurationRuleArrayInput
	// Session fixation attack threshold
	SessionFixationScoreThreshold pulumi.IntPtrInput
	// SQL injection attack threshold
	SqlInjectionScoreThreshold pulumi.IntPtrInput
	// The maximum size of argument names and values
	TotalArgLength pulumi.IntPtrInput
	// The ID of the Web Application Firewall that the configuration belongs to
	WafId pulumi.StringPtrInput
	// Score value to add for warning anomalies
	WarningAnomalyScore pulumi.IntPtrInput
	// XSS attack threshold
	XssScoreThreshold pulumi.IntPtrInput
}

func (ServiceWafConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceWafConfigurationState)(nil)).Elem()
}

type serviceWafConfigurationArgs struct {
	// Conditionally prevents a new firewall version from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`
	Activate *bool `pulumi:"activate"`
	// Allowed HTTP versions
	AllowedHttpVersions *string `pulumi:"allowedHttpVersions"`
	// A space-separated list of HTTP method names
	AllowedMethods *string `pulumi:"allowedMethods"`
	// Allowed request content types
	AllowedRequestContentType *string `pulumi:"allowedRequestContentType"`
	// Allowed request content type charset
	AllowedRequestContentTypeCharset *string `pulumi:"allowedRequestContentTypeCharset"`
	// The maximum number of arguments allowed
	ArgLength *int `pulumi:"argLength"`
	// The maximum allowed argument name length
	ArgNameLength *int `pulumi:"argNameLength"`
	// The maximum allowed size of all files
	CombinedFileSizes *int `pulumi:"combinedFileSizes"`
	// Score value to add for critical anomalies
	CriticalAnomalyScore *int `pulumi:"criticalAnomalyScore"`
	// CRS validate UTF8 encoding
	CrsValidateUtf8Encoding *bool `pulumi:"crsValidateUtf8Encoding"`
	// Score value to add for error anomalies
	ErrorAnomalyScore *int `pulumi:"errorAnomalyScore"`
	// A space-separated list of country codes in ISO 3166-1 (two-letter) format
	HighRiskCountryCodes *string `pulumi:"highRiskCountryCodes"`
	// HTTP violation threshold
	HttpViolationScoreThreshold *int `pulumi:"httpViolationScoreThreshold"`
	// Inbound anomaly threshold
	InboundAnomalyScoreThreshold *int `pulumi:"inboundAnomalyScoreThreshold"`
	// Local file inclusion attack threshold
	LfiScoreThreshold *int `pulumi:"lfiScoreThreshold"`
	// The maximum allowed file size, in bytes
	MaxFileSize *int `pulumi:"maxFileSize"`
	// The maximum number of arguments allowed
	MaxNumArgs *int `pulumi:"maxNumArgs"`
	// Score value to add for notice anomalies
	NoticeAnomalyScore *int `pulumi:"noticeAnomalyScore"`
	// The configured paranoia level
	ParanoiaLevel *int `pulumi:"paranoiaLevel"`
	// PHP injection threshold
	PhpInjectionScoreThreshold *int `pulumi:"phpInjectionScoreThreshold"`
	// Remote code execution threshold
	RceScoreThreshold *int `pulumi:"rceScoreThreshold"`
	// A space-separated list of allowed file extensions
	RestrictedExtensions *string `pulumi:"restrictedExtensions"`
	// A space-separated list of allowed header names
	RestrictedHeaders *string `pulumi:"restrictedHeaders"`
	// Remote file inclusion attack threshold
	RfiScoreThreshold *int                                   `pulumi:"rfiScoreThreshold"`
	RuleExclusions    []ServiceWafConfigurationRuleExclusion `pulumi:"ruleExclusions"`
	Rules             []ServiceWafConfigurationRule          `pulumi:"rules"`
	// Session fixation attack threshold
	SessionFixationScoreThreshold *int `pulumi:"sessionFixationScoreThreshold"`
	// SQL injection attack threshold
	SqlInjectionScoreThreshold *int `pulumi:"sqlInjectionScoreThreshold"`
	// The maximum size of argument names and values
	TotalArgLength *int `pulumi:"totalArgLength"`
	// The ID of the Web Application Firewall that the configuration belongs to
	WafId string `pulumi:"wafId"`
	// Score value to add for warning anomalies
	WarningAnomalyScore *int `pulumi:"warningAnomalyScore"`
	// XSS attack threshold
	XssScoreThreshold *int `pulumi:"xssScoreThreshold"`
}

// The set of arguments for constructing a ServiceWafConfiguration resource.
type ServiceWafConfigurationArgs struct {
	// Conditionally prevents a new firewall version from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`
	Activate pulumi.BoolPtrInput
	// Allowed HTTP versions
	AllowedHttpVersions pulumi.StringPtrInput
	// A space-separated list of HTTP method names
	AllowedMethods pulumi.StringPtrInput
	// Allowed request content types
	AllowedRequestContentType pulumi.StringPtrInput
	// Allowed request content type charset
	AllowedRequestContentTypeCharset pulumi.StringPtrInput
	// The maximum number of arguments allowed
	ArgLength pulumi.IntPtrInput
	// The maximum allowed argument name length
	ArgNameLength pulumi.IntPtrInput
	// The maximum allowed size of all files
	CombinedFileSizes pulumi.IntPtrInput
	// Score value to add for critical anomalies
	CriticalAnomalyScore pulumi.IntPtrInput
	// CRS validate UTF8 encoding
	CrsValidateUtf8Encoding pulumi.BoolPtrInput
	// Score value to add for error anomalies
	ErrorAnomalyScore pulumi.IntPtrInput
	// A space-separated list of country codes in ISO 3166-1 (two-letter) format
	HighRiskCountryCodes pulumi.StringPtrInput
	// HTTP violation threshold
	HttpViolationScoreThreshold pulumi.IntPtrInput
	// Inbound anomaly threshold
	InboundAnomalyScoreThreshold pulumi.IntPtrInput
	// Local file inclusion attack threshold
	LfiScoreThreshold pulumi.IntPtrInput
	// The maximum allowed file size, in bytes
	MaxFileSize pulumi.IntPtrInput
	// The maximum number of arguments allowed
	MaxNumArgs pulumi.IntPtrInput
	// Score value to add for notice anomalies
	NoticeAnomalyScore pulumi.IntPtrInput
	// The configured paranoia level
	ParanoiaLevel pulumi.IntPtrInput
	// PHP injection threshold
	PhpInjectionScoreThreshold pulumi.IntPtrInput
	// Remote code execution threshold
	RceScoreThreshold pulumi.IntPtrInput
	// A space-separated list of allowed file extensions
	RestrictedExtensions pulumi.StringPtrInput
	// A space-separated list of allowed header names
	RestrictedHeaders pulumi.StringPtrInput
	// Remote file inclusion attack threshold
	RfiScoreThreshold pulumi.IntPtrInput
	RuleExclusions    ServiceWafConfigurationRuleExclusionArrayInput
	Rules             ServiceWafConfigurationRuleArrayInput
	// Session fixation attack threshold
	SessionFixationScoreThreshold pulumi.IntPtrInput
	// SQL injection attack threshold
	SqlInjectionScoreThreshold pulumi.IntPtrInput
	// The maximum size of argument names and values
	TotalArgLength pulumi.IntPtrInput
	// The ID of the Web Application Firewall that the configuration belongs to
	WafId pulumi.StringInput
	// Score value to add for warning anomalies
	WarningAnomalyScore pulumi.IntPtrInput
	// XSS attack threshold
	XssScoreThreshold pulumi.IntPtrInput
}

func (ServiceWafConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceWafConfigurationArgs)(nil)).Elem()
}

type ServiceWafConfigurationInput interface {
	pulumi.Input

	ToServiceWafConfigurationOutput() ServiceWafConfigurationOutput
	ToServiceWafConfigurationOutputWithContext(ctx context.Context) ServiceWafConfigurationOutput
}

func (*ServiceWafConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceWafConfiguration)(nil)).Elem()
}

func (i *ServiceWafConfiguration) ToServiceWafConfigurationOutput() ServiceWafConfigurationOutput {
	return i.ToServiceWafConfigurationOutputWithContext(context.Background())
}

func (i *ServiceWafConfiguration) ToServiceWafConfigurationOutputWithContext(ctx context.Context) ServiceWafConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceWafConfigurationOutput)
}

// ServiceWafConfigurationArrayInput is an input type that accepts ServiceWafConfigurationArray and ServiceWafConfigurationArrayOutput values.
// You can construct a concrete instance of `ServiceWafConfigurationArrayInput` via:
//
//	ServiceWafConfigurationArray{ ServiceWafConfigurationArgs{...} }
type ServiceWafConfigurationArrayInput interface {
	pulumi.Input

	ToServiceWafConfigurationArrayOutput() ServiceWafConfigurationArrayOutput
	ToServiceWafConfigurationArrayOutputWithContext(context.Context) ServiceWafConfigurationArrayOutput
}

type ServiceWafConfigurationArray []ServiceWafConfigurationInput

func (ServiceWafConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceWafConfiguration)(nil)).Elem()
}

func (i ServiceWafConfigurationArray) ToServiceWafConfigurationArrayOutput() ServiceWafConfigurationArrayOutput {
	return i.ToServiceWafConfigurationArrayOutputWithContext(context.Background())
}

func (i ServiceWafConfigurationArray) ToServiceWafConfigurationArrayOutputWithContext(ctx context.Context) ServiceWafConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceWafConfigurationArrayOutput)
}

// ServiceWafConfigurationMapInput is an input type that accepts ServiceWafConfigurationMap and ServiceWafConfigurationMapOutput values.
// You can construct a concrete instance of `ServiceWafConfigurationMapInput` via:
//
//	ServiceWafConfigurationMap{ "key": ServiceWafConfigurationArgs{...} }
type ServiceWafConfigurationMapInput interface {
	pulumi.Input

	ToServiceWafConfigurationMapOutput() ServiceWafConfigurationMapOutput
	ToServiceWafConfigurationMapOutputWithContext(context.Context) ServiceWafConfigurationMapOutput
}

type ServiceWafConfigurationMap map[string]ServiceWafConfigurationInput

func (ServiceWafConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceWafConfiguration)(nil)).Elem()
}

func (i ServiceWafConfigurationMap) ToServiceWafConfigurationMapOutput() ServiceWafConfigurationMapOutput {
	return i.ToServiceWafConfigurationMapOutputWithContext(context.Background())
}

func (i ServiceWafConfigurationMap) ToServiceWafConfigurationMapOutputWithContext(ctx context.Context) ServiceWafConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceWafConfigurationMapOutput)
}

type ServiceWafConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceWafConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceWafConfiguration)(nil)).Elem()
}

func (o ServiceWafConfigurationOutput) ToServiceWafConfigurationOutput() ServiceWafConfigurationOutput {
	return o
}

func (o ServiceWafConfigurationOutput) ToServiceWafConfigurationOutputWithContext(ctx context.Context) ServiceWafConfigurationOutput {
	return o
}

// Conditionally prevents a new firewall version from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`
func (o ServiceWafConfigurationOutput) Activate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.BoolPtrOutput { return v.Activate }).(pulumi.BoolPtrOutput)
}

// Whether a specific firewall version is currently deployed
func (o ServiceWafConfigurationOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.BoolOutput { return v.Active }).(pulumi.BoolOutput)
}

// Allowed HTTP versions
func (o ServiceWafConfigurationOutput) AllowedHttpVersions() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.StringOutput { return v.AllowedHttpVersions }).(pulumi.StringOutput)
}

// A space-separated list of HTTP method names
func (o ServiceWafConfigurationOutput) AllowedMethods() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.StringOutput { return v.AllowedMethods }).(pulumi.StringOutput)
}

// Allowed request content types
func (o ServiceWafConfigurationOutput) AllowedRequestContentType() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.StringOutput { return v.AllowedRequestContentType }).(pulumi.StringOutput)
}

// Allowed request content type charset
func (o ServiceWafConfigurationOutput) AllowedRequestContentTypeCharset() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.StringOutput { return v.AllowedRequestContentTypeCharset }).(pulumi.StringOutput)
}

// The maximum number of arguments allowed
func (o ServiceWafConfigurationOutput) ArgLength() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.ArgLength }).(pulumi.IntOutput)
}

// The maximum allowed argument name length
func (o ServiceWafConfigurationOutput) ArgNameLength() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.ArgNameLength }).(pulumi.IntOutput)
}

// The latest cloned firewall version by the provider
func (o ServiceWafConfigurationOutput) ClonedVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.ClonedVersion }).(pulumi.IntOutput)
}

// The maximum allowed size of all files
func (o ServiceWafConfigurationOutput) CombinedFileSizes() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.CombinedFileSizes }).(pulumi.IntOutput)
}

// Score value to add for critical anomalies
func (o ServiceWafConfigurationOutput) CriticalAnomalyScore() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.CriticalAnomalyScore }).(pulumi.IntOutput)
}

// CRS validate UTF8 encoding
func (o ServiceWafConfigurationOutput) CrsValidateUtf8Encoding() pulumi.BoolOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.BoolOutput { return v.CrsValidateUtf8Encoding }).(pulumi.BoolOutput)
}

// Score value to add for error anomalies
func (o ServiceWafConfigurationOutput) ErrorAnomalyScore() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.ErrorAnomalyScore }).(pulumi.IntOutput)
}

// A space-separated list of country codes in ISO 3166-1 (two-letter) format
func (o ServiceWafConfigurationOutput) HighRiskCountryCodes() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.StringOutput { return v.HighRiskCountryCodes }).(pulumi.StringOutput)
}

// HTTP violation threshold
func (o ServiceWafConfigurationOutput) HttpViolationScoreThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.HttpViolationScoreThreshold }).(pulumi.IntOutput)
}

// Inbound anomaly threshold
func (o ServiceWafConfigurationOutput) InboundAnomalyScoreThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.InboundAnomalyScoreThreshold }).(pulumi.IntOutput)
}

// Local file inclusion attack threshold
func (o ServiceWafConfigurationOutput) LfiScoreThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.LfiScoreThreshold }).(pulumi.IntOutput)
}

// The maximum allowed file size, in bytes
func (o ServiceWafConfigurationOutput) MaxFileSize() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.MaxFileSize }).(pulumi.IntOutput)
}

// The maximum number of arguments allowed
func (o ServiceWafConfigurationOutput) MaxNumArgs() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.MaxNumArgs }).(pulumi.IntOutput)
}

// Score value to add for notice anomalies
func (o ServiceWafConfigurationOutput) NoticeAnomalyScore() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.NoticeAnomalyScore }).(pulumi.IntOutput)
}

// The numeric ID assigned to the WAF Rule Exclusion
func (o ServiceWafConfigurationOutput) Number() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.Number }).(pulumi.IntOutput)
}

// The configured paranoia level
func (o ServiceWafConfigurationOutput) ParanoiaLevel() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.ParanoiaLevel }).(pulumi.IntOutput)
}

// PHP injection threshold
func (o ServiceWafConfigurationOutput) PhpInjectionScoreThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.PhpInjectionScoreThreshold }).(pulumi.IntOutput)
}

// Remote code execution threshold
func (o ServiceWafConfigurationOutput) RceScoreThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.RceScoreThreshold }).(pulumi.IntOutput)
}

// A space-separated list of allowed file extensions
func (o ServiceWafConfigurationOutput) RestrictedExtensions() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.StringOutput { return v.RestrictedExtensions }).(pulumi.StringOutput)
}

// A space-separated list of allowed header names
func (o ServiceWafConfigurationOutput) RestrictedHeaders() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.StringOutput { return v.RestrictedHeaders }).(pulumi.StringOutput)
}

// Remote file inclusion attack threshold
func (o ServiceWafConfigurationOutput) RfiScoreThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.RfiScoreThreshold }).(pulumi.IntOutput)
}

func (o ServiceWafConfigurationOutput) RuleExclusions() ServiceWafConfigurationRuleExclusionArrayOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) ServiceWafConfigurationRuleExclusionArrayOutput {
		return v.RuleExclusions
	}).(ServiceWafConfigurationRuleExclusionArrayOutput)
}

func (o ServiceWafConfigurationOutput) Rules() ServiceWafConfigurationRuleArrayOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) ServiceWafConfigurationRuleArrayOutput { return v.Rules }).(ServiceWafConfigurationRuleArrayOutput)
}

// Session fixation attack threshold
func (o ServiceWafConfigurationOutput) SessionFixationScoreThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.SessionFixationScoreThreshold }).(pulumi.IntOutput)
}

// SQL injection attack threshold
func (o ServiceWafConfigurationOutput) SqlInjectionScoreThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.SqlInjectionScoreThreshold }).(pulumi.IntOutput)
}

// The maximum size of argument names and values
func (o ServiceWafConfigurationOutput) TotalArgLength() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.TotalArgLength }).(pulumi.IntOutput)
}

// The ID of the Web Application Firewall that the configuration belongs to
func (o ServiceWafConfigurationOutput) WafId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.StringOutput { return v.WafId }).(pulumi.StringOutput)
}

// Score value to add for warning anomalies
func (o ServiceWafConfigurationOutput) WarningAnomalyScore() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.WarningAnomalyScore }).(pulumi.IntOutput)
}

// XSS attack threshold
func (o ServiceWafConfigurationOutput) XssScoreThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceWafConfiguration) pulumi.IntOutput { return v.XssScoreThreshold }).(pulumi.IntOutput)
}

type ServiceWafConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ServiceWafConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceWafConfiguration)(nil)).Elem()
}

func (o ServiceWafConfigurationArrayOutput) ToServiceWafConfigurationArrayOutput() ServiceWafConfigurationArrayOutput {
	return o
}

func (o ServiceWafConfigurationArrayOutput) ToServiceWafConfigurationArrayOutputWithContext(ctx context.Context) ServiceWafConfigurationArrayOutput {
	return o
}

func (o ServiceWafConfigurationArrayOutput) Index(i pulumi.IntInput) ServiceWafConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceWafConfiguration {
		return vs[0].([]*ServiceWafConfiguration)[vs[1].(int)]
	}).(ServiceWafConfigurationOutput)
}

type ServiceWafConfigurationMapOutput struct{ *pulumi.OutputState }

func (ServiceWafConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceWafConfiguration)(nil)).Elem()
}

func (o ServiceWafConfigurationMapOutput) ToServiceWafConfigurationMapOutput() ServiceWafConfigurationMapOutput {
	return o
}

func (o ServiceWafConfigurationMapOutput) ToServiceWafConfigurationMapOutputWithContext(ctx context.Context) ServiceWafConfigurationMapOutput {
	return o
}

func (o ServiceWafConfigurationMapOutput) MapIndex(k pulumi.StringInput) ServiceWafConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceWafConfiguration {
		return vs[0].(map[string]*ServiceWafConfiguration)[vs[1].(string)]
	}).(ServiceWafConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceWafConfigurationInput)(nil)).Elem(), &ServiceWafConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceWafConfigurationArrayInput)(nil)).Elem(), ServiceWafConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceWafConfigurationMapInput)(nil)).Elem(), ServiceWafConfigurationMap{})
	pulumi.RegisterOutputType(ServiceWafConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceWafConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ServiceWafConfigurationMapOutput{})
}
