// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fastly

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ## Import
//
// This is an example of the import command being applied to the resource named `fastly_service_waf_configuration.waf` The resource ID should be the WAF ID.
//
// ```sh
//  $ pulumi import fastly:index/serviceWafConfiguration:ServiceWafConfiguration waf xxxxxxxxxxxxxxxxxxxx
// ```
//
//  If Terraform is already managing a remote WAF configurations against a resource being imported then the user will be asked to remove it from the existing Terraform state. The following is an example of the Terraform state command to remove the resource named `fastly_service_waf_configuration.waf` from the Terraform state file. $ terraform state rm fastly_service_waf_configuration.waf
type ServiceWafConfiguration struct {
	pulumi.CustomResourceState

	// Allowed HTTP versions.
	AllowedHttpVersions pulumi.StringOutput `pulumi:"allowedHttpVersions"`
	// A space-separated list of HTTP method names.
	AllowedMethods pulumi.StringOutput `pulumi:"allowedMethods"`
	// Allowed request content types.
	AllowedRequestContentType pulumi.StringOutput `pulumi:"allowedRequestContentType"`
	// Allowed request content type charset.
	AllowedRequestContentTypeCharset pulumi.StringOutput `pulumi:"allowedRequestContentTypeCharset"`
	// The maximum number of arguments allowed.
	ArgLength pulumi.IntOutput `pulumi:"argLength"`
	// The maximum allowed argument name length.
	ArgNameLength pulumi.IntOutput `pulumi:"argNameLength"`
	// The maximum allowed size of all files.
	CombinedFileSizes pulumi.IntOutput `pulumi:"combinedFileSizes"`
	// Score value to add for critical anomalies.
	CriticalAnomalyScore pulumi.IntOutput `pulumi:"criticalAnomalyScore"`
	// CRS validate UTF8 encoding.
	CrsValidateUtf8Encoding pulumi.BoolOutput `pulumi:"crsValidateUtf8Encoding"`
	// Score value to add for error anomalies.
	ErrorAnomalyScore pulumi.IntOutput `pulumi:"errorAnomalyScore"`
	// A space-separated list of country codes in ISO 3166-1 (two-letter) format.
	HighRiskCountryCodes pulumi.StringOutput `pulumi:"highRiskCountryCodes"`
	// HTTP violation threshold.
	HttpViolationScoreThreshold pulumi.IntOutput `pulumi:"httpViolationScoreThreshold"`
	// Inbound anomaly threshold.
	InboundAnomalyScoreThreshold pulumi.IntOutput `pulumi:"inboundAnomalyScoreThreshold"`
	// Local file inclusion attack threshold.
	LfiScoreThreshold pulumi.IntOutput `pulumi:"lfiScoreThreshold"`
	// The maximum allowed file size, in bytes.
	MaxFileSize pulumi.IntOutput `pulumi:"maxFileSize"`
	// The maximum number of arguments allowed.
	MaxNumArgs pulumi.IntOutput `pulumi:"maxNumArgs"`
	// Score value to add for notice anomalies.
	NoticeAnomalyScore pulumi.IntOutput `pulumi:"noticeAnomalyScore"`
	// The configured paranoia level.
	ParanoiaLevel pulumi.IntOutput `pulumi:"paranoiaLevel"`
	// PHP injection threshold.
	PhpInjectionScoreThreshold pulumi.IntOutput `pulumi:"phpInjectionScoreThreshold"`
	// Remote code execution threshold.
	RceScoreThreshold pulumi.IntOutput `pulumi:"rceScoreThreshold"`
	// A space-separated list of allowed file extensions.
	RestrictedExtensions pulumi.StringOutput `pulumi:"restrictedExtensions"`
	// A space-separated list of allowed header names.
	RestrictedHeaders pulumi.StringOutput `pulumi:"restrictedHeaders"`
	// Remote file inclusion attack threshold.
	RfiScoreThreshold pulumi.IntOutput `pulumi:"rfiScoreThreshold"`
	// The Web Application Firewall's rule exclusions. Defined below
	RuleExclusions ServiceWafConfigurationRuleExclusionArrayOutput `pulumi:"ruleExclusions"`
	// The Web Application Firewall's active rules. Defined below
	Rules ServiceWafConfigurationRuleArrayOutput `pulumi:"rules"`
	// Session fixation attack threshold.
	SessionFixationScoreThreshold pulumi.IntOutput `pulumi:"sessionFixationScoreThreshold"`
	// SQL injection attack threshold.
	SqlInjectionScoreThreshold pulumi.IntOutput `pulumi:"sqlInjectionScoreThreshold"`
	// The maximum size of argument names and values.
	TotalArgLength pulumi.IntOutput `pulumi:"totalArgLength"`
	// The ID of the Web Application Firewall that the configuration belongs to.
	WafId pulumi.StringOutput `pulumi:"wafId"`
	// Score value to add for warning anomalies.
	WarningAnomalyScore pulumi.IntOutput `pulumi:"warningAnomalyScore"`
	// XSS attack threshold.
	XssScoreThreshold pulumi.IntOutput `pulumi:"xssScoreThreshold"`
}

// NewServiceWafConfiguration registers a new resource with the given unique name, arguments, and options.
func NewServiceWafConfiguration(ctx *pulumi.Context,
	name string, args *ServiceWafConfigurationArgs, opts ...pulumi.ResourceOption) (*ServiceWafConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.WafId == nil {
		return nil, errors.New("invalid value for required argument 'WafId'")
	}
	var resource ServiceWafConfiguration
	err := ctx.RegisterResource("fastly:index/serviceWafConfiguration:ServiceWafConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceWafConfiguration gets an existing ServiceWafConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceWafConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceWafConfigurationState, opts ...pulumi.ResourceOption) (*ServiceWafConfiguration, error) {
	var resource ServiceWafConfiguration
	err := ctx.ReadResource("fastly:index/serviceWafConfiguration:ServiceWafConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceWafConfiguration resources.
type serviceWafConfigurationState struct {
	// Allowed HTTP versions.
	AllowedHttpVersions *string `pulumi:"allowedHttpVersions"`
	// A space-separated list of HTTP method names.
	AllowedMethods *string `pulumi:"allowedMethods"`
	// Allowed request content types.
	AllowedRequestContentType *string `pulumi:"allowedRequestContentType"`
	// Allowed request content type charset.
	AllowedRequestContentTypeCharset *string `pulumi:"allowedRequestContentTypeCharset"`
	// The maximum number of arguments allowed.
	ArgLength *int `pulumi:"argLength"`
	// The maximum allowed argument name length.
	ArgNameLength *int `pulumi:"argNameLength"`
	// The maximum allowed size of all files.
	CombinedFileSizes *int `pulumi:"combinedFileSizes"`
	// Score value to add for critical anomalies.
	CriticalAnomalyScore *int `pulumi:"criticalAnomalyScore"`
	// CRS validate UTF8 encoding.
	CrsValidateUtf8Encoding *bool `pulumi:"crsValidateUtf8Encoding"`
	// Score value to add for error anomalies.
	ErrorAnomalyScore *int `pulumi:"errorAnomalyScore"`
	// A space-separated list of country codes in ISO 3166-1 (two-letter) format.
	HighRiskCountryCodes *string `pulumi:"highRiskCountryCodes"`
	// HTTP violation threshold.
	HttpViolationScoreThreshold *int `pulumi:"httpViolationScoreThreshold"`
	// Inbound anomaly threshold.
	InboundAnomalyScoreThreshold *int `pulumi:"inboundAnomalyScoreThreshold"`
	// Local file inclusion attack threshold.
	LfiScoreThreshold *int `pulumi:"lfiScoreThreshold"`
	// The maximum allowed file size, in bytes.
	MaxFileSize *int `pulumi:"maxFileSize"`
	// The maximum number of arguments allowed.
	MaxNumArgs *int `pulumi:"maxNumArgs"`
	// Score value to add for notice anomalies.
	NoticeAnomalyScore *int `pulumi:"noticeAnomalyScore"`
	// The configured paranoia level.
	ParanoiaLevel *int `pulumi:"paranoiaLevel"`
	// PHP injection threshold.
	PhpInjectionScoreThreshold *int `pulumi:"phpInjectionScoreThreshold"`
	// Remote code execution threshold.
	RceScoreThreshold *int `pulumi:"rceScoreThreshold"`
	// A space-separated list of allowed file extensions.
	RestrictedExtensions *string `pulumi:"restrictedExtensions"`
	// A space-separated list of allowed header names.
	RestrictedHeaders *string `pulumi:"restrictedHeaders"`
	// Remote file inclusion attack threshold.
	RfiScoreThreshold *int `pulumi:"rfiScoreThreshold"`
	// The Web Application Firewall's rule exclusions. Defined below
	RuleExclusions []ServiceWafConfigurationRuleExclusion `pulumi:"ruleExclusions"`
	// The Web Application Firewall's active rules. Defined below
	Rules []ServiceWafConfigurationRule `pulumi:"rules"`
	// Session fixation attack threshold.
	SessionFixationScoreThreshold *int `pulumi:"sessionFixationScoreThreshold"`
	// SQL injection attack threshold.
	SqlInjectionScoreThreshold *int `pulumi:"sqlInjectionScoreThreshold"`
	// The maximum size of argument names and values.
	TotalArgLength *int `pulumi:"totalArgLength"`
	// The ID of the Web Application Firewall that the configuration belongs to.
	WafId *string `pulumi:"wafId"`
	// Score value to add for warning anomalies.
	WarningAnomalyScore *int `pulumi:"warningAnomalyScore"`
	// XSS attack threshold.
	XssScoreThreshold *int `pulumi:"xssScoreThreshold"`
}

type ServiceWafConfigurationState struct {
	// Allowed HTTP versions.
	AllowedHttpVersions pulumi.StringPtrInput
	// A space-separated list of HTTP method names.
	AllowedMethods pulumi.StringPtrInput
	// Allowed request content types.
	AllowedRequestContentType pulumi.StringPtrInput
	// Allowed request content type charset.
	AllowedRequestContentTypeCharset pulumi.StringPtrInput
	// The maximum number of arguments allowed.
	ArgLength pulumi.IntPtrInput
	// The maximum allowed argument name length.
	ArgNameLength pulumi.IntPtrInput
	// The maximum allowed size of all files.
	CombinedFileSizes pulumi.IntPtrInput
	// Score value to add for critical anomalies.
	CriticalAnomalyScore pulumi.IntPtrInput
	// CRS validate UTF8 encoding.
	CrsValidateUtf8Encoding pulumi.BoolPtrInput
	// Score value to add for error anomalies.
	ErrorAnomalyScore pulumi.IntPtrInput
	// A space-separated list of country codes in ISO 3166-1 (two-letter) format.
	HighRiskCountryCodes pulumi.StringPtrInput
	// HTTP violation threshold.
	HttpViolationScoreThreshold pulumi.IntPtrInput
	// Inbound anomaly threshold.
	InboundAnomalyScoreThreshold pulumi.IntPtrInput
	// Local file inclusion attack threshold.
	LfiScoreThreshold pulumi.IntPtrInput
	// The maximum allowed file size, in bytes.
	MaxFileSize pulumi.IntPtrInput
	// The maximum number of arguments allowed.
	MaxNumArgs pulumi.IntPtrInput
	// Score value to add for notice anomalies.
	NoticeAnomalyScore pulumi.IntPtrInput
	// The configured paranoia level.
	ParanoiaLevel pulumi.IntPtrInput
	// PHP injection threshold.
	PhpInjectionScoreThreshold pulumi.IntPtrInput
	// Remote code execution threshold.
	RceScoreThreshold pulumi.IntPtrInput
	// A space-separated list of allowed file extensions.
	RestrictedExtensions pulumi.StringPtrInput
	// A space-separated list of allowed header names.
	RestrictedHeaders pulumi.StringPtrInput
	// Remote file inclusion attack threshold.
	RfiScoreThreshold pulumi.IntPtrInput
	// The Web Application Firewall's rule exclusions. Defined below
	RuleExclusions ServiceWafConfigurationRuleExclusionArrayInput
	// The Web Application Firewall's active rules. Defined below
	Rules ServiceWafConfigurationRuleArrayInput
	// Session fixation attack threshold.
	SessionFixationScoreThreshold pulumi.IntPtrInput
	// SQL injection attack threshold.
	SqlInjectionScoreThreshold pulumi.IntPtrInput
	// The maximum size of argument names and values.
	TotalArgLength pulumi.IntPtrInput
	// The ID of the Web Application Firewall that the configuration belongs to.
	WafId pulumi.StringPtrInput
	// Score value to add for warning anomalies.
	WarningAnomalyScore pulumi.IntPtrInput
	// XSS attack threshold.
	XssScoreThreshold pulumi.IntPtrInput
}

func (ServiceWafConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceWafConfigurationState)(nil)).Elem()
}

type serviceWafConfigurationArgs struct {
	// Allowed HTTP versions.
	AllowedHttpVersions *string `pulumi:"allowedHttpVersions"`
	// A space-separated list of HTTP method names.
	AllowedMethods *string `pulumi:"allowedMethods"`
	// Allowed request content types.
	AllowedRequestContentType *string `pulumi:"allowedRequestContentType"`
	// Allowed request content type charset.
	AllowedRequestContentTypeCharset *string `pulumi:"allowedRequestContentTypeCharset"`
	// The maximum number of arguments allowed.
	ArgLength *int `pulumi:"argLength"`
	// The maximum allowed argument name length.
	ArgNameLength *int `pulumi:"argNameLength"`
	// The maximum allowed size of all files.
	CombinedFileSizes *int `pulumi:"combinedFileSizes"`
	// Score value to add for critical anomalies.
	CriticalAnomalyScore *int `pulumi:"criticalAnomalyScore"`
	// CRS validate UTF8 encoding.
	CrsValidateUtf8Encoding *bool `pulumi:"crsValidateUtf8Encoding"`
	// Score value to add for error anomalies.
	ErrorAnomalyScore *int `pulumi:"errorAnomalyScore"`
	// A space-separated list of country codes in ISO 3166-1 (two-letter) format.
	HighRiskCountryCodes *string `pulumi:"highRiskCountryCodes"`
	// HTTP violation threshold.
	HttpViolationScoreThreshold *int `pulumi:"httpViolationScoreThreshold"`
	// Inbound anomaly threshold.
	InboundAnomalyScoreThreshold *int `pulumi:"inboundAnomalyScoreThreshold"`
	// Local file inclusion attack threshold.
	LfiScoreThreshold *int `pulumi:"lfiScoreThreshold"`
	// The maximum allowed file size, in bytes.
	MaxFileSize *int `pulumi:"maxFileSize"`
	// The maximum number of arguments allowed.
	MaxNumArgs *int `pulumi:"maxNumArgs"`
	// Score value to add for notice anomalies.
	NoticeAnomalyScore *int `pulumi:"noticeAnomalyScore"`
	// The configured paranoia level.
	ParanoiaLevel *int `pulumi:"paranoiaLevel"`
	// PHP injection threshold.
	PhpInjectionScoreThreshold *int `pulumi:"phpInjectionScoreThreshold"`
	// Remote code execution threshold.
	RceScoreThreshold *int `pulumi:"rceScoreThreshold"`
	// A space-separated list of allowed file extensions.
	RestrictedExtensions *string `pulumi:"restrictedExtensions"`
	// A space-separated list of allowed header names.
	RestrictedHeaders *string `pulumi:"restrictedHeaders"`
	// Remote file inclusion attack threshold.
	RfiScoreThreshold *int `pulumi:"rfiScoreThreshold"`
	// The Web Application Firewall's rule exclusions. Defined below
	RuleExclusions []ServiceWafConfigurationRuleExclusion `pulumi:"ruleExclusions"`
	// The Web Application Firewall's active rules. Defined below
	Rules []ServiceWafConfigurationRule `pulumi:"rules"`
	// Session fixation attack threshold.
	SessionFixationScoreThreshold *int `pulumi:"sessionFixationScoreThreshold"`
	// SQL injection attack threshold.
	SqlInjectionScoreThreshold *int `pulumi:"sqlInjectionScoreThreshold"`
	// The maximum size of argument names and values.
	TotalArgLength *int `pulumi:"totalArgLength"`
	// The ID of the Web Application Firewall that the configuration belongs to.
	WafId string `pulumi:"wafId"`
	// Score value to add for warning anomalies.
	WarningAnomalyScore *int `pulumi:"warningAnomalyScore"`
	// XSS attack threshold.
	XssScoreThreshold *int `pulumi:"xssScoreThreshold"`
}

// The set of arguments for constructing a ServiceWafConfiguration resource.
type ServiceWafConfigurationArgs struct {
	// Allowed HTTP versions.
	AllowedHttpVersions pulumi.StringPtrInput
	// A space-separated list of HTTP method names.
	AllowedMethods pulumi.StringPtrInput
	// Allowed request content types.
	AllowedRequestContentType pulumi.StringPtrInput
	// Allowed request content type charset.
	AllowedRequestContentTypeCharset pulumi.StringPtrInput
	// The maximum number of arguments allowed.
	ArgLength pulumi.IntPtrInput
	// The maximum allowed argument name length.
	ArgNameLength pulumi.IntPtrInput
	// The maximum allowed size of all files.
	CombinedFileSizes pulumi.IntPtrInput
	// Score value to add for critical anomalies.
	CriticalAnomalyScore pulumi.IntPtrInput
	// CRS validate UTF8 encoding.
	CrsValidateUtf8Encoding pulumi.BoolPtrInput
	// Score value to add for error anomalies.
	ErrorAnomalyScore pulumi.IntPtrInput
	// A space-separated list of country codes in ISO 3166-1 (two-letter) format.
	HighRiskCountryCodes pulumi.StringPtrInput
	// HTTP violation threshold.
	HttpViolationScoreThreshold pulumi.IntPtrInput
	// Inbound anomaly threshold.
	InboundAnomalyScoreThreshold pulumi.IntPtrInput
	// Local file inclusion attack threshold.
	LfiScoreThreshold pulumi.IntPtrInput
	// The maximum allowed file size, in bytes.
	MaxFileSize pulumi.IntPtrInput
	// The maximum number of arguments allowed.
	MaxNumArgs pulumi.IntPtrInput
	// Score value to add for notice anomalies.
	NoticeAnomalyScore pulumi.IntPtrInput
	// The configured paranoia level.
	ParanoiaLevel pulumi.IntPtrInput
	// PHP injection threshold.
	PhpInjectionScoreThreshold pulumi.IntPtrInput
	// Remote code execution threshold.
	RceScoreThreshold pulumi.IntPtrInput
	// A space-separated list of allowed file extensions.
	RestrictedExtensions pulumi.StringPtrInput
	// A space-separated list of allowed header names.
	RestrictedHeaders pulumi.StringPtrInput
	// Remote file inclusion attack threshold.
	RfiScoreThreshold pulumi.IntPtrInput
	// The Web Application Firewall's rule exclusions. Defined below
	RuleExclusions ServiceWafConfigurationRuleExclusionArrayInput
	// The Web Application Firewall's active rules. Defined below
	Rules ServiceWafConfigurationRuleArrayInput
	// Session fixation attack threshold.
	SessionFixationScoreThreshold pulumi.IntPtrInput
	// SQL injection attack threshold.
	SqlInjectionScoreThreshold pulumi.IntPtrInput
	// The maximum size of argument names and values.
	TotalArgLength pulumi.IntPtrInput
	// The ID of the Web Application Firewall that the configuration belongs to.
	WafId pulumi.StringInput
	// Score value to add for warning anomalies.
	WarningAnomalyScore pulumi.IntPtrInput
	// XSS attack threshold.
	XssScoreThreshold pulumi.IntPtrInput
}

func (ServiceWafConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceWafConfigurationArgs)(nil)).Elem()
}

type ServiceWafConfigurationInput interface {
	pulumi.Input

	ToServiceWafConfigurationOutput() ServiceWafConfigurationOutput
	ToServiceWafConfigurationOutputWithContext(ctx context.Context) ServiceWafConfigurationOutput
}

func (*ServiceWafConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceWafConfiguration)(nil))
}

func (i *ServiceWafConfiguration) ToServiceWafConfigurationOutput() ServiceWafConfigurationOutput {
	return i.ToServiceWafConfigurationOutputWithContext(context.Background())
}

func (i *ServiceWafConfiguration) ToServiceWafConfigurationOutputWithContext(ctx context.Context) ServiceWafConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceWafConfigurationOutput)
}

type ServiceWafConfigurationOutput struct {
	*pulumi.OutputState
}

func (ServiceWafConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceWafConfiguration)(nil))
}

func (o ServiceWafConfigurationOutput) ToServiceWafConfigurationOutput() ServiceWafConfigurationOutput {
	return o
}

func (o ServiceWafConfigurationOutput) ToServiceWafConfigurationOutputWithContext(ctx context.Context) ServiceWafConfigurationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ServiceWafConfigurationOutput{})
}
