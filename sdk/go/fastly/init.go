// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fastly

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-fastly/sdk/v11/go/fastly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "fastly:index/alert:Alert":
		r = &Alert{}
	case "fastly:index/configstore:Configstore":
		r = &Configstore{}
	case "fastly:index/configstoreEntries:ConfigstoreEntries":
		r = &ConfigstoreEntries{}
	case "fastly:index/customDashboard:CustomDashboard":
		r = &CustomDashboard{}
	case "fastly:index/domainV1:DomainV1":
		r = &DomainV1{}
	case "fastly:index/integration:Integration":
		r = &Integration{}
	case "fastly:index/kvstore:Kvstore":
		r = &Kvstore{}
	case "fastly:index/ngwafAccountList:NgwafAccountList":
		r = &NgwafAccountList{}
	case "fastly:index/ngwafAccountRule:NgwafAccountRule":
		r = &NgwafAccountRule{}
	case "fastly:index/ngwafAccountSignal:NgwafAccountSignal":
		r = &NgwafAccountSignal{}
	case "fastly:index/ngwafAlertDatadogIntegration:NgwafAlertDatadogIntegration":
		r = &NgwafAlertDatadogIntegration{}
	case "fastly:index/ngwafAlertJiraIntegration:NgwafAlertJiraIntegration":
		r = &NgwafAlertJiraIntegration{}
	case "fastly:index/ngwafAlertMailingListIntegration:NgwafAlertMailingListIntegration":
		r = &NgwafAlertMailingListIntegration{}
	case "fastly:index/ngwafAlertMicrosoftTeamsIntegration:NgwafAlertMicrosoftTeamsIntegration":
		r = &NgwafAlertMicrosoftTeamsIntegration{}
	case "fastly:index/ngwafAlertOpsgenieIntegration:NgwafAlertOpsgenieIntegration":
		r = &NgwafAlertOpsgenieIntegration{}
	case "fastly:index/ngwafAlertPagerdutyIntegration:NgwafAlertPagerdutyIntegration":
		r = &NgwafAlertPagerdutyIntegration{}
	case "fastly:index/ngwafAlertSlackIntegration:NgwafAlertSlackIntegration":
		r = &NgwafAlertSlackIntegration{}
	case "fastly:index/ngwafAlertWebhookIntegration:NgwafAlertWebhookIntegration":
		r = &NgwafAlertWebhookIntegration{}
	case "fastly:index/ngwafRedaction:NgwafRedaction":
		r = &NgwafRedaction{}
	case "fastly:index/ngwafThresholds:NgwafThresholds":
		r = &NgwafThresholds{}
	case "fastly:index/ngwafVirtualPatches:NgwafVirtualPatches":
		r = &NgwafVirtualPatches{}
	case "fastly:index/ngwafWorkspace:NgwafWorkspace":
		r = &NgwafWorkspace{}
	case "fastly:index/ngwafWorkspaceList:NgwafWorkspaceList":
		r = &NgwafWorkspaceList{}
	case "fastly:index/ngwafWorkspaceRule:NgwafWorkspaceRule":
		r = &NgwafWorkspaceRule{}
	case "fastly:index/ngwafWorkspaceSignal:NgwafWorkspaceSignal":
		r = &NgwafWorkspaceSignal{}
	case "fastly:index/objectStorageAccessKeys:ObjectStorageAccessKeys":
		r = &ObjectStorageAccessKeys{}
	case "fastly:index/secretstore:Secretstore":
		r = &Secretstore{}
	case "fastly:index/serviceACLEntries:ServiceACLEntries":
		r = &ServiceACLEntries{}
	case "fastly:index/serviceAuthorization:ServiceAuthorization":
		r = &ServiceAuthorization{}
	case "fastly:index/serviceCompute:ServiceCompute":
		r = &ServiceCompute{}
	case "fastly:index/serviceDictionaryItems:ServiceDictionaryItems":
		r = &ServiceDictionaryItems{}
	case "fastly:index/serviceDynamicSnippetContent:ServiceDynamicSnippetContent":
		r = &ServiceDynamicSnippetContent{}
	case "fastly:index/serviceVcl:ServiceVcl":
		r = &ServiceVcl{}
	case "fastly:index/tlsActivation:TlsActivation":
		r = &TlsActivation{}
	case "fastly:index/tlsCertificate:TlsCertificate":
		r = &TlsCertificate{}
	case "fastly:index/tlsMutualAuthentication:TlsMutualAuthentication":
		r = &TlsMutualAuthentication{}
	case "fastly:index/tlsPlatformCertificate:TlsPlatformCertificate":
		r = &TlsPlatformCertificate{}
	case "fastly:index/tlsPrivateKey:TlsPrivateKey":
		r = &TlsPrivateKey{}
	case "fastly:index/tlsSubscription:TlsSubscription":
		r = &TlsSubscription{}
	case "fastly:index/tlsSubscriptionValidation:TlsSubscriptionValidation":
		r = &TlsSubscriptionValidation{}
	case "fastly:index/user:User":
		r = &User{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:fastly" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"fastly",
		"index/alert",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/configstore",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/configstoreEntries",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/customDashboard",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/domainV1",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/integration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/kvstore",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafAccountList",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafAccountRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafAccountSignal",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafAlertDatadogIntegration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafAlertJiraIntegration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafAlertMailingListIntegration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafAlertMicrosoftTeamsIntegration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafAlertOpsgenieIntegration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafAlertPagerdutyIntegration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafAlertSlackIntegration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafAlertWebhookIntegration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafRedaction",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafThresholds",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafVirtualPatches",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafWorkspace",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafWorkspaceList",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafWorkspaceRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/ngwafWorkspaceSignal",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/objectStorageAccessKeys",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/secretstore",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/serviceACLEntries",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/serviceAuthorization",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/serviceCompute",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/serviceDictionaryItems",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/serviceDynamicSnippetContent",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/serviceVcl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/tlsActivation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/tlsCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/tlsMutualAuthentication",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/tlsPlatformCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/tlsPrivateKey",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/tlsSubscription",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/tlsSubscriptionValidation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fastly",
		"index/user",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"fastly",
		&pkg{version},
	)
}
