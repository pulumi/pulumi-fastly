// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fastly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-fastly/sdk/v11/go/fastly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides Fastly Next-Gen WAF Alert Mailing List integrations, which provide a connection to Mailing List.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fastly/sdk/v11/go/fastly"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fastly.NewNgwafAlertJiraIntegration(ctx, "demo_jira_alert", &fastly.NgwafAlertJiraIntegrationArgs{
//				Description: pulumi.String("A description"),
//				Host:        pulumi.String("https://mycompany.atlassian.net"),
//				IssueType:   pulumi.String("task"),
//				Key:         pulumi.String("a1b2c3d4e5f6789012345678901234567"),
//				Project:     pulumi.String("test"),
//				Username:    pulumi.String("user"),
//				WorkspaceId: pulumi.Any(demo.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Fastly Next-Gen WAF Alert Mailing List integrations can be imported using their ID and the ID of the workspace they belong to.
//
// ```sh
// $ pulumi import fastly:index/ngwafAlertMailingListIntegration:NgwafAlertMailingListIntegration example <workspace_id>/<alert_id>
// ```
type NgwafAlertMailingListIntegration struct {
	pulumi.CustomResourceState

	// Email address that the alert will use.
	Address pulumi.StringOutput `pulumi:"address"`
	// The description of the alert.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the workspace.
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewNgwafAlertMailingListIntegration registers a new resource with the given unique name, arguments, and options.
func NewNgwafAlertMailingListIntegration(ctx *pulumi.Context,
	name string, args *NgwafAlertMailingListIntegrationArgs, opts ...pulumi.ResourceOption) (*NgwafAlertMailingListIntegration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Address == nil {
		return nil, errors.New("invalid value for required argument 'Address'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NgwafAlertMailingListIntegration
	err := ctx.RegisterResource("fastly:index/ngwafAlertMailingListIntegration:NgwafAlertMailingListIntegration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNgwafAlertMailingListIntegration gets an existing NgwafAlertMailingListIntegration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNgwafAlertMailingListIntegration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NgwafAlertMailingListIntegrationState, opts ...pulumi.ResourceOption) (*NgwafAlertMailingListIntegration, error) {
	var resource NgwafAlertMailingListIntegration
	err := ctx.ReadResource("fastly:index/ngwafAlertMailingListIntegration:NgwafAlertMailingListIntegration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NgwafAlertMailingListIntegration resources.
type ngwafAlertMailingListIntegrationState struct {
	// Email address that the alert will use.
	Address *string `pulumi:"address"`
	// The description of the alert.
	Description *string `pulumi:"description"`
	// The ID of the workspace.
	WorkspaceId *string `pulumi:"workspaceId"`
}

type NgwafAlertMailingListIntegrationState struct {
	// Email address that the alert will use.
	Address pulumi.StringPtrInput
	// The description of the alert.
	Description pulumi.StringPtrInput
	// The ID of the workspace.
	WorkspaceId pulumi.StringPtrInput
}

func (NgwafAlertMailingListIntegrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*ngwafAlertMailingListIntegrationState)(nil)).Elem()
}

type ngwafAlertMailingListIntegrationArgs struct {
	// Email address that the alert will use.
	Address string `pulumi:"address"`
	// The description of the alert.
	Description *string `pulumi:"description"`
	// The ID of the workspace.
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a NgwafAlertMailingListIntegration resource.
type NgwafAlertMailingListIntegrationArgs struct {
	// Email address that the alert will use.
	Address pulumi.StringInput
	// The description of the alert.
	Description pulumi.StringPtrInput
	// The ID of the workspace.
	WorkspaceId pulumi.StringInput
}

func (NgwafAlertMailingListIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ngwafAlertMailingListIntegrationArgs)(nil)).Elem()
}

type NgwafAlertMailingListIntegrationInput interface {
	pulumi.Input

	ToNgwafAlertMailingListIntegrationOutput() NgwafAlertMailingListIntegrationOutput
	ToNgwafAlertMailingListIntegrationOutputWithContext(ctx context.Context) NgwafAlertMailingListIntegrationOutput
}

func (*NgwafAlertMailingListIntegration) ElementType() reflect.Type {
	return reflect.TypeOf((**NgwafAlertMailingListIntegration)(nil)).Elem()
}

func (i *NgwafAlertMailingListIntegration) ToNgwafAlertMailingListIntegrationOutput() NgwafAlertMailingListIntegrationOutput {
	return i.ToNgwafAlertMailingListIntegrationOutputWithContext(context.Background())
}

func (i *NgwafAlertMailingListIntegration) ToNgwafAlertMailingListIntegrationOutputWithContext(ctx context.Context) NgwafAlertMailingListIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgwafAlertMailingListIntegrationOutput)
}

// NgwafAlertMailingListIntegrationArrayInput is an input type that accepts NgwafAlertMailingListIntegrationArray and NgwafAlertMailingListIntegrationArrayOutput values.
// You can construct a concrete instance of `NgwafAlertMailingListIntegrationArrayInput` via:
//
//	NgwafAlertMailingListIntegrationArray{ NgwafAlertMailingListIntegrationArgs{...} }
type NgwafAlertMailingListIntegrationArrayInput interface {
	pulumi.Input

	ToNgwafAlertMailingListIntegrationArrayOutput() NgwafAlertMailingListIntegrationArrayOutput
	ToNgwafAlertMailingListIntegrationArrayOutputWithContext(context.Context) NgwafAlertMailingListIntegrationArrayOutput
}

type NgwafAlertMailingListIntegrationArray []NgwafAlertMailingListIntegrationInput

func (NgwafAlertMailingListIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NgwafAlertMailingListIntegration)(nil)).Elem()
}

func (i NgwafAlertMailingListIntegrationArray) ToNgwafAlertMailingListIntegrationArrayOutput() NgwafAlertMailingListIntegrationArrayOutput {
	return i.ToNgwafAlertMailingListIntegrationArrayOutputWithContext(context.Background())
}

func (i NgwafAlertMailingListIntegrationArray) ToNgwafAlertMailingListIntegrationArrayOutputWithContext(ctx context.Context) NgwafAlertMailingListIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgwafAlertMailingListIntegrationArrayOutput)
}

// NgwafAlertMailingListIntegrationMapInput is an input type that accepts NgwafAlertMailingListIntegrationMap and NgwafAlertMailingListIntegrationMapOutput values.
// You can construct a concrete instance of `NgwafAlertMailingListIntegrationMapInput` via:
//
//	NgwafAlertMailingListIntegrationMap{ "key": NgwafAlertMailingListIntegrationArgs{...} }
type NgwafAlertMailingListIntegrationMapInput interface {
	pulumi.Input

	ToNgwafAlertMailingListIntegrationMapOutput() NgwafAlertMailingListIntegrationMapOutput
	ToNgwafAlertMailingListIntegrationMapOutputWithContext(context.Context) NgwafAlertMailingListIntegrationMapOutput
}

type NgwafAlertMailingListIntegrationMap map[string]NgwafAlertMailingListIntegrationInput

func (NgwafAlertMailingListIntegrationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NgwafAlertMailingListIntegration)(nil)).Elem()
}

func (i NgwafAlertMailingListIntegrationMap) ToNgwafAlertMailingListIntegrationMapOutput() NgwafAlertMailingListIntegrationMapOutput {
	return i.ToNgwafAlertMailingListIntegrationMapOutputWithContext(context.Background())
}

func (i NgwafAlertMailingListIntegrationMap) ToNgwafAlertMailingListIntegrationMapOutputWithContext(ctx context.Context) NgwafAlertMailingListIntegrationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgwafAlertMailingListIntegrationMapOutput)
}

type NgwafAlertMailingListIntegrationOutput struct{ *pulumi.OutputState }

func (NgwafAlertMailingListIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NgwafAlertMailingListIntegration)(nil)).Elem()
}

func (o NgwafAlertMailingListIntegrationOutput) ToNgwafAlertMailingListIntegrationOutput() NgwafAlertMailingListIntegrationOutput {
	return o
}

func (o NgwafAlertMailingListIntegrationOutput) ToNgwafAlertMailingListIntegrationOutputWithContext(ctx context.Context) NgwafAlertMailingListIntegrationOutput {
	return o
}

// Email address that the alert will use.
func (o NgwafAlertMailingListIntegrationOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *NgwafAlertMailingListIntegration) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

// The description of the alert.
func (o NgwafAlertMailingListIntegrationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NgwafAlertMailingListIntegration) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the workspace.
func (o NgwafAlertMailingListIntegrationOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *NgwafAlertMailingListIntegration) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type NgwafAlertMailingListIntegrationArrayOutput struct{ *pulumi.OutputState }

func (NgwafAlertMailingListIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NgwafAlertMailingListIntegration)(nil)).Elem()
}

func (o NgwafAlertMailingListIntegrationArrayOutput) ToNgwafAlertMailingListIntegrationArrayOutput() NgwafAlertMailingListIntegrationArrayOutput {
	return o
}

func (o NgwafAlertMailingListIntegrationArrayOutput) ToNgwafAlertMailingListIntegrationArrayOutputWithContext(ctx context.Context) NgwafAlertMailingListIntegrationArrayOutput {
	return o
}

func (o NgwafAlertMailingListIntegrationArrayOutput) Index(i pulumi.IntInput) NgwafAlertMailingListIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NgwafAlertMailingListIntegration {
		return vs[0].([]*NgwafAlertMailingListIntegration)[vs[1].(int)]
	}).(NgwafAlertMailingListIntegrationOutput)
}

type NgwafAlertMailingListIntegrationMapOutput struct{ *pulumi.OutputState }

func (NgwafAlertMailingListIntegrationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NgwafAlertMailingListIntegration)(nil)).Elem()
}

func (o NgwafAlertMailingListIntegrationMapOutput) ToNgwafAlertMailingListIntegrationMapOutput() NgwafAlertMailingListIntegrationMapOutput {
	return o
}

func (o NgwafAlertMailingListIntegrationMapOutput) ToNgwafAlertMailingListIntegrationMapOutputWithContext(ctx context.Context) NgwafAlertMailingListIntegrationMapOutput {
	return o
}

func (o NgwafAlertMailingListIntegrationMapOutput) MapIndex(k pulumi.StringInput) NgwafAlertMailingListIntegrationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NgwafAlertMailingListIntegration {
		return vs[0].(map[string]*NgwafAlertMailingListIntegration)[vs[1].(string)]
	}).(NgwafAlertMailingListIntegrationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NgwafAlertMailingListIntegrationInput)(nil)).Elem(), &NgwafAlertMailingListIntegration{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgwafAlertMailingListIntegrationArrayInput)(nil)).Elem(), NgwafAlertMailingListIntegrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgwafAlertMailingListIntegrationMapInput)(nil)).Elem(), NgwafAlertMailingListIntegrationMap{})
	pulumi.RegisterOutputType(NgwafAlertMailingListIntegrationOutput{})
	pulumi.RegisterOutputType(NgwafAlertMailingListIntegrationArrayOutput{})
	pulumi.RegisterOutputType(NgwafAlertMailingListIntegrationMapOutput{})
}
