# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetNgwafWorkspacesResult',
    'AwaitableGetNgwafWorkspacesResult',
    'get_ngwaf_workspaces',
    'get_ngwaf_workspaces_output',
]

@pulumi.output_type
class GetNgwafWorkspacesResult:
    """
    A collection of values returned by getNgwafWorkspaces.
    """
    def __init__(__self__, id=None, workspaces=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if workspaces and not isinstance(workspaces, list):
            raise TypeError("Expected argument 'workspaces' to be a list")
        pulumi.set(__self__, "workspaces", workspaces)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def workspaces(self) -> Sequence['outputs.GetNgwafWorkspacesWorkspaceResult']:
        """
        List of all workspaces.
        """
        return pulumi.get(self, "workspaces")


class AwaitableGetNgwafWorkspacesResult(GetNgwafWorkspacesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNgwafWorkspacesResult(
            id=self.id,
            workspaces=self.workspaces)


def get_ngwaf_workspaces(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNgwafWorkspacesResult:
    """
    Use this data source to get a list of [Fastly Next-Gen WAF Workspaces][1].
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('fastly:index/getNgwafWorkspaces:getNgwafWorkspaces', __args__, opts=opts, typ=GetNgwafWorkspacesResult).value

    return AwaitableGetNgwafWorkspacesResult(
        id=pulumi.get(__ret__, 'id'),
        workspaces=pulumi.get(__ret__, 'workspaces'))
def get_ngwaf_workspaces_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetNgwafWorkspacesResult]:
    """
    Use this data source to get a list of [Fastly Next-Gen WAF Workspaces][1].
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('fastly:index/getNgwafWorkspaces:getNgwafWorkspaces', __args__, opts=opts, typ=GetNgwafWorkspacesResult)
    return __ret__.apply(lambda __response__: GetNgwafWorkspacesResult(
        id=pulumi.get(__response__, 'id'),
        workspaces=pulumi.get(__response__, 'workspaces')))
