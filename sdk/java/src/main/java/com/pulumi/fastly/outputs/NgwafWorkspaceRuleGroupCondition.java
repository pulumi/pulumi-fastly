// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.fastly.outputs.NgwafWorkspaceRuleGroupConditionCondition;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class NgwafWorkspaceRuleGroupCondition {
    /**
     * @return A list of nested conditions in this group.
     * 
     */
    private List<NgwafWorkspaceRuleGroupConditionCondition> conditions;
    /**
     * @return Logical operator for the group. Accepted values are `any` and `all`.
     * 
     */
    private String groupOperator;

    private NgwafWorkspaceRuleGroupCondition() {}
    /**
     * @return A list of nested conditions in this group.
     * 
     */
    public List<NgwafWorkspaceRuleGroupConditionCondition> conditions() {
        return this.conditions;
    }
    /**
     * @return Logical operator for the group. Accepted values are `any` and `all`.
     * 
     */
    public String groupOperator() {
        return this.groupOperator;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NgwafWorkspaceRuleGroupCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<NgwafWorkspaceRuleGroupConditionCondition> conditions;
        private String groupOperator;
        public Builder() {}
        public Builder(NgwafWorkspaceRuleGroupCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditions = defaults.conditions;
    	      this.groupOperator = defaults.groupOperator;
        }

        @CustomType.Setter
        public Builder conditions(List<NgwafWorkspaceRuleGroupConditionCondition> conditions) {
            if (conditions == null) {
              throw new MissingRequiredPropertyException("NgwafWorkspaceRuleGroupCondition", "conditions");
            }
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(NgwafWorkspaceRuleGroupConditionCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder groupOperator(String groupOperator) {
            if (groupOperator == null) {
              throw new MissingRequiredPropertyException("NgwafWorkspaceRuleGroupCondition", "groupOperator");
            }
            this.groupOperator = groupOperator;
            return this;
        }
        public NgwafWorkspaceRuleGroupCondition build() {
            final var _resultValue = new NgwafWorkspaceRuleGroupCondition();
            _resultValue.conditions = conditions;
            _resultValue.groupOperator = groupOperator;
            return _resultValue;
        }
    }
}
