// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceVclCondition {
    /**
     * @return The unique name for the condition. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    private String name;
    /**
     * @return A number used to determine the order in which multiple conditions execute. Lower numbers execute first. Default `10`
     * 
     */
    private @Nullable Integer priority;
    /**
     * @return The statement used to determine if the condition is met
     * 
     */
    private String statement;
    /**
     * @return Type of condition, either `REQUEST` (req), `RESPONSE` (req, resp), or `CACHE` (req, beresp)
     * 
     */
    private String type;

    private ServiceVclCondition() {}
    /**
     * @return The unique name for the condition. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A number used to determine the order in which multiple conditions execute. Lower numbers execute first. Default `10`
     * 
     */
    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }
    /**
     * @return The statement used to determine if the condition is met
     * 
     */
    public String statement() {
        return this.statement;
    }
    /**
     * @return Type of condition, either `REQUEST` (req), `RESPONSE` (req, resp), or `CACHE` (req, beresp)
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceVclCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private @Nullable Integer priority;
        private String statement;
        private String type;
        public Builder() {}
        public Builder(ServiceVclCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.statement = defaults.statement;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ServiceVclCondition", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder priority(@Nullable Integer priority) {

            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder statement(String statement) {
            if (statement == null) {
              throw new MissingRequiredPropertyException("ServiceVclCondition", "statement");
            }
            this.statement = statement;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("ServiceVclCondition", "type");
            }
            this.type = type;
            return this;
        }
        public ServiceVclCondition build() {
            final var _resultValue = new ServiceVclCondition();
            _resultValue.name = name;
            _resultValue.priority = priority;
            _resultValue.statement = statement;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
