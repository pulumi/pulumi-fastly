// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTlsActivationResult {
    /**
     * @return ID of the TLS Certificate used.
     * 
     */
    private String certificateId;
    /**
     * @return ID of the TLS Configuration used.
     * 
     */
    private String configurationId;
    /**
     * @return Timestamp (GMT) when TLS was enabled.
     * 
     */
    private String createdAt;
    /**
     * @return Domain that TLS was enabled on.
     * 
     */
    private String domain;
    /**
     * @return Fastly Activation ID. Conflicts with all other filters.
     * 
     */
    private String id;

    private GetTlsActivationResult() {}
    /**
     * @return ID of the TLS Certificate used.
     * 
     */
    public String certificateId() {
        return this.certificateId;
    }
    /**
     * @return ID of the TLS Configuration used.
     * 
     */
    public String configurationId() {
        return this.configurationId;
    }
    /**
     * @return Timestamp (GMT) when TLS was enabled.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return Domain that TLS was enabled on.
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return Fastly Activation ID. Conflicts with all other filters.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTlsActivationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certificateId;
        private String configurationId;
        private String createdAt;
        private String domain;
        private String id;
        public Builder() {}
        public Builder(GetTlsActivationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateId = defaults.certificateId;
    	      this.configurationId = defaults.configurationId;
    	      this.createdAt = defaults.createdAt;
    	      this.domain = defaults.domain;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder certificateId(String certificateId) {
            if (certificateId == null) {
              throw new MissingRequiredPropertyException("GetTlsActivationResult", "certificateId");
            }
            this.certificateId = certificateId;
            return this;
        }
        @CustomType.Setter
        public Builder configurationId(String configurationId) {
            if (configurationId == null) {
              throw new MissingRequiredPropertyException("GetTlsActivationResult", "configurationId");
            }
            this.configurationId = configurationId;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetTlsActivationResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder domain(String domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("GetTlsActivationResult", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTlsActivationResult", "id");
            }
            this.id = id;
            return this;
        }
        public GetTlsActivationResult build() {
            final var _resultValue = new GetTlsActivationResult();
            _resultValue.certificateId = certificateId;
            _resultValue.configurationId = configurationId;
            _resultValue.createdAt = createdAt;
            _resultValue.domain = domain;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
