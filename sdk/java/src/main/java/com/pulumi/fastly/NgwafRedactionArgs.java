// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class NgwafRedactionArgs extends com.pulumi.resources.ResourceArgs {

    public static final NgwafRedactionArgs Empty = new NgwafRedactionArgs();

    /**
     * The name of the field that should be redacted.
     * 
     */
    @Import(name="field", required=true)
    private Output<String> field;

    /**
     * @return The name of the field that should be redacted.
     * 
     */
    public Output<String> field() {
        return this.field;
    }

    /**
     * The type of field that is being redacted. Accepted values are `requestParameter`, `requestHeader`, and `responseHeader`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of field that is being redacted. Accepted values are `requestParameter`, `requestHeader`, and `responseHeader`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * The ID of the workspace.
     * 
     */
    @Import(name="workspaceId", required=true)
    private Output<String> workspaceId;

    /**
     * @return The ID of the workspace.
     * 
     */
    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    private NgwafRedactionArgs() {}

    private NgwafRedactionArgs(NgwafRedactionArgs $) {
        this.field = $.field;
        this.type = $.type;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NgwafRedactionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NgwafRedactionArgs $;

        public Builder() {
            $ = new NgwafRedactionArgs();
        }

        public Builder(NgwafRedactionArgs defaults) {
            $ = new NgwafRedactionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param field The name of the field that should be redacted.
         * 
         * @return builder
         * 
         */
        public Builder field(Output<String> field) {
            $.field = field;
            return this;
        }

        /**
         * @param field The name of the field that should be redacted.
         * 
         * @return builder
         * 
         */
        public Builder field(String field) {
            return field(Output.of(field));
        }

        /**
         * @param type The type of field that is being redacted. Accepted values are `requestParameter`, `requestHeader`, and `responseHeader`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of field that is being redacted. Accepted values are `requestParameter`, `requestHeader`, and `responseHeader`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param workspaceId The ID of the workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId The ID of the workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public NgwafRedactionArgs build() {
            if ($.field == null) {
                throw new MissingRequiredPropertyException("NgwafRedactionArgs", "field");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("NgwafRedactionArgs", "type");
            }
            if ($.workspaceId == null) {
                throw new MissingRequiredPropertyException("NgwafRedactionArgs", "workspaceId");
            }
            return $;
        }
    }

}
