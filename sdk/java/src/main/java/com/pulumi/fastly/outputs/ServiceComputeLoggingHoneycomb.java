// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ServiceComputeLoggingHoneycomb {
    /**
     * @return The Honeycomb Dataset you want to log to
     * 
     */
    private String dataset;
    /**
     * @return The unique name of the Honeycomb logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    private String name;
    /**
     * @return The Write Key from the Account page of your Honeycomb account
     * 
     */
    private String token;

    private ServiceComputeLoggingHoneycomb() {}
    /**
     * @return The Honeycomb Dataset you want to log to
     * 
     */
    public String dataset() {
        return this.dataset;
    }
    /**
     * @return The unique name of the Honeycomb logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Write Key from the Account page of your Honeycomb account
     * 
     */
    public String token() {
        return this.token;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceComputeLoggingHoneycomb defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dataset;
        private String name;
        private String token;
        public Builder() {}
        public Builder(ServiceComputeLoggingHoneycomb defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataset = defaults.dataset;
    	      this.name = defaults.name;
    	      this.token = defaults.token;
        }

        @CustomType.Setter
        public Builder dataset(String dataset) {
            this.dataset = Objects.requireNonNull(dataset);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder token(String token) {
            this.token = Objects.requireNonNull(token);
            return this;
        }
        public ServiceComputeLoggingHoneycomb build() {
            final var o = new ServiceComputeLoggingHoneycomb();
            o.dataset = dataset;
            o.name = name;
            o.token = token;
            return o;
        }
    }
}
