// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NgwafWorkspaceSignalState extends com.pulumi.resources.ResourceArgs {

    public static final NgwafWorkspaceSignalState Empty = new NgwafWorkspaceSignalState();

    /**
     * The description of the signal.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the signal.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the signal. Special characters and periods are not accepted.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the signal. Special characters and periods are not accepted.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The generated reference ID of the signal.
     * 
     */
    @Import(name="referenceId")
    private @Nullable Output<String> referenceId;

    /**
     * @return The generated reference ID of the signal.
     * 
     */
    public Optional<Output<String>> referenceId() {
        return Optional.ofNullable(this.referenceId);
    }

    /**
     * The ID of the workspace.
     * 
     */
    @Import(name="workspaceId")
    private @Nullable Output<String> workspaceId;

    /**
     * @return The ID of the workspace.
     * 
     */
    public Optional<Output<String>> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private NgwafWorkspaceSignalState() {}

    private NgwafWorkspaceSignalState(NgwafWorkspaceSignalState $) {
        this.description = $.description;
        this.name = $.name;
        this.referenceId = $.referenceId;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NgwafWorkspaceSignalState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NgwafWorkspaceSignalState $;

        public Builder() {
            $ = new NgwafWorkspaceSignalState();
        }

        public Builder(NgwafWorkspaceSignalState defaults) {
            $ = new NgwafWorkspaceSignalState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the signal.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the signal.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The name of the signal. Special characters and periods are not accepted.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the signal. Special characters and periods are not accepted.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param referenceId The generated reference ID of the signal.
         * 
         * @return builder
         * 
         */
        public Builder referenceId(@Nullable Output<String> referenceId) {
            $.referenceId = referenceId;
            return this;
        }

        /**
         * @param referenceId The generated reference ID of the signal.
         * 
         * @return builder
         * 
         */
        public Builder referenceId(String referenceId) {
            return referenceId(Output.of(referenceId));
        }

        /**
         * @param workspaceId The ID of the workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId The ID of the workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public NgwafWorkspaceSignalState build() {
            return $;
        }
    }

}
