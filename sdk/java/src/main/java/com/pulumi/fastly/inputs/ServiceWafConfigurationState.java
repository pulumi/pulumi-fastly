// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.fastly.inputs.ServiceWafConfigurationRuleArgs;
import com.pulumi.fastly.inputs.ServiceWafConfigurationRuleExclusionArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceWafConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final ServiceWafConfigurationState Empty = new ServiceWafConfigurationState();

    /**
     * Conditionally prevents a new firewall version from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`
     * 
     */
    @Import(name="activate")
    private @Nullable Output<Boolean> activate;

    /**
     * @return Conditionally prevents a new firewall version from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`
     * 
     */
    public Optional<Output<Boolean>> activate() {
        return Optional.ofNullable(this.activate);
    }

    /**
     * Whether a specific firewall version is currently deployed
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    /**
     * @return Whether a specific firewall version is currently deployed
     * 
     */
    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * Allowed HTTP versions
     * 
     */
    @Import(name="allowedHttpVersions")
    private @Nullable Output<String> allowedHttpVersions;

    /**
     * @return Allowed HTTP versions
     * 
     */
    public Optional<Output<String>> allowedHttpVersions() {
        return Optional.ofNullable(this.allowedHttpVersions);
    }

    /**
     * A space-separated list of HTTP method names
     * 
     */
    @Import(name="allowedMethods")
    private @Nullable Output<String> allowedMethods;

    /**
     * @return A space-separated list of HTTP method names
     * 
     */
    public Optional<Output<String>> allowedMethods() {
        return Optional.ofNullable(this.allowedMethods);
    }

    /**
     * Allowed request content types
     * 
     */
    @Import(name="allowedRequestContentType")
    private @Nullable Output<String> allowedRequestContentType;

    /**
     * @return Allowed request content types
     * 
     */
    public Optional<Output<String>> allowedRequestContentType() {
        return Optional.ofNullable(this.allowedRequestContentType);
    }

    /**
     * Allowed request content type charset
     * 
     */
    @Import(name="allowedRequestContentTypeCharset")
    private @Nullable Output<String> allowedRequestContentTypeCharset;

    /**
     * @return Allowed request content type charset
     * 
     */
    public Optional<Output<String>> allowedRequestContentTypeCharset() {
        return Optional.ofNullable(this.allowedRequestContentTypeCharset);
    }

    /**
     * The maximum number of arguments allowed
     * 
     */
    @Import(name="argLength")
    private @Nullable Output<Integer> argLength;

    /**
     * @return The maximum number of arguments allowed
     * 
     */
    public Optional<Output<Integer>> argLength() {
        return Optional.ofNullable(this.argLength);
    }

    /**
     * The maximum allowed argument name length
     * 
     */
    @Import(name="argNameLength")
    private @Nullable Output<Integer> argNameLength;

    /**
     * @return The maximum allowed argument name length
     * 
     */
    public Optional<Output<Integer>> argNameLength() {
        return Optional.ofNullable(this.argNameLength);
    }

    /**
     * The latest cloned firewall version by the provider
     * 
     */
    @Import(name="clonedVersion")
    private @Nullable Output<Integer> clonedVersion;

    /**
     * @return The latest cloned firewall version by the provider
     * 
     */
    public Optional<Output<Integer>> clonedVersion() {
        return Optional.ofNullable(this.clonedVersion);
    }

    /**
     * The maximum allowed size of all files
     * 
     */
    @Import(name="combinedFileSizes")
    private @Nullable Output<Integer> combinedFileSizes;

    /**
     * @return The maximum allowed size of all files
     * 
     */
    public Optional<Output<Integer>> combinedFileSizes() {
        return Optional.ofNullable(this.combinedFileSizes);
    }

    /**
     * Score value to add for critical anomalies
     * 
     */
    @Import(name="criticalAnomalyScore")
    private @Nullable Output<Integer> criticalAnomalyScore;

    /**
     * @return Score value to add for critical anomalies
     * 
     */
    public Optional<Output<Integer>> criticalAnomalyScore() {
        return Optional.ofNullable(this.criticalAnomalyScore);
    }

    /**
     * CRS validate UTF8 encoding
     * 
     */
    @Import(name="crsValidateUtf8Encoding")
    private @Nullable Output<Boolean> crsValidateUtf8Encoding;

    /**
     * @return CRS validate UTF8 encoding
     * 
     */
    public Optional<Output<Boolean>> crsValidateUtf8Encoding() {
        return Optional.ofNullable(this.crsValidateUtf8Encoding);
    }

    /**
     * Score value to add for error anomalies
     * 
     */
    @Import(name="errorAnomalyScore")
    private @Nullable Output<Integer> errorAnomalyScore;

    /**
     * @return Score value to add for error anomalies
     * 
     */
    public Optional<Output<Integer>> errorAnomalyScore() {
        return Optional.ofNullable(this.errorAnomalyScore);
    }

    /**
     * A space-separated list of country codes in ISO 3166-1 (two-letter) format
     * 
     */
    @Import(name="highRiskCountryCodes")
    private @Nullable Output<String> highRiskCountryCodes;

    /**
     * @return A space-separated list of country codes in ISO 3166-1 (two-letter) format
     * 
     */
    public Optional<Output<String>> highRiskCountryCodes() {
        return Optional.ofNullable(this.highRiskCountryCodes);
    }

    /**
     * HTTP violation threshold
     * 
     */
    @Import(name="httpViolationScoreThreshold")
    private @Nullable Output<Integer> httpViolationScoreThreshold;

    /**
     * @return HTTP violation threshold
     * 
     */
    public Optional<Output<Integer>> httpViolationScoreThreshold() {
        return Optional.ofNullable(this.httpViolationScoreThreshold);
    }

    /**
     * Inbound anomaly threshold
     * 
     */
    @Import(name="inboundAnomalyScoreThreshold")
    private @Nullable Output<Integer> inboundAnomalyScoreThreshold;

    /**
     * @return Inbound anomaly threshold
     * 
     */
    public Optional<Output<Integer>> inboundAnomalyScoreThreshold() {
        return Optional.ofNullable(this.inboundAnomalyScoreThreshold);
    }

    /**
     * Local file inclusion attack threshold
     * 
     */
    @Import(name="lfiScoreThreshold")
    private @Nullable Output<Integer> lfiScoreThreshold;

    /**
     * @return Local file inclusion attack threshold
     * 
     */
    public Optional<Output<Integer>> lfiScoreThreshold() {
        return Optional.ofNullable(this.lfiScoreThreshold);
    }

    /**
     * The maximum allowed file size, in bytes
     * 
     */
    @Import(name="maxFileSize")
    private @Nullable Output<Integer> maxFileSize;

    /**
     * @return The maximum allowed file size, in bytes
     * 
     */
    public Optional<Output<Integer>> maxFileSize() {
        return Optional.ofNullable(this.maxFileSize);
    }

    /**
     * The maximum number of arguments allowed
     * 
     */
    @Import(name="maxNumArgs")
    private @Nullable Output<Integer> maxNumArgs;

    /**
     * @return The maximum number of arguments allowed
     * 
     */
    public Optional<Output<Integer>> maxNumArgs() {
        return Optional.ofNullable(this.maxNumArgs);
    }

    /**
     * Score value to add for notice anomalies
     * 
     */
    @Import(name="noticeAnomalyScore")
    private @Nullable Output<Integer> noticeAnomalyScore;

    /**
     * @return Score value to add for notice anomalies
     * 
     */
    public Optional<Output<Integer>> noticeAnomalyScore() {
        return Optional.ofNullable(this.noticeAnomalyScore);
    }

    /**
     * The numeric ID assigned to the WAF Rule Exclusion
     * 
     */
    @Import(name="number")
    private @Nullable Output<Integer> number;

    /**
     * @return The numeric ID assigned to the WAF Rule Exclusion
     * 
     */
    public Optional<Output<Integer>> number() {
        return Optional.ofNullable(this.number);
    }

    /**
     * The configured paranoia level
     * 
     */
    @Import(name="paranoiaLevel")
    private @Nullable Output<Integer> paranoiaLevel;

    /**
     * @return The configured paranoia level
     * 
     */
    public Optional<Output<Integer>> paranoiaLevel() {
        return Optional.ofNullable(this.paranoiaLevel);
    }

    /**
     * PHP injection threshold
     * 
     */
    @Import(name="phpInjectionScoreThreshold")
    private @Nullable Output<Integer> phpInjectionScoreThreshold;

    /**
     * @return PHP injection threshold
     * 
     */
    public Optional<Output<Integer>> phpInjectionScoreThreshold() {
        return Optional.ofNullable(this.phpInjectionScoreThreshold);
    }

    /**
     * Remote code execution threshold
     * 
     */
    @Import(name="rceScoreThreshold")
    private @Nullable Output<Integer> rceScoreThreshold;

    /**
     * @return Remote code execution threshold
     * 
     */
    public Optional<Output<Integer>> rceScoreThreshold() {
        return Optional.ofNullable(this.rceScoreThreshold);
    }

    /**
     * A space-separated list of allowed file extensions
     * 
     */
    @Import(name="restrictedExtensions")
    private @Nullable Output<String> restrictedExtensions;

    /**
     * @return A space-separated list of allowed file extensions
     * 
     */
    public Optional<Output<String>> restrictedExtensions() {
        return Optional.ofNullable(this.restrictedExtensions);
    }

    /**
     * A space-separated list of allowed header names
     * 
     */
    @Import(name="restrictedHeaders")
    private @Nullable Output<String> restrictedHeaders;

    /**
     * @return A space-separated list of allowed header names
     * 
     */
    public Optional<Output<String>> restrictedHeaders() {
        return Optional.ofNullable(this.restrictedHeaders);
    }

    /**
     * Remote file inclusion attack threshold
     * 
     */
    @Import(name="rfiScoreThreshold")
    private @Nullable Output<Integer> rfiScoreThreshold;

    /**
     * @return Remote file inclusion attack threshold
     * 
     */
    public Optional<Output<Integer>> rfiScoreThreshold() {
        return Optional.ofNullable(this.rfiScoreThreshold);
    }

    @Import(name="ruleExclusions")
    private @Nullable Output<List<ServiceWafConfigurationRuleExclusionArgs>> ruleExclusions;

    public Optional<Output<List<ServiceWafConfigurationRuleExclusionArgs>>> ruleExclusions() {
        return Optional.ofNullable(this.ruleExclusions);
    }

    @Import(name="rules")
    private @Nullable Output<List<ServiceWafConfigurationRuleArgs>> rules;

    public Optional<Output<List<ServiceWafConfigurationRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * Session fixation attack threshold
     * 
     */
    @Import(name="sessionFixationScoreThreshold")
    private @Nullable Output<Integer> sessionFixationScoreThreshold;

    /**
     * @return Session fixation attack threshold
     * 
     */
    public Optional<Output<Integer>> sessionFixationScoreThreshold() {
        return Optional.ofNullable(this.sessionFixationScoreThreshold);
    }

    /**
     * SQL injection attack threshold
     * 
     */
    @Import(name="sqlInjectionScoreThreshold")
    private @Nullable Output<Integer> sqlInjectionScoreThreshold;

    /**
     * @return SQL injection attack threshold
     * 
     */
    public Optional<Output<Integer>> sqlInjectionScoreThreshold() {
        return Optional.ofNullable(this.sqlInjectionScoreThreshold);
    }

    /**
     * The maximum size of argument names and values
     * 
     */
    @Import(name="totalArgLength")
    private @Nullable Output<Integer> totalArgLength;

    /**
     * @return The maximum size of argument names and values
     * 
     */
    public Optional<Output<Integer>> totalArgLength() {
        return Optional.ofNullable(this.totalArgLength);
    }

    /**
     * The ID of the Web Application Firewall that the configuration belongs to
     * 
     */
    @Import(name="wafId")
    private @Nullable Output<String> wafId;

    /**
     * @return The ID of the Web Application Firewall that the configuration belongs to
     * 
     */
    public Optional<Output<String>> wafId() {
        return Optional.ofNullable(this.wafId);
    }

    /**
     * Score value to add for warning anomalies
     * 
     */
    @Import(name="warningAnomalyScore")
    private @Nullable Output<Integer> warningAnomalyScore;

    /**
     * @return Score value to add for warning anomalies
     * 
     */
    public Optional<Output<Integer>> warningAnomalyScore() {
        return Optional.ofNullable(this.warningAnomalyScore);
    }

    /**
     * XSS attack threshold
     * 
     */
    @Import(name="xssScoreThreshold")
    private @Nullable Output<Integer> xssScoreThreshold;

    /**
     * @return XSS attack threshold
     * 
     */
    public Optional<Output<Integer>> xssScoreThreshold() {
        return Optional.ofNullable(this.xssScoreThreshold);
    }

    private ServiceWafConfigurationState() {}

    private ServiceWafConfigurationState(ServiceWafConfigurationState $) {
        this.activate = $.activate;
        this.active = $.active;
        this.allowedHttpVersions = $.allowedHttpVersions;
        this.allowedMethods = $.allowedMethods;
        this.allowedRequestContentType = $.allowedRequestContentType;
        this.allowedRequestContentTypeCharset = $.allowedRequestContentTypeCharset;
        this.argLength = $.argLength;
        this.argNameLength = $.argNameLength;
        this.clonedVersion = $.clonedVersion;
        this.combinedFileSizes = $.combinedFileSizes;
        this.criticalAnomalyScore = $.criticalAnomalyScore;
        this.crsValidateUtf8Encoding = $.crsValidateUtf8Encoding;
        this.errorAnomalyScore = $.errorAnomalyScore;
        this.highRiskCountryCodes = $.highRiskCountryCodes;
        this.httpViolationScoreThreshold = $.httpViolationScoreThreshold;
        this.inboundAnomalyScoreThreshold = $.inboundAnomalyScoreThreshold;
        this.lfiScoreThreshold = $.lfiScoreThreshold;
        this.maxFileSize = $.maxFileSize;
        this.maxNumArgs = $.maxNumArgs;
        this.noticeAnomalyScore = $.noticeAnomalyScore;
        this.number = $.number;
        this.paranoiaLevel = $.paranoiaLevel;
        this.phpInjectionScoreThreshold = $.phpInjectionScoreThreshold;
        this.rceScoreThreshold = $.rceScoreThreshold;
        this.restrictedExtensions = $.restrictedExtensions;
        this.restrictedHeaders = $.restrictedHeaders;
        this.rfiScoreThreshold = $.rfiScoreThreshold;
        this.ruleExclusions = $.ruleExclusions;
        this.rules = $.rules;
        this.sessionFixationScoreThreshold = $.sessionFixationScoreThreshold;
        this.sqlInjectionScoreThreshold = $.sqlInjectionScoreThreshold;
        this.totalArgLength = $.totalArgLength;
        this.wafId = $.wafId;
        this.warningAnomalyScore = $.warningAnomalyScore;
        this.xssScoreThreshold = $.xssScoreThreshold;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceWafConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceWafConfigurationState $;

        public Builder() {
            $ = new ServiceWafConfigurationState();
        }

        public Builder(ServiceWafConfigurationState defaults) {
            $ = new ServiceWafConfigurationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param activate Conditionally prevents a new firewall version from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`
         * 
         * @return builder
         * 
         */
        public Builder activate(@Nullable Output<Boolean> activate) {
            $.activate = activate;
            return this;
        }

        /**
         * @param activate Conditionally prevents a new firewall version from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`
         * 
         * @return builder
         * 
         */
        public Builder activate(Boolean activate) {
            return activate(Output.of(activate));
        }

        /**
         * @param active Whether a specific firewall version is currently deployed
         * 
         * @return builder
         * 
         */
        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active Whether a specific firewall version is currently deployed
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param allowedHttpVersions Allowed HTTP versions
         * 
         * @return builder
         * 
         */
        public Builder allowedHttpVersions(@Nullable Output<String> allowedHttpVersions) {
            $.allowedHttpVersions = allowedHttpVersions;
            return this;
        }

        /**
         * @param allowedHttpVersions Allowed HTTP versions
         * 
         * @return builder
         * 
         */
        public Builder allowedHttpVersions(String allowedHttpVersions) {
            return allowedHttpVersions(Output.of(allowedHttpVersions));
        }

        /**
         * @param allowedMethods A space-separated list of HTTP method names
         * 
         * @return builder
         * 
         */
        public Builder allowedMethods(@Nullable Output<String> allowedMethods) {
            $.allowedMethods = allowedMethods;
            return this;
        }

        /**
         * @param allowedMethods A space-separated list of HTTP method names
         * 
         * @return builder
         * 
         */
        public Builder allowedMethods(String allowedMethods) {
            return allowedMethods(Output.of(allowedMethods));
        }

        /**
         * @param allowedRequestContentType Allowed request content types
         * 
         * @return builder
         * 
         */
        public Builder allowedRequestContentType(@Nullable Output<String> allowedRequestContentType) {
            $.allowedRequestContentType = allowedRequestContentType;
            return this;
        }

        /**
         * @param allowedRequestContentType Allowed request content types
         * 
         * @return builder
         * 
         */
        public Builder allowedRequestContentType(String allowedRequestContentType) {
            return allowedRequestContentType(Output.of(allowedRequestContentType));
        }

        /**
         * @param allowedRequestContentTypeCharset Allowed request content type charset
         * 
         * @return builder
         * 
         */
        public Builder allowedRequestContentTypeCharset(@Nullable Output<String> allowedRequestContentTypeCharset) {
            $.allowedRequestContentTypeCharset = allowedRequestContentTypeCharset;
            return this;
        }

        /**
         * @param allowedRequestContentTypeCharset Allowed request content type charset
         * 
         * @return builder
         * 
         */
        public Builder allowedRequestContentTypeCharset(String allowedRequestContentTypeCharset) {
            return allowedRequestContentTypeCharset(Output.of(allowedRequestContentTypeCharset));
        }

        /**
         * @param argLength The maximum number of arguments allowed
         * 
         * @return builder
         * 
         */
        public Builder argLength(@Nullable Output<Integer> argLength) {
            $.argLength = argLength;
            return this;
        }

        /**
         * @param argLength The maximum number of arguments allowed
         * 
         * @return builder
         * 
         */
        public Builder argLength(Integer argLength) {
            return argLength(Output.of(argLength));
        }

        /**
         * @param argNameLength The maximum allowed argument name length
         * 
         * @return builder
         * 
         */
        public Builder argNameLength(@Nullable Output<Integer> argNameLength) {
            $.argNameLength = argNameLength;
            return this;
        }

        /**
         * @param argNameLength The maximum allowed argument name length
         * 
         * @return builder
         * 
         */
        public Builder argNameLength(Integer argNameLength) {
            return argNameLength(Output.of(argNameLength));
        }

        /**
         * @param clonedVersion The latest cloned firewall version by the provider
         * 
         * @return builder
         * 
         */
        public Builder clonedVersion(@Nullable Output<Integer> clonedVersion) {
            $.clonedVersion = clonedVersion;
            return this;
        }

        /**
         * @param clonedVersion The latest cloned firewall version by the provider
         * 
         * @return builder
         * 
         */
        public Builder clonedVersion(Integer clonedVersion) {
            return clonedVersion(Output.of(clonedVersion));
        }

        /**
         * @param combinedFileSizes The maximum allowed size of all files
         * 
         * @return builder
         * 
         */
        public Builder combinedFileSizes(@Nullable Output<Integer> combinedFileSizes) {
            $.combinedFileSizes = combinedFileSizes;
            return this;
        }

        /**
         * @param combinedFileSizes The maximum allowed size of all files
         * 
         * @return builder
         * 
         */
        public Builder combinedFileSizes(Integer combinedFileSizes) {
            return combinedFileSizes(Output.of(combinedFileSizes));
        }

        /**
         * @param criticalAnomalyScore Score value to add for critical anomalies
         * 
         * @return builder
         * 
         */
        public Builder criticalAnomalyScore(@Nullable Output<Integer> criticalAnomalyScore) {
            $.criticalAnomalyScore = criticalAnomalyScore;
            return this;
        }

        /**
         * @param criticalAnomalyScore Score value to add for critical anomalies
         * 
         * @return builder
         * 
         */
        public Builder criticalAnomalyScore(Integer criticalAnomalyScore) {
            return criticalAnomalyScore(Output.of(criticalAnomalyScore));
        }

        /**
         * @param crsValidateUtf8Encoding CRS validate UTF8 encoding
         * 
         * @return builder
         * 
         */
        public Builder crsValidateUtf8Encoding(@Nullable Output<Boolean> crsValidateUtf8Encoding) {
            $.crsValidateUtf8Encoding = crsValidateUtf8Encoding;
            return this;
        }

        /**
         * @param crsValidateUtf8Encoding CRS validate UTF8 encoding
         * 
         * @return builder
         * 
         */
        public Builder crsValidateUtf8Encoding(Boolean crsValidateUtf8Encoding) {
            return crsValidateUtf8Encoding(Output.of(crsValidateUtf8Encoding));
        }

        /**
         * @param errorAnomalyScore Score value to add for error anomalies
         * 
         * @return builder
         * 
         */
        public Builder errorAnomalyScore(@Nullable Output<Integer> errorAnomalyScore) {
            $.errorAnomalyScore = errorAnomalyScore;
            return this;
        }

        /**
         * @param errorAnomalyScore Score value to add for error anomalies
         * 
         * @return builder
         * 
         */
        public Builder errorAnomalyScore(Integer errorAnomalyScore) {
            return errorAnomalyScore(Output.of(errorAnomalyScore));
        }

        /**
         * @param highRiskCountryCodes A space-separated list of country codes in ISO 3166-1 (two-letter) format
         * 
         * @return builder
         * 
         */
        public Builder highRiskCountryCodes(@Nullable Output<String> highRiskCountryCodes) {
            $.highRiskCountryCodes = highRiskCountryCodes;
            return this;
        }

        /**
         * @param highRiskCountryCodes A space-separated list of country codes in ISO 3166-1 (two-letter) format
         * 
         * @return builder
         * 
         */
        public Builder highRiskCountryCodes(String highRiskCountryCodes) {
            return highRiskCountryCodes(Output.of(highRiskCountryCodes));
        }

        /**
         * @param httpViolationScoreThreshold HTTP violation threshold
         * 
         * @return builder
         * 
         */
        public Builder httpViolationScoreThreshold(@Nullable Output<Integer> httpViolationScoreThreshold) {
            $.httpViolationScoreThreshold = httpViolationScoreThreshold;
            return this;
        }

        /**
         * @param httpViolationScoreThreshold HTTP violation threshold
         * 
         * @return builder
         * 
         */
        public Builder httpViolationScoreThreshold(Integer httpViolationScoreThreshold) {
            return httpViolationScoreThreshold(Output.of(httpViolationScoreThreshold));
        }

        /**
         * @param inboundAnomalyScoreThreshold Inbound anomaly threshold
         * 
         * @return builder
         * 
         */
        public Builder inboundAnomalyScoreThreshold(@Nullable Output<Integer> inboundAnomalyScoreThreshold) {
            $.inboundAnomalyScoreThreshold = inboundAnomalyScoreThreshold;
            return this;
        }

        /**
         * @param inboundAnomalyScoreThreshold Inbound anomaly threshold
         * 
         * @return builder
         * 
         */
        public Builder inboundAnomalyScoreThreshold(Integer inboundAnomalyScoreThreshold) {
            return inboundAnomalyScoreThreshold(Output.of(inboundAnomalyScoreThreshold));
        }

        /**
         * @param lfiScoreThreshold Local file inclusion attack threshold
         * 
         * @return builder
         * 
         */
        public Builder lfiScoreThreshold(@Nullable Output<Integer> lfiScoreThreshold) {
            $.lfiScoreThreshold = lfiScoreThreshold;
            return this;
        }

        /**
         * @param lfiScoreThreshold Local file inclusion attack threshold
         * 
         * @return builder
         * 
         */
        public Builder lfiScoreThreshold(Integer lfiScoreThreshold) {
            return lfiScoreThreshold(Output.of(lfiScoreThreshold));
        }

        /**
         * @param maxFileSize The maximum allowed file size, in bytes
         * 
         * @return builder
         * 
         */
        public Builder maxFileSize(@Nullable Output<Integer> maxFileSize) {
            $.maxFileSize = maxFileSize;
            return this;
        }

        /**
         * @param maxFileSize The maximum allowed file size, in bytes
         * 
         * @return builder
         * 
         */
        public Builder maxFileSize(Integer maxFileSize) {
            return maxFileSize(Output.of(maxFileSize));
        }

        /**
         * @param maxNumArgs The maximum number of arguments allowed
         * 
         * @return builder
         * 
         */
        public Builder maxNumArgs(@Nullable Output<Integer> maxNumArgs) {
            $.maxNumArgs = maxNumArgs;
            return this;
        }

        /**
         * @param maxNumArgs The maximum number of arguments allowed
         * 
         * @return builder
         * 
         */
        public Builder maxNumArgs(Integer maxNumArgs) {
            return maxNumArgs(Output.of(maxNumArgs));
        }

        /**
         * @param noticeAnomalyScore Score value to add for notice anomalies
         * 
         * @return builder
         * 
         */
        public Builder noticeAnomalyScore(@Nullable Output<Integer> noticeAnomalyScore) {
            $.noticeAnomalyScore = noticeAnomalyScore;
            return this;
        }

        /**
         * @param noticeAnomalyScore Score value to add for notice anomalies
         * 
         * @return builder
         * 
         */
        public Builder noticeAnomalyScore(Integer noticeAnomalyScore) {
            return noticeAnomalyScore(Output.of(noticeAnomalyScore));
        }

        /**
         * @param number The numeric ID assigned to the WAF Rule Exclusion
         * 
         * @return builder
         * 
         */
        public Builder number(@Nullable Output<Integer> number) {
            $.number = number;
            return this;
        }

        /**
         * @param number The numeric ID assigned to the WAF Rule Exclusion
         * 
         * @return builder
         * 
         */
        public Builder number(Integer number) {
            return number(Output.of(number));
        }

        /**
         * @param paranoiaLevel The configured paranoia level
         * 
         * @return builder
         * 
         */
        public Builder paranoiaLevel(@Nullable Output<Integer> paranoiaLevel) {
            $.paranoiaLevel = paranoiaLevel;
            return this;
        }

        /**
         * @param paranoiaLevel The configured paranoia level
         * 
         * @return builder
         * 
         */
        public Builder paranoiaLevel(Integer paranoiaLevel) {
            return paranoiaLevel(Output.of(paranoiaLevel));
        }

        /**
         * @param phpInjectionScoreThreshold PHP injection threshold
         * 
         * @return builder
         * 
         */
        public Builder phpInjectionScoreThreshold(@Nullable Output<Integer> phpInjectionScoreThreshold) {
            $.phpInjectionScoreThreshold = phpInjectionScoreThreshold;
            return this;
        }

        /**
         * @param phpInjectionScoreThreshold PHP injection threshold
         * 
         * @return builder
         * 
         */
        public Builder phpInjectionScoreThreshold(Integer phpInjectionScoreThreshold) {
            return phpInjectionScoreThreshold(Output.of(phpInjectionScoreThreshold));
        }

        /**
         * @param rceScoreThreshold Remote code execution threshold
         * 
         * @return builder
         * 
         */
        public Builder rceScoreThreshold(@Nullable Output<Integer> rceScoreThreshold) {
            $.rceScoreThreshold = rceScoreThreshold;
            return this;
        }

        /**
         * @param rceScoreThreshold Remote code execution threshold
         * 
         * @return builder
         * 
         */
        public Builder rceScoreThreshold(Integer rceScoreThreshold) {
            return rceScoreThreshold(Output.of(rceScoreThreshold));
        }

        /**
         * @param restrictedExtensions A space-separated list of allowed file extensions
         * 
         * @return builder
         * 
         */
        public Builder restrictedExtensions(@Nullable Output<String> restrictedExtensions) {
            $.restrictedExtensions = restrictedExtensions;
            return this;
        }

        /**
         * @param restrictedExtensions A space-separated list of allowed file extensions
         * 
         * @return builder
         * 
         */
        public Builder restrictedExtensions(String restrictedExtensions) {
            return restrictedExtensions(Output.of(restrictedExtensions));
        }

        /**
         * @param restrictedHeaders A space-separated list of allowed header names
         * 
         * @return builder
         * 
         */
        public Builder restrictedHeaders(@Nullable Output<String> restrictedHeaders) {
            $.restrictedHeaders = restrictedHeaders;
            return this;
        }

        /**
         * @param restrictedHeaders A space-separated list of allowed header names
         * 
         * @return builder
         * 
         */
        public Builder restrictedHeaders(String restrictedHeaders) {
            return restrictedHeaders(Output.of(restrictedHeaders));
        }

        /**
         * @param rfiScoreThreshold Remote file inclusion attack threshold
         * 
         * @return builder
         * 
         */
        public Builder rfiScoreThreshold(@Nullable Output<Integer> rfiScoreThreshold) {
            $.rfiScoreThreshold = rfiScoreThreshold;
            return this;
        }

        /**
         * @param rfiScoreThreshold Remote file inclusion attack threshold
         * 
         * @return builder
         * 
         */
        public Builder rfiScoreThreshold(Integer rfiScoreThreshold) {
            return rfiScoreThreshold(Output.of(rfiScoreThreshold));
        }

        public Builder ruleExclusions(@Nullable Output<List<ServiceWafConfigurationRuleExclusionArgs>> ruleExclusions) {
            $.ruleExclusions = ruleExclusions;
            return this;
        }

        public Builder ruleExclusions(List<ServiceWafConfigurationRuleExclusionArgs> ruleExclusions) {
            return ruleExclusions(Output.of(ruleExclusions));
        }

        public Builder ruleExclusions(ServiceWafConfigurationRuleExclusionArgs... ruleExclusions) {
            return ruleExclusions(List.of(ruleExclusions));
        }

        public Builder rules(@Nullable Output<List<ServiceWafConfigurationRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        public Builder rules(List<ServiceWafConfigurationRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        public Builder rules(ServiceWafConfigurationRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param sessionFixationScoreThreshold Session fixation attack threshold
         * 
         * @return builder
         * 
         */
        public Builder sessionFixationScoreThreshold(@Nullable Output<Integer> sessionFixationScoreThreshold) {
            $.sessionFixationScoreThreshold = sessionFixationScoreThreshold;
            return this;
        }

        /**
         * @param sessionFixationScoreThreshold Session fixation attack threshold
         * 
         * @return builder
         * 
         */
        public Builder sessionFixationScoreThreshold(Integer sessionFixationScoreThreshold) {
            return sessionFixationScoreThreshold(Output.of(sessionFixationScoreThreshold));
        }

        /**
         * @param sqlInjectionScoreThreshold SQL injection attack threshold
         * 
         * @return builder
         * 
         */
        public Builder sqlInjectionScoreThreshold(@Nullable Output<Integer> sqlInjectionScoreThreshold) {
            $.sqlInjectionScoreThreshold = sqlInjectionScoreThreshold;
            return this;
        }

        /**
         * @param sqlInjectionScoreThreshold SQL injection attack threshold
         * 
         * @return builder
         * 
         */
        public Builder sqlInjectionScoreThreshold(Integer sqlInjectionScoreThreshold) {
            return sqlInjectionScoreThreshold(Output.of(sqlInjectionScoreThreshold));
        }

        /**
         * @param totalArgLength The maximum size of argument names and values
         * 
         * @return builder
         * 
         */
        public Builder totalArgLength(@Nullable Output<Integer> totalArgLength) {
            $.totalArgLength = totalArgLength;
            return this;
        }

        /**
         * @param totalArgLength The maximum size of argument names and values
         * 
         * @return builder
         * 
         */
        public Builder totalArgLength(Integer totalArgLength) {
            return totalArgLength(Output.of(totalArgLength));
        }

        /**
         * @param wafId The ID of the Web Application Firewall that the configuration belongs to
         * 
         * @return builder
         * 
         */
        public Builder wafId(@Nullable Output<String> wafId) {
            $.wafId = wafId;
            return this;
        }

        /**
         * @param wafId The ID of the Web Application Firewall that the configuration belongs to
         * 
         * @return builder
         * 
         */
        public Builder wafId(String wafId) {
            return wafId(Output.of(wafId));
        }

        /**
         * @param warningAnomalyScore Score value to add for warning anomalies
         * 
         * @return builder
         * 
         */
        public Builder warningAnomalyScore(@Nullable Output<Integer> warningAnomalyScore) {
            $.warningAnomalyScore = warningAnomalyScore;
            return this;
        }

        /**
         * @param warningAnomalyScore Score value to add for warning anomalies
         * 
         * @return builder
         * 
         */
        public Builder warningAnomalyScore(Integer warningAnomalyScore) {
            return warningAnomalyScore(Output.of(warningAnomalyScore));
        }

        /**
         * @param xssScoreThreshold XSS attack threshold
         * 
         * @return builder
         * 
         */
        public Builder xssScoreThreshold(@Nullable Output<Integer> xssScoreThreshold) {
            $.xssScoreThreshold = xssScoreThreshold;
            return this;
        }

        /**
         * @param xssScoreThreshold XSS attack threshold
         * 
         * @return builder
         * 
         */
        public Builder xssScoreThreshold(Integer xssScoreThreshold) {
            return xssScoreThreshold(Output.of(xssScoreThreshold));
        }

        public ServiceWafConfigurationState build() {
            return $;
        }
    }

}
