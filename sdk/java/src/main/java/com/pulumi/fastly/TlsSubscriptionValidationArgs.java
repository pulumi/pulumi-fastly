// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class TlsSubscriptionValidationArgs extends com.pulumi.resources.ResourceArgs {

    public static final TlsSubscriptionValidationArgs Empty = new TlsSubscriptionValidationArgs();

    /**
     * The ID of the TLS Subscription that should be validated.
     * 
     */
    @Import(name="subscriptionId", required=true)
    private Output<String> subscriptionId;

    /**
     * @return The ID of the TLS Subscription that should be validated.
     * 
     */
    public Output<String> subscriptionId() {
        return this.subscriptionId;
    }

    private TlsSubscriptionValidationArgs() {}

    private TlsSubscriptionValidationArgs(TlsSubscriptionValidationArgs $) {
        this.subscriptionId = $.subscriptionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TlsSubscriptionValidationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TlsSubscriptionValidationArgs $;

        public Builder() {
            $ = new TlsSubscriptionValidationArgs();
        }

        public Builder(TlsSubscriptionValidationArgs defaults) {
            $ = new TlsSubscriptionValidationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param subscriptionId The ID of the TLS Subscription that should be validated.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId The ID of the TLS Subscription that should be validated.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        public TlsSubscriptionValidationArgs build() {
            if ($.subscriptionId == null) {
                throw new MissingRequiredPropertyException("TlsSubscriptionValidationArgs", "subscriptionId");
            }
            return $;
        }
    }

}
