// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTlsPrivateKeyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTlsPrivateKeyPlainArgs Empty = new GetTlsPrivateKeyPlainArgs();

    /**
     * Timestamp (GMT) when the private key was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable String createdAt;

    /**
     * @return Timestamp (GMT) when the private key was created.
     * 
     */
    public Optional<String> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Fastly private key ID. Conflicts with all the other filters
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return Fastly private key ID. Conflicts with all the other filters
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The key length used to generate the private key.
     * 
     */
    @Import(name="keyLength")
    private @Nullable Integer keyLength;

    /**
     * @return The key length used to generate the private key.
     * 
     */
    public Optional<Integer> keyLength() {
        return Optional.ofNullable(this.keyLength);
    }

    /**
     * The algorithm used to generate the private key. Must be RSA.
     * 
     */
    @Import(name="keyType")
    private @Nullable String keyType;

    /**
     * @return The algorithm used to generate the private key. Must be RSA.
     * 
     */
    public Optional<String> keyType() {
        return Optional.ofNullable(this.keyType);
    }

    /**
     * The human-readable name assigned to the private key when uploaded.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The human-readable name assigned to the private key when uploaded.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A hash of the associated public key, useful for safely identifying it.
     * 
     */
    @Import(name="publicKeySha1")
    private @Nullable String publicKeySha1;

    /**
     * @return A hash of the associated public key, useful for safely identifying it.
     * 
     */
    public Optional<String> publicKeySha1() {
        return Optional.ofNullable(this.publicKeySha1);
    }

    private GetTlsPrivateKeyPlainArgs() {}

    private GetTlsPrivateKeyPlainArgs(GetTlsPrivateKeyPlainArgs $) {
        this.createdAt = $.createdAt;
        this.id = $.id;
        this.keyLength = $.keyLength;
        this.keyType = $.keyType;
        this.name = $.name;
        this.publicKeySha1 = $.publicKeySha1;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTlsPrivateKeyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTlsPrivateKeyPlainArgs $;

        public Builder() {
            $ = new GetTlsPrivateKeyPlainArgs();
        }

        public Builder(GetTlsPrivateKeyPlainArgs defaults) {
            $ = new GetTlsPrivateKeyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt Timestamp (GMT) when the private key was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable String createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param id Fastly private key ID. Conflicts with all the other filters
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param keyLength The key length used to generate the private key.
         * 
         * @return builder
         * 
         */
        public Builder keyLength(@Nullable Integer keyLength) {
            $.keyLength = keyLength;
            return this;
        }

        /**
         * @param keyType The algorithm used to generate the private key. Must be RSA.
         * 
         * @return builder
         * 
         */
        public Builder keyType(@Nullable String keyType) {
            $.keyType = keyType;
            return this;
        }

        /**
         * @param name The human-readable name assigned to the private key when uploaded.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param publicKeySha1 A hash of the associated public key, useful for safely identifying it.
         * 
         * @return builder
         * 
         */
        public Builder publicKeySha1(@Nullable String publicKeySha1) {
            $.publicKeySha1 = publicKeySha1;
            return this;
        }

        public GetTlsPrivateKeyPlainArgs build() {
            return $;
        }
    }

}
