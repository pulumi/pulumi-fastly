// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceVclCacheSetting {
    /**
     * @return One of cache, pass, or restart, as defined on Fastly&#39;s documentation under &#34;[Caching action descriptions](https://docs.fastly.com/en/guides/controlling-caching#caching-action-descriptions)&#34;
     * 
     */
    private @Nullable String action;
    /**
     * @return Name of already defined `condition` used to test whether this settings object should be used. This `condition` must be of type `CACHE`
     * 
     */
    private @Nullable String cacheCondition;
    /**
     * @return Unique name for this Cache Setting. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    private String name;
    /**
     * @return Max &#34;Time To Live&#34; for stale (unreachable) objects
     * 
     */
    private @Nullable Integer staleTtl;
    /**
     * @return The Time-To-Live (TTL) for the object
     * 
     */
    private @Nullable Integer ttl;

    private ServiceVclCacheSetting() {}
    /**
     * @return One of cache, pass, or restart, as defined on Fastly&#39;s documentation under &#34;[Caching action descriptions](https://docs.fastly.com/en/guides/controlling-caching#caching-action-descriptions)&#34;
     * 
     */
    public Optional<String> action() {
        return Optional.ofNullable(this.action);
    }
    /**
     * @return Name of already defined `condition` used to test whether this settings object should be used. This `condition` must be of type `CACHE`
     * 
     */
    public Optional<String> cacheCondition() {
        return Optional.ofNullable(this.cacheCondition);
    }
    /**
     * @return Unique name for this Cache Setting. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Max &#34;Time To Live&#34; for stale (unreachable) objects
     * 
     */
    public Optional<Integer> staleTtl() {
        return Optional.ofNullable(this.staleTtl);
    }
    /**
     * @return The Time-To-Live (TTL) for the object
     * 
     */
    public Optional<Integer> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceVclCacheSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String action;
        private @Nullable String cacheCondition;
        private String name;
        private @Nullable Integer staleTtl;
        private @Nullable Integer ttl;
        public Builder() {}
        public Builder(ServiceVclCacheSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.cacheCondition = defaults.cacheCondition;
    	      this.name = defaults.name;
    	      this.staleTtl = defaults.staleTtl;
    	      this.ttl = defaults.ttl;
        }

        @CustomType.Setter
        public Builder action(@Nullable String action) {
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder cacheCondition(@Nullable String cacheCondition) {
            this.cacheCondition = cacheCondition;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder staleTtl(@Nullable Integer staleTtl) {
            this.staleTtl = staleTtl;
            return this;
        }
        @CustomType.Setter
        public Builder ttl(@Nullable Integer ttl) {
            this.ttl = ttl;
            return this;
        }
        public ServiceVclCacheSetting build() {
            final var o = new ServiceVclCacheSetting();
            o.action = action;
            o.cacheCondition = cacheCondition;
            o.name = name;
            o.staleTtl = staleTtl;
            o.ttl = ttl;
            return o;
        }
    }
}
