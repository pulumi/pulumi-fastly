// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.fastly.IntegrationArgs;
import com.pulumi.fastly.Utilities;
import com.pulumi.fastly.inputs.IntegrationState;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.fastly.Integration;
 * import com.pulumi.fastly.IntegrationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var mailinglistExample = new Integration("mailinglistExample", IntegrationArgs.builder()
 *             .name("my mailing list integration")
 *             .description("example mailing list integration")
 *             .type("mailinglist")
 *             .config(Map.of("address", "incoming-hook}{@literal @}{@code my.domain.com"))
 *             .build());
 * 
 *         var microsoftteamsExample = new Integration("microsoftteamsExample", IntegrationArgs.builder()
 *             .name("my Microsoft Teams integration")
 *             .description("example Microsoft Teams integration")
 *             .type("microsoftteams")
 *             .config(Map.of("webhook", "https://m365x012345.webhook.office.com"))
 *             .build());
 * 
 *         var newrelicExample = new Integration("newrelicExample", IntegrationArgs.builder()
 *             .name("my New Relic integration")
 *             .description("example New Relic integration")
 *             .type("newrelic")
 *             .config(Map.ofEntries(
 *                 Map.entry("account", "XXXXXXX"),
 *                 Map.entry("key", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")
 *             ))
 *             .build());
 * 
 *         var pagerdutyExample = new Integration("pagerdutyExample", IntegrationArgs.builder()
 *             .name("my PagerDuty integration")
 *             .description("example PagerDuty integration")
 *             .type("pagerduty")
 *             .config(Map.of("key", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"))
 *             .build());
 * 
 *         var slackExample = new Integration("slackExample", IntegrationArgs.builder()
 *             .name("my Slack integration")
 *             .description("example Slack integration")
 *             .type("slack")
 *             .config(Map.of("webhook", "https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX"))
 *             .build());
 * 
 *         var webhookExample = new Integration("webhookExample", IntegrationArgs.builder()
 *             .name("my webhook integration")
 *             .description("example webhook integration")
 *             .type("webhook")
 *             .config(Map.of("webhook", "https://my.domain.com/webhook"))
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="fastly:index/integration:Integration")
public class Integration extends com.pulumi.resources.CustomResource {
    /**
     * Configuration specific to the integration `type` (see documentation examples).
     * 
     */
    @Export(name="config", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> config;

    /**
     * @return Configuration specific to the integration `type` (see documentation examples).
     * 
     */
    public Output<Map<String,String>> config() {
        return this.config;
    }
    /**
     * User submitted description of the integration.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return User submitted description of the integration.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * User submitted name of the integration.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return User submitted name of the integration.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Type of the integration. One of: `mailinglist`, `microsoftteams`, `newrelic`, `pagerduty`, `slack`, `webhook`.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Type of the integration. One of: `mailinglist`, `microsoftteams`, `newrelic`, `pagerduty`, `slack`, `webhook`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Integration(java.lang.String name) {
        this(name, IntegrationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Integration(java.lang.String name, IntegrationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Integration(java.lang.String name, IntegrationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/integration:Integration", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Integration(java.lang.String name, Output<java.lang.String> id, @Nullable IntegrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/integration:Integration", name, state, makeResourceOptions(options, id), false);
    }

    private static IntegrationArgs makeArgs(IntegrationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? IntegrationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "config"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Integration get(java.lang.String name, Output<java.lang.String> id, @Nullable IntegrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Integration(name, id, state, options);
    }
}
