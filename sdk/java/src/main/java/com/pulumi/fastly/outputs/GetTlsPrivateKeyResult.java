// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTlsPrivateKeyResult {
    /**
     * @return Timestamp (GMT) when the private key was created.
     * 
     */
    private String createdAt;
    /**
     * @return Fastly private key ID. Conflicts with all the other filters
     * 
     */
    private String id;
    /**
     * @return The key length used to generate the private key.
     * 
     */
    private Integer keyLength;
    /**
     * @return The algorithm used to generate the private key. Must be RSA.
     * 
     */
    private String keyType;
    /**
     * @return The human-readable name assigned to the private key when uploaded.
     * 
     */
    private String name;
    /**
     * @return A hash of the associated public key, useful for safely identifying it.
     * 
     */
    private String publicKeySha1;
    /**
     * @return Whether Fastly recommends replacing this private key.
     * 
     */
    private Boolean replace;

    private GetTlsPrivateKeyResult() {}
    /**
     * @return Timestamp (GMT) when the private key was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return Fastly private key ID. Conflicts with all the other filters
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The key length used to generate the private key.
     * 
     */
    public Integer keyLength() {
        return this.keyLength;
    }
    /**
     * @return The algorithm used to generate the private key. Must be RSA.
     * 
     */
    public String keyType() {
        return this.keyType;
    }
    /**
     * @return The human-readable name assigned to the private key when uploaded.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A hash of the associated public key, useful for safely identifying it.
     * 
     */
    public String publicKeySha1() {
        return this.publicKeySha1;
    }
    /**
     * @return Whether Fastly recommends replacing this private key.
     * 
     */
    public Boolean replace() {
        return this.replace;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTlsPrivateKeyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdAt;
        private String id;
        private Integer keyLength;
        private String keyType;
        private String name;
        private String publicKeySha1;
        private Boolean replace;
        public Builder() {}
        public Builder(GetTlsPrivateKeyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAt = defaults.createdAt;
    	      this.id = defaults.id;
    	      this.keyLength = defaults.keyLength;
    	      this.keyType = defaults.keyType;
    	      this.name = defaults.name;
    	      this.publicKeySha1 = defaults.publicKeySha1;
    	      this.replace = defaults.replace;
        }

        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder keyLength(Integer keyLength) {
            this.keyLength = Objects.requireNonNull(keyLength);
            return this;
        }
        @CustomType.Setter
        public Builder keyType(String keyType) {
            this.keyType = Objects.requireNonNull(keyType);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder publicKeySha1(String publicKeySha1) {
            this.publicKeySha1 = Objects.requireNonNull(publicKeySha1);
            return this;
        }
        @CustomType.Setter
        public Builder replace(Boolean replace) {
            this.replace = Objects.requireNonNull(replace);
            return this;
        }
        public GetTlsPrivateKeyResult build() {
            final var o = new GetTlsPrivateKeyResult();
            o.createdAt = createdAt;
            o.id = id;
            o.keyLength = keyLength;
            o.keyType = keyType;
            o.name = name;
            o.publicKeySha1 = publicKeySha1;
            o.replace = replace;
            return o;
        }
    }
}
