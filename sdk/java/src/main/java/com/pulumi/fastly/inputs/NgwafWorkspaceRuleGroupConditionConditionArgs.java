// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class NgwafWorkspaceRuleGroupConditionConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final NgwafWorkspaceRuleGroupConditionConditionArgs Empty = new NgwafWorkspaceRuleGroupConditionConditionArgs();

    /**
     * Field to inspect (e.g., `ip`, `path`).
     * 
     */
    @Import(name="field", required=true)
    private Output<String> field;

    /**
     * @return Field to inspect (e.g., `ip`, `path`).
     * 
     */
    public Output<String> field() {
        return this.field;
    }

    /**
     * Operator to apply (e.g., `equals`, `contains`).
     * 
     */
    @Import(name="operator", required=true)
    private Output<String> operator;

    /**
     * @return Operator to apply (e.g., `equals`, `contains`).
     * 
     */
    public Output<String> operator() {
        return this.operator;
    }

    /**
     * The value to test the field against.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return The value to test the field against.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private NgwafWorkspaceRuleGroupConditionConditionArgs() {}

    private NgwafWorkspaceRuleGroupConditionConditionArgs(NgwafWorkspaceRuleGroupConditionConditionArgs $) {
        this.field = $.field;
        this.operator = $.operator;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NgwafWorkspaceRuleGroupConditionConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NgwafWorkspaceRuleGroupConditionConditionArgs $;

        public Builder() {
            $ = new NgwafWorkspaceRuleGroupConditionConditionArgs();
        }

        public Builder(NgwafWorkspaceRuleGroupConditionConditionArgs defaults) {
            $ = new NgwafWorkspaceRuleGroupConditionConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param field Field to inspect (e.g., `ip`, `path`).
         * 
         * @return builder
         * 
         */
        public Builder field(Output<String> field) {
            $.field = field;
            return this;
        }

        /**
         * @param field Field to inspect (e.g., `ip`, `path`).
         * 
         * @return builder
         * 
         */
        public Builder field(String field) {
            return field(Output.of(field));
        }

        /**
         * @param operator Operator to apply (e.g., `equals`, `contains`).
         * 
         * @return builder
         * 
         */
        public Builder operator(Output<String> operator) {
            $.operator = operator;
            return this;
        }

        /**
         * @param operator Operator to apply (e.g., `equals`, `contains`).
         * 
         * @return builder
         * 
         */
        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        /**
         * @param value The value to test the field against.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The value to test the field against.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public NgwafWorkspaceRuleGroupConditionConditionArgs build() {
            if ($.field == null) {
                throw new MissingRequiredPropertyException("NgwafWorkspaceRuleGroupConditionConditionArgs", "field");
            }
            if ($.operator == null) {
                throw new MissingRequiredPropertyException("NgwafWorkspaceRuleGroupConditionConditionArgs", "operator");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("NgwafWorkspaceRuleGroupConditionConditionArgs", "value");
            }
            return $;
        }
    }

}
