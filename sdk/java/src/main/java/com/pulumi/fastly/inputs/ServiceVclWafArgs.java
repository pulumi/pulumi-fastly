// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceVclWafArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceVclWafArgs Empty = new ServiceVclWafArgs();

    /**
     * A flag used to completely disable a Web Application Firewall. This is intended to only be used in an emergency
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    /**
     * @return A flag used to completely disable a Web Application Firewall. This is intended to only be used in an emergency
     * 
     */
    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * The `condition` to determine which requests will be run past your Fastly WAF. This `condition` must be of type `PREFETCH`. For detailed information about Conditionals, see [Fastly&#39;s Documentation on Conditionals](https://docs.fastly.com/en/guides/using-conditions)
     * 
     */
    @Import(name="prefetchCondition")
    private @Nullable Output<String> prefetchCondition;

    /**
     * @return The `condition` to determine which requests will be run past your Fastly WAF. This `condition` must be of type `PREFETCH`. For detailed information about Conditionals, see [Fastly&#39;s Documentation on Conditionals](https://docs.fastly.com/en/guides/using-conditions)
     * 
     */
    public Optional<Output<String>> prefetchCondition() {
        return Optional.ofNullable(this.prefetchCondition);
    }

    /**
     * The name of the response object used by the Web Application Firewall
     * 
     */
    @Import(name="responseObject", required=true)
    private Output<String> responseObject;

    /**
     * @return The name of the response object used by the Web Application Firewall
     * 
     */
    public Output<String> responseObject() {
        return this.responseObject;
    }

    /**
     * The ID of the WAF
     * 
     */
    @Import(name="wafId")
    private @Nullable Output<String> wafId;

    /**
     * @return The ID of the WAF
     * 
     */
    public Optional<Output<String>> wafId() {
        return Optional.ofNullable(this.wafId);
    }

    private ServiceVclWafArgs() {}

    private ServiceVclWafArgs(ServiceVclWafArgs $) {
        this.disabled = $.disabled;
        this.prefetchCondition = $.prefetchCondition;
        this.responseObject = $.responseObject;
        this.wafId = $.wafId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceVclWafArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceVclWafArgs $;

        public Builder() {
            $ = new ServiceVclWafArgs();
        }

        public Builder(ServiceVclWafArgs defaults) {
            $ = new ServiceVclWafArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disabled A flag used to completely disable a Web Application Firewall. This is intended to only be used in an emergency
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled A flag used to completely disable a Web Application Firewall. This is intended to only be used in an emergency
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param prefetchCondition The `condition` to determine which requests will be run past your Fastly WAF. This `condition` must be of type `PREFETCH`. For detailed information about Conditionals, see [Fastly&#39;s Documentation on Conditionals](https://docs.fastly.com/en/guides/using-conditions)
         * 
         * @return builder
         * 
         */
        public Builder prefetchCondition(@Nullable Output<String> prefetchCondition) {
            $.prefetchCondition = prefetchCondition;
            return this;
        }

        /**
         * @param prefetchCondition The `condition` to determine which requests will be run past your Fastly WAF. This `condition` must be of type `PREFETCH`. For detailed information about Conditionals, see [Fastly&#39;s Documentation on Conditionals](https://docs.fastly.com/en/guides/using-conditions)
         * 
         * @return builder
         * 
         */
        public Builder prefetchCondition(String prefetchCondition) {
            return prefetchCondition(Output.of(prefetchCondition));
        }

        /**
         * @param responseObject The name of the response object used by the Web Application Firewall
         * 
         * @return builder
         * 
         */
        public Builder responseObject(Output<String> responseObject) {
            $.responseObject = responseObject;
            return this;
        }

        /**
         * @param responseObject The name of the response object used by the Web Application Firewall
         * 
         * @return builder
         * 
         */
        public Builder responseObject(String responseObject) {
            return responseObject(Output.of(responseObject));
        }

        /**
         * @param wafId The ID of the WAF
         * 
         * @return builder
         * 
         */
        public Builder wafId(@Nullable Output<String> wafId) {
            $.wafId = wafId;
            return this;
        }

        /**
         * @param wafId The ID of the WAF
         * 
         * @return builder
         * 
         */
        public Builder wafId(String wafId) {
            return wafId(Output.of(wafId));
        }

        public ServiceVclWafArgs build() {
            if ($.responseObject == null) {
                throw new MissingRequiredPropertyException("ServiceVclWafArgs", "responseObject");
            }
            return $;
        }
    }

}
