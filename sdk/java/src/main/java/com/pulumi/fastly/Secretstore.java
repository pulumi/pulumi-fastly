// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.fastly.SecretstoreArgs;
import com.pulumi.fastly.Utilities;
import com.pulumi.fastly.inputs.SecretstoreState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * Basic usage:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.fastly.Secretstore;
 * import com.pulumi.fastly.SecretstoreArgs;
 * import com.pulumi.fastly.FastlyFunctions;
 * import com.pulumi.fastly.inputs.GetPackageHashArgs;
 * import com.pulumi.fastly.ServiceCompute;
 * import com.pulumi.fastly.ServiceComputeArgs;
 * import com.pulumi.fastly.inputs.ServiceComputeDomainArgs;
 * import com.pulumi.fastly.inputs.ServiceComputePackageArgs;
 * import com.pulumi.fastly.inputs.ServiceComputeResourceLinkArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // IMPORTANT: Deleting a Secret Store requires first deleting its resource_link.
 *         // This requires a two-step `pulumi up` as we can't guarantee deletion order.
 *         // e.g. resource_link deletion within fastly_service_compute might not finish first.
 *         var exampleSecretstore = new Secretstore("exampleSecretstore", SecretstoreArgs.builder()        
 *             .name("my_secret_store")
 *             .build());
 * 
 *         final var example = FastlyFunctions.getPackageHash(GetPackageHashArgs.builder()
 *             .filename("package.tar.gz")
 *             .build());
 * 
 *         var exampleServiceCompute = new ServiceCompute("exampleServiceCompute", ServiceComputeArgs.builder()        
 *             .name("my_compute_service")
 *             .domains(ServiceComputeDomainArgs.builder()
 *                 .name("demo.example.com")
 *                 .build())
 *             .package_(ServiceComputePackageArgs.builder()
 *                 .filename("package.tar.gz")
 *                 .sourceCodeHash(example.applyValue(getPackageHashResult -> getPackageHashResult.hash()))
 *                 .build())
 *             .resourceLinks(ServiceComputeResourceLinkArgs.builder()
 *                 .name("my_resource_link")
 *                 .resourceId(exampleSecretstore.id())
 *                 .build())
 *             .forceDestroy(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Fastly Secret Stores can be imported using their Store ID, e.g.
 * 
 * ```sh
 * $ pulumi import fastly:index/secretstore:Secretstore example xxxxxxxxxxxxxxxxxxxx
 * ```
 * 
 */
@ResourceType(type="fastly:index/secretstore:Secretstore")
public class Secretstore extends com.pulumi.resources.CustomResource {
    /**
     * A human-readable name for the Secret Store. The value must contain only letters, numbers, dashes (-), underscores (*), or periods (.). It is important to note that changing this attribute will delete and recreate the Secret Store, and discard the current entries. You MUST first delete the associated resource*link block from your service before modifying this field.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return A human-readable name for the Secret Store. The value must contain only letters, numbers, dashes (-), underscores (*), or periods (.). It is important to note that changing this attribute will delete and recreate the Secret Store, and discard the current entries. You MUST first delete the associated resource*link block from your service before modifying this field.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Secretstore(String name) {
        this(name, SecretstoreArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Secretstore(String name, @Nullable SecretstoreArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Secretstore(String name, @Nullable SecretstoreArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/secretstore:Secretstore", name, args == null ? SecretstoreArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Secretstore(String name, Output<String> id, @Nullable SecretstoreState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/secretstore:Secretstore", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Secretstore get(String name, Output<String> id, @Nullable SecretstoreState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Secretstore(name, id, state, options);
    }
}
