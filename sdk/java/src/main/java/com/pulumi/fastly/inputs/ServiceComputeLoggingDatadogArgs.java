// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceComputeLoggingDatadogArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceComputeLoggingDatadogArgs Empty = new ServiceComputeLoggingDatadogArgs();

    /**
     * The unique name of the Datadog logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The unique name of the Datadog logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Region where logs will be processed before streaming to BigQuery. Valid values are &#39;none&#39;, &#39;us&#39; and &#39;eu&#39;.
     * 
     */
    @Import(name="processingRegion")
    private @Nullable Output<String> processingRegion;

    /**
     * @return Region where logs will be processed before streaming to BigQuery. Valid values are &#39;none&#39;, &#39;us&#39; and &#39;eu&#39;.
     * 
     */
    public Optional<Output<String>> processingRegion() {
        return Optional.ofNullable(this.processingRegion);
    }

    /**
     * The region that log data will be sent to. One of `US` or `EU`. Defaults to `US` if undefined
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region that log data will be sent to. One of `US` or `EU`. Defaults to `US` if undefined
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The API key from your Datadog account
     * 
     */
    @Import(name="token", required=true)
    private Output<String> token;

    /**
     * @return The API key from your Datadog account
     * 
     */
    public Output<String> token() {
        return this.token;
    }

    private ServiceComputeLoggingDatadogArgs() {}

    private ServiceComputeLoggingDatadogArgs(ServiceComputeLoggingDatadogArgs $) {
        this.name = $.name;
        this.processingRegion = $.processingRegion;
        this.region = $.region;
        this.token = $.token;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceComputeLoggingDatadogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceComputeLoggingDatadogArgs $;

        public Builder() {
            $ = new ServiceComputeLoggingDatadogArgs();
        }

        public Builder(ServiceComputeLoggingDatadogArgs defaults) {
            $ = new ServiceComputeLoggingDatadogArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The unique name of the Datadog logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The unique name of the Datadog logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param processingRegion Region where logs will be processed before streaming to BigQuery. Valid values are &#39;none&#39;, &#39;us&#39; and &#39;eu&#39;.
         * 
         * @return builder
         * 
         */
        public Builder processingRegion(@Nullable Output<String> processingRegion) {
            $.processingRegion = processingRegion;
            return this;
        }

        /**
         * @param processingRegion Region where logs will be processed before streaming to BigQuery. Valid values are &#39;none&#39;, &#39;us&#39; and &#39;eu&#39;.
         * 
         * @return builder
         * 
         */
        public Builder processingRegion(String processingRegion) {
            return processingRegion(Output.of(processingRegion));
        }

        /**
         * @param region The region that log data will be sent to. One of `US` or `EU`. Defaults to `US` if undefined
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region that log data will be sent to. One of `US` or `EU`. Defaults to `US` if undefined
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param token The API key from your Datadog account
         * 
         * @return builder
         * 
         */
        public Builder token(Output<String> token) {
            $.token = token;
            return this;
        }

        /**
         * @param token The API key from your Datadog account
         * 
         * @return builder
         * 
         */
        public Builder token(String token) {
            return token(Output.of(token));
        }

        public ServiceComputeLoggingDatadogArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ServiceComputeLoggingDatadogArgs", "name");
            }
            if ($.token == null) {
                throw new MissingRequiredPropertyException("ServiceComputeLoggingDatadogArgs", "token");
            }
            return $;
        }
    }

}
