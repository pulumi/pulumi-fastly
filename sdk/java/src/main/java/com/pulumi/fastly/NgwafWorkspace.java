// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.fastly.NgwafWorkspaceArgs;
import com.pulumi.fastly.Utilities;
import com.pulumi.fastly.inputs.NgwafWorkspaceState;
import com.pulumi.fastly.outputs.NgwafWorkspaceAttackSignalThresholds;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Fastly Next-Gen WAF Workspace, representing a container for
 * rules, signals, and various other resources that are offered by the
 * Next-Gen WAF product.
 * 
 * ## Import
 * 
 * Fastly Next-Gen WAF Workspaces can be imported using their workspace ID, e.g.
 * 
 * ```sh
 * $ pulumi import fastly:index/ngwafWorkspace:NgwafWorkspace demo xxxxxxxxxxxxxxxxxxxx
 * ```
 * 
 */
@ResourceType(type="fastly:index/ngwafWorkspace:NgwafWorkspace")
public class NgwafWorkspace extends com.pulumi.resources.CustomResource {
    /**
     * Attack threshold parameters for system site alerts. Each threshold value is the number of attack signals per IP address that must be detected during the interval before the related IP address is flagged. If no values are set then the default value for each field will be applied
     * 
     */
    @Export(name="attackSignalThresholds", refs={NgwafWorkspaceAttackSignalThresholds.class}, tree="[0]")
    private Output<NgwafWorkspaceAttackSignalThresholds> attackSignalThresholds;

    /**
     * @return Attack threshold parameters for system site alerts. Each threshold value is the number of attack signals per IP address that must be detected during the interval before the related IP address is flagged. If no values are set then the default value for each field will be applied
     * 
     */
    public Output<NgwafWorkspaceAttackSignalThresholds> attackSignalThresholds() {
        return this.attackSignalThresholds;
    }
    /**
     * Specifies the request headers containing the client IP address. Maximum of 10 header names.
     * 
     */
    @Export(name="clientIpHeaders", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> clientIpHeaders;

    /**
     * @return Specifies the request headers containing the client IP address. Maximum of 10 header names.
     * 
     */
    public Output<Optional<List<String>>> clientIpHeaders() {
        return Codegen.optional(this.clientIpHeaders);
    }
    /**
     * The status code returned when a request is blocked. This configuration is applied at the workspace but can be overwritten in rules. Accepted values are [`301`, `302`, `400..599`]. Default value `406`.
     * 
     */
    @Export(name="defaultBlockingResponseCode", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> defaultBlockingResponseCode;

    /**
     * @return The status code returned when a request is blocked. This configuration is applied at the workspace but can be overwritten in rules. Accepted values are [`301`, `302`, `400..599`]. Default value `406`.
     * 
     */
    public Output<Optional<Integer>> defaultBlockingResponseCode() {
        return Codegen.optional(this.defaultBlockingResponseCode);
    }
    /**
     * The description of the workspace
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return The description of the workspace
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Agents will anonymize IP addresses according to the option selected. Accepted value is `hashed`.
     * 
     */
    @Export(name="ipAnonymization", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipAnonymization;

    /**
     * @return Agents will anonymize IP addresses according to the option selected. Accepted value is `hashed`.
     * 
     */
    public Output<Optional<String>> ipAnonymization() {
        return Codegen.optional(this.ipAnonymization);
    }
    /**
     * The operation mode of the workspace. Accepted values are `off`, `block`, and `log`.
     * 
     */
    @Export(name="mode", refs={String.class}, tree="[0]")
    private Output<String> mode;

    /**
     * @return The operation mode of the workspace. Accepted values are `off`, `block`, and `log`.
     * 
     */
    public Output<String> mode() {
        return this.mode;
    }
    /**
     * The display name of the workspace.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The display name of the workspace.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NgwafWorkspace(java.lang.String name) {
        this(name, NgwafWorkspaceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NgwafWorkspace(java.lang.String name, NgwafWorkspaceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NgwafWorkspace(java.lang.String name, NgwafWorkspaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/ngwafWorkspace:NgwafWorkspace", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NgwafWorkspace(java.lang.String name, Output<java.lang.String> id, @Nullable NgwafWorkspaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/ngwafWorkspace:NgwafWorkspace", name, state, makeResourceOptions(options, id), false);
    }

    private static NgwafWorkspaceArgs makeArgs(NgwafWorkspaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NgwafWorkspaceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NgwafWorkspace get(java.lang.String name, Output<java.lang.String> id, @Nullable NgwafWorkspaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NgwafWorkspace(name, id, state, options);
    }
}
