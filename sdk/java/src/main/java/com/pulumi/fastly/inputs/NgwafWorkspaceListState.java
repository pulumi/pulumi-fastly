// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NgwafWorkspaceListState extends com.pulumi.resources.ResourceArgs {

    public static final NgwafWorkspaceListState Empty = new NgwafWorkspaceListState();

    /**
     * The description of the list.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the list.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The values in the list.
     * 
     */
    @Import(name="entries")
    private @Nullable Output<List<String>> entries;

    /**
     * @return The values in the list.
     * 
     */
    public Optional<Output<List<String>>> entries() {
        return Optional.ofNullable(this.entries);
    }

    /**
     * The name of the list.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the list.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The type of list. Accepted values are `string`, `wildcard`, `ip`, `country`, and `signal`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of list. Accepted values are `string`, `wildcard`, `ip`, `country`, and `signal`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="workspaceId")
    private @Nullable Output<String> workspaceId;

    public Optional<Output<String>> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private NgwafWorkspaceListState() {}

    private NgwafWorkspaceListState(NgwafWorkspaceListState $) {
        this.description = $.description;
        this.entries = $.entries;
        this.name = $.name;
        this.type = $.type;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NgwafWorkspaceListState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NgwafWorkspaceListState $;

        public Builder() {
            $ = new NgwafWorkspaceListState();
        }

        public Builder(NgwafWorkspaceListState defaults) {
            $ = new NgwafWorkspaceListState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the list.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the list.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param entries The values in the list.
         * 
         * @return builder
         * 
         */
        public Builder entries(@Nullable Output<List<String>> entries) {
            $.entries = entries;
            return this;
        }

        /**
         * @param entries The values in the list.
         * 
         * @return builder
         * 
         */
        public Builder entries(List<String> entries) {
            return entries(Output.of(entries));
        }

        /**
         * @param entries The values in the list.
         * 
         * @return builder
         * 
         */
        public Builder entries(String... entries) {
            return entries(List.of(entries));
        }

        /**
         * @param name The name of the list.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the list.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type The type of list. Accepted values are `string`, `wildcard`, `ip`, `country`, and `signal`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of list. Accepted values are `string`, `wildcard`, `ip`, `country`, and `signal`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public NgwafWorkspaceListState build() {
            return $;
        }
    }

}
