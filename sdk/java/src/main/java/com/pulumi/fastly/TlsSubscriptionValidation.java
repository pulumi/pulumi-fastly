// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.fastly.TlsSubscriptionValidationArgs;
import com.pulumi.fastly.Utilities;
import com.pulumi.fastly.inputs.TlsSubscriptionValidationState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * This resource represents a successful validation of a Fastly TLS Subscription in concert with other resources.
 * 
 * Most commonly, this resource is used together with a resource for a DNS record and `fastly.TlsSubscription` to request a DNS validated certificate, deploy the required validation records and wait for validation to complete.
 * 
 * &gt; **Warning:** This resource implements a part of the validation workflow. It does not represent a real-world entity in Fastly, therefore changing or deleting this resource on its own has no immediate effect.
 * 
 */
@ResourceType(type="fastly:index/tlsSubscriptionValidation:TlsSubscriptionValidation")
public class TlsSubscriptionValidation extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the TLS Subscription that should be validated.
     * 
     */
    @Export(name="subscriptionId", refs={String.class}, tree="[0]")
    private Output<String> subscriptionId;

    /**
     * @return The ID of the TLS Subscription that should be validated.
     * 
     */
    public Output<String> subscriptionId() {
        return this.subscriptionId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TlsSubscriptionValidation(String name) {
        this(name, TlsSubscriptionValidationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TlsSubscriptionValidation(String name, TlsSubscriptionValidationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TlsSubscriptionValidation(String name, TlsSubscriptionValidationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/tlsSubscriptionValidation:TlsSubscriptionValidation", name, args == null ? TlsSubscriptionValidationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private TlsSubscriptionValidation(String name, Output<String> id, @Nullable TlsSubscriptionValidationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/tlsSubscriptionValidation:TlsSubscriptionValidation", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TlsSubscriptionValidation get(String name, Output<String> id, @Nullable TlsSubscriptionValidationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TlsSubscriptionValidation(name, id, state, options);
    }
}
