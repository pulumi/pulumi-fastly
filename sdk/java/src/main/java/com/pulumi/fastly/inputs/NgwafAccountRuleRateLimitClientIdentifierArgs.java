// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NgwafAccountRuleRateLimitClientIdentifierArgs extends com.pulumi.resources.ResourceArgs {

    public static final NgwafAccountRuleRateLimitClientIdentifierArgs Empty = new NgwafAccountRuleRateLimitClientIdentifierArgs();

    /**
     * Key for the Client Identifier.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return Key for the Client Identifier.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * Name for the Client Identifier.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name for the Client Identifier.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Type of the Client Identifier.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of the Client Identifier.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private NgwafAccountRuleRateLimitClientIdentifierArgs() {}

    private NgwafAccountRuleRateLimitClientIdentifierArgs(NgwafAccountRuleRateLimitClientIdentifierArgs $) {
        this.key = $.key;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NgwafAccountRuleRateLimitClientIdentifierArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NgwafAccountRuleRateLimitClientIdentifierArgs $;

        public Builder() {
            $ = new NgwafAccountRuleRateLimitClientIdentifierArgs();
        }

        public Builder(NgwafAccountRuleRateLimitClientIdentifierArgs defaults) {
            $ = new NgwafAccountRuleRateLimitClientIdentifierArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param key Key for the Client Identifier.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Key for the Client Identifier.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param name Name for the Client Identifier.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name for the Client Identifier.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type Type of the Client Identifier.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the Client Identifier.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public NgwafAccountRuleRateLimitClientIdentifierArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("NgwafAccountRuleRateLimitClientIdentifierArgs", "type");
            }
            return $;
        }
    }

}
