// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.fastly.DomainV1Args;
import com.pulumi.fastly.Utilities;
import com.pulumi.fastly.inputs.DomainV1State;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="fastly:index/domainV1:DomainV1")
public class DomainV1 extends com.pulumi.resources.CustomResource {
    /**
     * The Domain Identifier (UUID).
     * 
     */
    @Export(name="domainId", refs={String.class}, tree="[0]")
    private Output<String> domainId;

    /**
     * @return The Domain Identifier (UUID).
     * 
     */
    public Output<String> domainId() {
        return this.domainId;
    }
    /**
     * The fully-qualified domain name for your domain (e.g. `www.example.com`, no trailing dot). Can be created, but not updated.
     * 
     */
    @Export(name="fqdn", refs={String.class}, tree="[0]")
    private Output<String> fqdn;

    /**
     * @return The fully-qualified domain name for your domain (e.g. `www.example.com`, no trailing dot). Can be created, but not updated.
     * 
     */
    public Output<String> fqdn() {
        return this.fqdn;
    }
    /**
     * The service_id associated with your domain or null if there is no association.
     * 
     */
    @Export(name="serviceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> serviceId;

    /**
     * @return The service_id associated with your domain or null if there is no association.
     * 
     */
    public Output<Optional<String>> serviceId() {
        return Codegen.optional(this.serviceId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DomainV1(String name) {
        this(name, DomainV1Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DomainV1(String name, DomainV1Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DomainV1(String name, DomainV1Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/domainV1:DomainV1", name, args == null ? DomainV1Args.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DomainV1(String name, Output<String> id, @Nullable DomainV1State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/domainV1:DomainV1", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DomainV1 get(String name, Output<String> id, @Nullable DomainV1State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DomainV1(name, id, state, options);
    }
}
