// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceComputeLoggingGooglepubsub {
    /**
     * @return The google account name used to obtain temporary credentials (default none). You may optionally provide this via an environment variable, `FASTLY_GCS_ACCOUNT_NAME`.
     * 
     */
    private @Nullable String accountName;
    /**
     * @return The unique name of the Google Cloud Pub/Sub logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    private String name;
    /**
     * @return Region where logs will be processed before streaming to BigQuery. Valid values are &#39;none&#39;, &#39;us&#39; and &#39;eu&#39;.
     * 
     */
    private @Nullable String processingRegion;
    /**
     * @return The ID of your Google Cloud Platform project
     * 
     */
    private String projectId;
    /**
     * @return Your Google Cloud Platform account secret key. The `private_key` field in your service account authentication JSON. You may optionally provide this secret via an environment variable, `FASTLY_GOOGLE_PUBSUB_SECRET_KEY`.
     * 
     */
    private String secretKey;
    /**
     * @return The Google Cloud Pub/Sub topic to which logs will be published
     * 
     */
    private String topic;
    /**
     * @return Your Google Cloud Platform service account email address. The `client_email` field in your service account authentication JSON. You may optionally provide this via an environment variable, `FASTLY_GOOGLE_PUBSUB_EMAIL`.
     * 
     */
    private String user;

    private ServiceComputeLoggingGooglepubsub() {}
    /**
     * @return The google account name used to obtain temporary credentials (default none). You may optionally provide this via an environment variable, `FASTLY_GCS_ACCOUNT_NAME`.
     * 
     */
    public Optional<String> accountName() {
        return Optional.ofNullable(this.accountName);
    }
    /**
     * @return The unique name of the Google Cloud Pub/Sub logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Region where logs will be processed before streaming to BigQuery. Valid values are &#39;none&#39;, &#39;us&#39; and &#39;eu&#39;.
     * 
     */
    public Optional<String> processingRegion() {
        return Optional.ofNullable(this.processingRegion);
    }
    /**
     * @return The ID of your Google Cloud Platform project
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return Your Google Cloud Platform account secret key. The `private_key` field in your service account authentication JSON. You may optionally provide this secret via an environment variable, `FASTLY_GOOGLE_PUBSUB_SECRET_KEY`.
     * 
     */
    public String secretKey() {
        return this.secretKey;
    }
    /**
     * @return The Google Cloud Pub/Sub topic to which logs will be published
     * 
     */
    public String topic() {
        return this.topic;
    }
    /**
     * @return Your Google Cloud Platform service account email address. The `client_email` field in your service account authentication JSON. You may optionally provide this via an environment variable, `FASTLY_GOOGLE_PUBSUB_EMAIL`.
     * 
     */
    public String user() {
        return this.user;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceComputeLoggingGooglepubsub defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountName;
        private String name;
        private @Nullable String processingRegion;
        private String projectId;
        private String secretKey;
        private String topic;
        private String user;
        public Builder() {}
        public Builder(ServiceComputeLoggingGooglepubsub defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.name = defaults.name;
    	      this.processingRegion = defaults.processingRegion;
    	      this.projectId = defaults.projectId;
    	      this.secretKey = defaults.secretKey;
    	      this.topic = defaults.topic;
    	      this.user = defaults.user;
        }

        @CustomType.Setter
        public Builder accountName(@Nullable String accountName) {

            this.accountName = accountName;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ServiceComputeLoggingGooglepubsub", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder processingRegion(@Nullable String processingRegion) {

            this.processingRegion = processingRegion;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("ServiceComputeLoggingGooglepubsub", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder secretKey(String secretKey) {
            if (secretKey == null) {
              throw new MissingRequiredPropertyException("ServiceComputeLoggingGooglepubsub", "secretKey");
            }
            this.secretKey = secretKey;
            return this;
        }
        @CustomType.Setter
        public Builder topic(String topic) {
            if (topic == null) {
              throw new MissingRequiredPropertyException("ServiceComputeLoggingGooglepubsub", "topic");
            }
            this.topic = topic;
            return this;
        }
        @CustomType.Setter
        public Builder user(String user) {
            if (user == null) {
              throw new MissingRequiredPropertyException("ServiceComputeLoggingGooglepubsub", "user");
            }
            this.user = user;
            return this;
        }
        public ServiceComputeLoggingGooglepubsub build() {
            final var _resultValue = new ServiceComputeLoggingGooglepubsub();
            _resultValue.accountName = accountName;
            _resultValue.name = name;
            _resultValue.processingRegion = processingRegion;
            _resultValue.projectId = projectId;
            _resultValue.secretKey = secretKey;
            _resultValue.topic = topic;
            _resultValue.user = user;
            return _resultValue;
        }
    }
}
