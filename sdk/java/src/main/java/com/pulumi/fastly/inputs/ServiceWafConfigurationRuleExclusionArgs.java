// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceWafConfigurationRuleExclusionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceWafConfigurationRuleExclusionArgs Empty = new ServiceWafConfigurationRuleExclusionArgs();

    /**
     * A conditional expression in VCL used to determine if the condition is met
     * 
     */
    @Import(name="condition", required=true)
    private Output<String> condition;

    /**
     * @return A conditional expression in VCL used to determine if the condition is met
     * 
     */
    public Output<String> condition() {
        return this.condition;
    }

    /**
     * The type of rule exclusion. Values are `rule` to exclude the specified rule(s), or `waf` to disable the Web Application Firewall
     * 
     */
    @Import(name="exclusionType", required=true)
    private Output<String> exclusionType;

    /**
     * @return The type of rule exclusion. Values are `rule` to exclude the specified rule(s), or `waf` to disable the Web Application Firewall
     * 
     */
    public Output<String> exclusionType() {
        return this.exclusionType;
    }

    /**
     * Set of modsecurity IDs to be excluded. No rules should be provided when `exclusion_type` is `waf`. The rules need to be configured on the Web Application Firewall to be excluded
     * 
     */
    @Import(name="modsecRuleIds")
    private @Nullable Output<List<Integer>> modsecRuleIds;

    /**
     * @return Set of modsecurity IDs to be excluded. No rules should be provided when `exclusion_type` is `waf`. The rules need to be configured on the Web Application Firewall to be excluded
     * 
     */
    public Optional<Output<List<Integer>>> modsecRuleIds() {
        return Optional.ofNullable(this.modsecRuleIds);
    }

    /**
     * The name of rule exclusion
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of rule exclusion
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The numeric ID assigned to the WAF Rule Exclusion
     * 
     */
    @Import(name="number")
    private @Nullable Output<Integer> number;

    /**
     * @return The numeric ID assigned to the WAF Rule Exclusion
     * 
     */
    public Optional<Output<Integer>> number() {
        return Optional.ofNullable(this.number);
    }

    private ServiceWafConfigurationRuleExclusionArgs() {}

    private ServiceWafConfigurationRuleExclusionArgs(ServiceWafConfigurationRuleExclusionArgs $) {
        this.condition = $.condition;
        this.exclusionType = $.exclusionType;
        this.modsecRuleIds = $.modsecRuleIds;
        this.name = $.name;
        this.number = $.number;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceWafConfigurationRuleExclusionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceWafConfigurationRuleExclusionArgs $;

        public Builder() {
            $ = new ServiceWafConfigurationRuleExclusionArgs();
        }

        public Builder(ServiceWafConfigurationRuleExclusionArgs defaults) {
            $ = new ServiceWafConfigurationRuleExclusionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param condition A conditional expression in VCL used to determine if the condition is met
         * 
         * @return builder
         * 
         */
        public Builder condition(Output<String> condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param condition A conditional expression in VCL used to determine if the condition is met
         * 
         * @return builder
         * 
         */
        public Builder condition(String condition) {
            return condition(Output.of(condition));
        }

        /**
         * @param exclusionType The type of rule exclusion. Values are `rule` to exclude the specified rule(s), or `waf` to disable the Web Application Firewall
         * 
         * @return builder
         * 
         */
        public Builder exclusionType(Output<String> exclusionType) {
            $.exclusionType = exclusionType;
            return this;
        }

        /**
         * @param exclusionType The type of rule exclusion. Values are `rule` to exclude the specified rule(s), or `waf` to disable the Web Application Firewall
         * 
         * @return builder
         * 
         */
        public Builder exclusionType(String exclusionType) {
            return exclusionType(Output.of(exclusionType));
        }

        /**
         * @param modsecRuleIds Set of modsecurity IDs to be excluded. No rules should be provided when `exclusion_type` is `waf`. The rules need to be configured on the Web Application Firewall to be excluded
         * 
         * @return builder
         * 
         */
        public Builder modsecRuleIds(@Nullable Output<List<Integer>> modsecRuleIds) {
            $.modsecRuleIds = modsecRuleIds;
            return this;
        }

        /**
         * @param modsecRuleIds Set of modsecurity IDs to be excluded. No rules should be provided when `exclusion_type` is `waf`. The rules need to be configured on the Web Application Firewall to be excluded
         * 
         * @return builder
         * 
         */
        public Builder modsecRuleIds(List<Integer> modsecRuleIds) {
            return modsecRuleIds(Output.of(modsecRuleIds));
        }

        /**
         * @param modsecRuleIds Set of modsecurity IDs to be excluded. No rules should be provided when `exclusion_type` is `waf`. The rules need to be configured on the Web Application Firewall to be excluded
         * 
         * @return builder
         * 
         */
        public Builder modsecRuleIds(Integer... modsecRuleIds) {
            return modsecRuleIds(List.of(modsecRuleIds));
        }

        /**
         * @param name The name of rule exclusion
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of rule exclusion
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param number The numeric ID assigned to the WAF Rule Exclusion
         * 
         * @return builder
         * 
         */
        public Builder number(@Nullable Output<Integer> number) {
            $.number = number;
            return this;
        }

        /**
         * @param number The numeric ID assigned to the WAF Rule Exclusion
         * 
         * @return builder
         * 
         */
        public Builder number(Integer number) {
            return number(Output.of(number));
        }

        public ServiceWafConfigurationRuleExclusionArgs build() {
            $.condition = Objects.requireNonNull($.condition, "expected parameter 'condition' to be non-null");
            $.exclusionType = Objects.requireNonNull($.exclusionType, "expected parameter 'exclusionType' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
