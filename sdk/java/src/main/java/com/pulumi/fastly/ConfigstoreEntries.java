// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.fastly.ConfigstoreEntriesArgs;
import com.pulumi.fastly.Utilities;
import com.pulumi.fastly.inputs.ConfigstoreEntriesState;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * Fastly Config Stores entries can be imported using the corresponding Config Store ID with the `/entries` suffix, e.g.
 * 
 * ```sh
 * $ pulumi import fastly:index/configstoreEntries:ConfigstoreEntries example xxxxxxxxxxxxxxxxxxxx/entries
 * ```
 * 
 */
@ResourceType(type="fastly:index/configstoreEntries:ConfigstoreEntries")
public class ConfigstoreEntries extends com.pulumi.resources.CustomResource {
    /**
     * A map representing an entry in the Config Store, (key/value)
     * 
     */
    @Export(name="entries", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> entries;

    /**
     * @return A map representing an entry in the Config Store, (key/value)
     * 
     */
    public Output<Map<String,String>> entries() {
        return this.entries;
    }
    @Export(name="manageEntries", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> manageEntries;

    public Output<Optional<Boolean>> manageEntries() {
        return Codegen.optional(this.manageEntries);
    }
    /**
     * An alphanumeric string identifying the Config Store.
     * 
     */
    @Export(name="storeId", refs={String.class}, tree="[0]")
    private Output<String> storeId;

    /**
     * @return An alphanumeric string identifying the Config Store.
     * 
     */
    public Output<String> storeId() {
        return this.storeId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ConfigstoreEntries(java.lang.String name) {
        this(name, ConfigstoreEntriesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ConfigstoreEntries(java.lang.String name, ConfigstoreEntriesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ConfigstoreEntries(java.lang.String name, ConfigstoreEntriesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/configstoreEntries:ConfigstoreEntries", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ConfigstoreEntries(java.lang.String name, Output<java.lang.String> id, @Nullable ConfigstoreEntriesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/configstoreEntries:ConfigstoreEntries", name, state, makeResourceOptions(options, id), false);
    }

    private static ConfigstoreEntriesArgs makeArgs(ConfigstoreEntriesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ConfigstoreEntriesArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ConfigstoreEntries get(java.lang.String name, Output<java.lang.String> id, @Nullable ConfigstoreEntriesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ConfigstoreEntries(name, id, state, options);
    }
}
