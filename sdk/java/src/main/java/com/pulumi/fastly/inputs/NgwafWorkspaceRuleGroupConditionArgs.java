// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.fastly.inputs.NgwafWorkspaceRuleGroupConditionConditionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class NgwafWorkspaceRuleGroupConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final NgwafWorkspaceRuleGroupConditionArgs Empty = new NgwafWorkspaceRuleGroupConditionArgs();

    /**
     * A list of nested conditions in this group.
     * 
     */
    @Import(name="conditions", required=true)
    private Output<List<NgwafWorkspaceRuleGroupConditionConditionArgs>> conditions;

    /**
     * @return A list of nested conditions in this group.
     * 
     */
    public Output<List<NgwafWorkspaceRuleGroupConditionConditionArgs>> conditions() {
        return this.conditions;
    }

    /**
     * Logical operator for the group. Accepted values are `any` and `all`.
     * 
     */
    @Import(name="groupOperator", required=true)
    private Output<String> groupOperator;

    /**
     * @return Logical operator for the group. Accepted values are `any` and `all`.
     * 
     */
    public Output<String> groupOperator() {
        return this.groupOperator;
    }

    private NgwafWorkspaceRuleGroupConditionArgs() {}

    private NgwafWorkspaceRuleGroupConditionArgs(NgwafWorkspaceRuleGroupConditionArgs $) {
        this.conditions = $.conditions;
        this.groupOperator = $.groupOperator;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NgwafWorkspaceRuleGroupConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NgwafWorkspaceRuleGroupConditionArgs $;

        public Builder() {
            $ = new NgwafWorkspaceRuleGroupConditionArgs();
        }

        public Builder(NgwafWorkspaceRuleGroupConditionArgs defaults) {
            $ = new NgwafWorkspaceRuleGroupConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param conditions A list of nested conditions in this group.
         * 
         * @return builder
         * 
         */
        public Builder conditions(Output<List<NgwafWorkspaceRuleGroupConditionConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        /**
         * @param conditions A list of nested conditions in this group.
         * 
         * @return builder
         * 
         */
        public Builder conditions(List<NgwafWorkspaceRuleGroupConditionConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        /**
         * @param conditions A list of nested conditions in this group.
         * 
         * @return builder
         * 
         */
        public Builder conditions(NgwafWorkspaceRuleGroupConditionConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        /**
         * @param groupOperator Logical operator for the group. Accepted values are `any` and `all`.
         * 
         * @return builder
         * 
         */
        public Builder groupOperator(Output<String> groupOperator) {
            $.groupOperator = groupOperator;
            return this;
        }

        /**
         * @param groupOperator Logical operator for the group. Accepted values are `any` and `all`.
         * 
         * @return builder
         * 
         */
        public Builder groupOperator(String groupOperator) {
            return groupOperator(Output.of(groupOperator));
        }

        public NgwafWorkspaceRuleGroupConditionArgs build() {
            if ($.conditions == null) {
                throw new MissingRequiredPropertyException("NgwafWorkspaceRuleGroupConditionArgs", "conditions");
            }
            if ($.groupOperator == null) {
                throw new MissingRequiredPropertyException("NgwafWorkspaceRuleGroupConditionArgs", "groupOperator");
            }
            return $;
        }
    }

}
