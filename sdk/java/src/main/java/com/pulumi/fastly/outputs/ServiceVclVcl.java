// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceVclVcl {
    /**
     * @return The custom VCL code to upload
     * 
     */
    private String content;
    /**
     * @return If `true`, use this block as the main configuration. If `false`, use this block as an includable library. Only a single VCL block can be marked as the main block. Default is `false`
     * 
     */
    private @Nullable Boolean main;
    /**
     * @return A unique name for this configuration block. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    private String name;

    private ServiceVclVcl() {}
    /**
     * @return The custom VCL code to upload
     * 
     */
    public String content() {
        return this.content;
    }
    /**
     * @return If `true`, use this block as the main configuration. If `false`, use this block as an includable library. Only a single VCL block can be marked as the main block. Default is `false`
     * 
     */
    public Optional<Boolean> main() {
        return Optional.ofNullable(this.main);
    }
    /**
     * @return A unique name for this configuration block. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceVclVcl defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String content;
        private @Nullable Boolean main;
        private String name;
        public Builder() {}
        public Builder(ServiceVclVcl defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.main = defaults.main;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder content(String content) {
            if (content == null) {
              throw new MissingRequiredPropertyException("ServiceVclVcl", "content");
            }
            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder main(@Nullable Boolean main) {

            this.main = main;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ServiceVclVcl", "name");
            }
            this.name = name;
            return this;
        }
        public ServiceVclVcl build() {
            final var _resultValue = new ServiceVclVcl();
            _resultValue.content = content;
            _resultValue.main = main;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
