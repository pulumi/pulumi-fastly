// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.fastly.NgwafAccountRuleArgs;
import com.pulumi.fastly.Utilities;
import com.pulumi.fastly.inputs.NgwafAccountRuleState;
import com.pulumi.fastly.outputs.NgwafAccountRuleAction;
import com.pulumi.fastly.outputs.NgwafAccountRuleCondition;
import com.pulumi.fastly.outputs.NgwafAccountRuleGroupCondition;
import com.pulumi.fastly.outputs.NgwafAccountRuleRateLimit;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Fastly Next-Gen WAF Account Rule.\
 * Account-level rules apply across one or more workspaces and are useful for defining shared or global WAF logic.
 * 
 * ## Example Usage
 * 
 * Basic usage:
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.fastly.NgwafAccountRule;
 * import com.pulumi.fastly.NgwafAccountRuleArgs;
 * import com.pulumi.fastly.inputs.NgwafAccountRuleActionArgs;
 * import com.pulumi.fastly.inputs.NgwafAccountRuleConditionArgs;
 * import com.pulumi.fastly.inputs.NgwafAccountRuleGroupConditionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new NgwafAccountRule("example", NgwafAccountRuleArgs.builder()
 *             .appliesTos("*")
 *             .type("request")
 *             .description("example")
 *             .enabled(true)
 *             .requestLogging("sampled")
 *             .groupOperator("all")
 *             .actions(NgwafAccountRuleActionArgs.builder()
 *                 .type("block")
 *                 .build())
 *             .conditions(NgwafAccountRuleConditionArgs.builder()
 *                 .field("ip")
 *                 .operator("equals")
 *                 .value("1.2.3.4")
 *                 .build())
 *             .groupConditions(NgwafAccountRuleGroupConditionArgs.builder()
 *                 .groupOperator("all")
 *                 .conditions(NgwafAccountRuleGroupConditionConditionArgs.builder()
 *                     .field("method")
 *                     .operator("equals")
 *                     .value("POST")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Fastly Next-Gen WAF account rules can be imported using just the rule ID, e.g.:
 * 
 * ```sh
 * $ pulumi import fastly:index/ngwafAccountRule:NgwafAccountRule demo &lt;ruleID&gt;
 * ```
 * 
 */
@ResourceType(type="fastly:index/ngwafAccountRule:NgwafAccountRule")
public class NgwafAccountRule extends com.pulumi.resources.CustomResource {
    /**
     * List of actions to perform when the rule matches.
     * 
     */
    @Export(name="actions", refs={List.class,NgwafAccountRuleAction.class}, tree="[0,1]")
    private Output<List<NgwafAccountRuleAction>> actions;

    /**
     * @return List of actions to perform when the rule matches.
     * 
     */
    public Output<List<NgwafAccountRuleAction>> actions() {
        return this.actions;
    }
    /**
     * The list of workspace IDs this signal applies to, or the wildcard `*` if it applies to all workspaces.
     * 
     */
    @Export(name="appliesTos", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> appliesTos;

    /**
     * @return The list of workspace IDs this signal applies to, or the wildcard `*` if it applies to all workspaces.
     * 
     */
    public Output<List<String>> appliesTos() {
        return this.appliesTos;
    }
    /**
     * Flat list of individual conditions. Each must include `field`, `operator`, and `value`.
     * 
     */
    @Export(name="conditions", refs={List.class,NgwafAccountRuleCondition.class}, tree="[0,1]")
    private Output</* @Nullable */ List<NgwafAccountRuleCondition>> conditions;

    /**
     * @return Flat list of individual conditions. Each must include `field`, `operator`, and `value`.
     * 
     */
    public Output<Optional<List<NgwafAccountRuleCondition>>> conditions() {
        return Codegen.optional(this.conditions);
    }
    /**
     * The description of the rule.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return The description of the rule.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Whether the rule is currently enabled.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return Whether the rule is currently enabled.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * List of grouped conditions with nested logic. Each group must define a `groupOperator` and at least one condition.
     * 
     */
    @Export(name="groupConditions", refs={List.class,NgwafAccountRuleGroupCondition.class}, tree="[0,1]")
    private Output</* @Nullable */ List<NgwafAccountRuleGroupCondition>> groupConditions;

    /**
     * @return List of grouped conditions with nested logic. Each group must define a `groupOperator` and at least one condition.
     * 
     */
    public Output<Optional<List<NgwafAccountRuleGroupCondition>>> groupConditions() {
        return Codegen.optional(this.groupConditions);
    }
    /**
     * Logical operator to apply to group conditions. Accepted values are `any` and `all`.
     * 
     */
    @Export(name="groupOperator", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> groupOperator;

    /**
     * @return Logical operator to apply to group conditions. Accepted values are `any` and `all`.
     * 
     */
    public Output<Optional<String>> groupOperator() {
        return Codegen.optional(this.groupOperator);
    }
    /**
     * Block specifically for rate*limit rules.
     * 
     */
    @Export(name="rateLimit", refs={NgwafAccountRuleRateLimit.class}, tree="[0]")
    private Output</* @Nullable */ NgwafAccountRuleRateLimit> rateLimit;

    /**
     * @return Block specifically for rate*limit rules.
     * 
     */
    public Output<Optional<NgwafAccountRuleRateLimit>> rateLimit() {
        return Codegen.optional(this.rateLimit);
    }
    /**
     * Logging behavior for matching requests. Accepted values are `sampled` and `none`.
     * 
     */
    @Export(name="requestLogging", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> requestLogging;

    /**
     * @return Logging behavior for matching requests. Accepted values are `sampled` and `none`.
     * 
     */
    public Output<Optional<String>> requestLogging() {
        return Codegen.optional(this.requestLogging);
    }
    /**
     * The type of the rule. Accepted values are `request` and `signal`.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of the rule. Accepted values are `request` and `signal`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NgwafAccountRule(java.lang.String name) {
        this(name, NgwafAccountRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NgwafAccountRule(java.lang.String name, NgwafAccountRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NgwafAccountRule(java.lang.String name, NgwafAccountRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/ngwafAccountRule:NgwafAccountRule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NgwafAccountRule(java.lang.String name, Output<java.lang.String> id, @Nullable NgwafAccountRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/ngwafAccountRule:NgwafAccountRule", name, state, makeResourceOptions(options, id), false);
    }

    private static NgwafAccountRuleArgs makeArgs(NgwafAccountRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NgwafAccountRuleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NgwafAccountRule get(java.lang.String name, Output<java.lang.String> id, @Nullable NgwafAccountRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NgwafAccountRule(name, id, state, options);
    }
}
