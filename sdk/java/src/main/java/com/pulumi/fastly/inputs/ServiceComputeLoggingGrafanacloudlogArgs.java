// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ServiceComputeLoggingGrafanacloudlogArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceComputeLoggingGrafanacloudlogArgs Empty = new ServiceComputeLoggingGrafanacloudlogArgs();

    /**
     * The stream identifier as a JSON string
     * 
     */
    @Import(name="index", required=true)
    private Output<String> index;

    /**
     * @return The stream identifier as a JSON string
     * 
     */
    public Output<String> index() {
        return this.index;
    }

    /**
     * The unique name of the GrafanaCloudLogs logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The unique name of the GrafanaCloudLogs logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The Access Policy Token key for your GrafanaCloudLogs account
     * 
     */
    @Import(name="token", required=true)
    private Output<String> token;

    /**
     * @return The Access Policy Token key for your GrafanaCloudLogs account
     * 
     */
    public Output<String> token() {
        return this.token;
    }

    /**
     * The URL to stream logs to
     * 
     */
    @Import(name="url", required=true)
    private Output<String> url;

    /**
     * @return The URL to stream logs to
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    /**
     * The Grafana User ID
     * 
     */
    @Import(name="user", required=true)
    private Output<String> user;

    /**
     * @return The Grafana User ID
     * 
     */
    public Output<String> user() {
        return this.user;
    }

    private ServiceComputeLoggingGrafanacloudlogArgs() {}

    private ServiceComputeLoggingGrafanacloudlogArgs(ServiceComputeLoggingGrafanacloudlogArgs $) {
        this.index = $.index;
        this.name = $.name;
        this.token = $.token;
        this.url = $.url;
        this.user = $.user;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceComputeLoggingGrafanacloudlogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceComputeLoggingGrafanacloudlogArgs $;

        public Builder() {
            $ = new ServiceComputeLoggingGrafanacloudlogArgs();
        }

        public Builder(ServiceComputeLoggingGrafanacloudlogArgs defaults) {
            $ = new ServiceComputeLoggingGrafanacloudlogArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param index The stream identifier as a JSON string
         * 
         * @return builder
         * 
         */
        public Builder index(Output<String> index) {
            $.index = index;
            return this;
        }

        /**
         * @param index The stream identifier as a JSON string
         * 
         * @return builder
         * 
         */
        public Builder index(String index) {
            return index(Output.of(index));
        }

        /**
         * @param name The unique name of the GrafanaCloudLogs logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The unique name of the GrafanaCloudLogs logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param token The Access Policy Token key for your GrafanaCloudLogs account
         * 
         * @return builder
         * 
         */
        public Builder token(Output<String> token) {
            $.token = token;
            return this;
        }

        /**
         * @param token The Access Policy Token key for your GrafanaCloudLogs account
         * 
         * @return builder
         * 
         */
        public Builder token(String token) {
            return token(Output.of(token));
        }

        /**
         * @param url The URL to stream logs to
         * 
         * @return builder
         * 
         */
        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url The URL to stream logs to
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        /**
         * @param user The Grafana User ID
         * 
         * @return builder
         * 
         */
        public Builder user(Output<String> user) {
            $.user = user;
            return this;
        }

        /**
         * @param user The Grafana User ID
         * 
         * @return builder
         * 
         */
        public Builder user(String user) {
            return user(Output.of(user));
        }

        public ServiceComputeLoggingGrafanacloudlogArgs build() {
            if ($.index == null) {
                throw new MissingRequiredPropertyException("ServiceComputeLoggingGrafanacloudlogArgs", "index");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ServiceComputeLoggingGrafanacloudlogArgs", "name");
            }
            if ($.token == null) {
                throw new MissingRequiredPropertyException("ServiceComputeLoggingGrafanacloudlogArgs", "token");
            }
            if ($.url == null) {
                throw new MissingRequiredPropertyException("ServiceComputeLoggingGrafanacloudlogArgs", "url");
            }
            if ($.user == null) {
                throw new MissingRequiredPropertyException("ServiceComputeLoggingGrafanacloudlogArgs", "user");
            }
            return $;
        }
    }

}
