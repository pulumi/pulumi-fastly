// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceVclLoggingKinese {
    /**
     * @return The AWS access key to be used to write to the stream
     * 
     */
    private @Nullable String accessKey;
    /**
     * @return Apache style log formatting.
     * 
     */
    private @Nullable String format;
    /**
     * @return The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).
     * 
     */
    private @Nullable Integer formatVersion;
    /**
     * @return The Amazon Resource Name (ARN) for the IAM role granting Fastly access to Kinesis. Not required if `access_key` and `secret_key` are provided.
     * 
     */
    private @Nullable String iamRole;
    /**
     * @return The unique name of the Kinesis logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    private String name;
    /**
     * @return Where in the generated VCL the logging call should be placed. Can be `none` or `none`.
     * 
     */
    private @Nullable String placement;
    /**
     * @return The AWS region the stream resides in. (Default: `us-east-1`)
     * 
     */
    private @Nullable String region;
    /**
     * @return The name of an existing condition in the configured endpoint, or leave blank to always execute.
     * 
     */
    private @Nullable String responseCondition;
    /**
     * @return The AWS secret access key to authenticate with
     * 
     */
    private @Nullable String secretKey;
    /**
     * @return The Kinesis stream name
     * 
     */
    private String topic;

    private ServiceVclLoggingKinese() {}
    /**
     * @return The AWS access key to be used to write to the stream
     * 
     */
    public Optional<String> accessKey() {
        return Optional.ofNullable(this.accessKey);
    }
    /**
     * @return Apache style log formatting.
     * 
     */
    public Optional<String> format() {
        return Optional.ofNullable(this.format);
    }
    /**
     * @return The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).
     * 
     */
    public Optional<Integer> formatVersion() {
        return Optional.ofNullable(this.formatVersion);
    }
    /**
     * @return The Amazon Resource Name (ARN) for the IAM role granting Fastly access to Kinesis. Not required if `access_key` and `secret_key` are provided.
     * 
     */
    public Optional<String> iamRole() {
        return Optional.ofNullable(this.iamRole);
    }
    /**
     * @return The unique name of the Kinesis logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Where in the generated VCL the logging call should be placed. Can be `none` or `none`.
     * 
     */
    public Optional<String> placement() {
        return Optional.ofNullable(this.placement);
    }
    /**
     * @return The AWS region the stream resides in. (Default: `us-east-1`)
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return The name of an existing condition in the configured endpoint, or leave blank to always execute.
     * 
     */
    public Optional<String> responseCondition() {
        return Optional.ofNullable(this.responseCondition);
    }
    /**
     * @return The AWS secret access key to authenticate with
     * 
     */
    public Optional<String> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }
    /**
     * @return The Kinesis stream name
     * 
     */
    public String topic() {
        return this.topic;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceVclLoggingKinese defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessKey;
        private @Nullable String format;
        private @Nullable Integer formatVersion;
        private @Nullable String iamRole;
        private String name;
        private @Nullable String placement;
        private @Nullable String region;
        private @Nullable String responseCondition;
        private @Nullable String secretKey;
        private String topic;
        public Builder() {}
        public Builder(ServiceVclLoggingKinese defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKey = defaults.accessKey;
    	      this.format = defaults.format;
    	      this.formatVersion = defaults.formatVersion;
    	      this.iamRole = defaults.iamRole;
    	      this.name = defaults.name;
    	      this.placement = defaults.placement;
    	      this.region = defaults.region;
    	      this.responseCondition = defaults.responseCondition;
    	      this.secretKey = defaults.secretKey;
    	      this.topic = defaults.topic;
        }

        @CustomType.Setter
        public Builder accessKey(@Nullable String accessKey) {

            this.accessKey = accessKey;
            return this;
        }
        @CustomType.Setter
        public Builder format(@Nullable String format) {

            this.format = format;
            return this;
        }
        @CustomType.Setter
        public Builder formatVersion(@Nullable Integer formatVersion) {

            this.formatVersion = formatVersion;
            return this;
        }
        @CustomType.Setter
        public Builder iamRole(@Nullable String iamRole) {

            this.iamRole = iamRole;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ServiceVclLoggingKinese", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder placement(@Nullable String placement) {

            this.placement = placement;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder responseCondition(@Nullable String responseCondition) {

            this.responseCondition = responseCondition;
            return this;
        }
        @CustomType.Setter
        public Builder secretKey(@Nullable String secretKey) {

            this.secretKey = secretKey;
            return this;
        }
        @CustomType.Setter
        public Builder topic(String topic) {
            if (topic == null) {
              throw new MissingRequiredPropertyException("ServiceVclLoggingKinese", "topic");
            }
            this.topic = topic;
            return this;
        }
        public ServiceVclLoggingKinese build() {
            final var _resultValue = new ServiceVclLoggingKinese();
            _resultValue.accessKey = accessKey;
            _resultValue.format = format;
            _resultValue.formatVersion = formatVersion;
            _resultValue.iamRole = iamRole;
            _resultValue.name = name;
            _resultValue.placement = placement;
            _resultValue.region = region;
            _resultValue.responseCondition = responseCondition;
            _resultValue.secretKey = secretKey;
            _resultValue.topic = topic;
            return _resultValue;
        }
    }
}
