// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.fastly.ServiceComputeArgs;
import com.pulumi.fastly.Utilities;
import com.pulumi.fastly.inputs.ServiceComputeState;
import com.pulumi.fastly.outputs.ServiceComputeBackend;
import com.pulumi.fastly.outputs.ServiceComputeDictionary;
import com.pulumi.fastly.outputs.ServiceComputeDomain;
import com.pulumi.fastly.outputs.ServiceComputeImageOptimizerDefaultSettings;
import com.pulumi.fastly.outputs.ServiceComputeLoggingBigquery;
import com.pulumi.fastly.outputs.ServiceComputeLoggingBlobstorage;
import com.pulumi.fastly.outputs.ServiceComputeLoggingCloudfile;
import com.pulumi.fastly.outputs.ServiceComputeLoggingDatadog;
import com.pulumi.fastly.outputs.ServiceComputeLoggingDigitalocean;
import com.pulumi.fastly.outputs.ServiceComputeLoggingElasticsearch;
import com.pulumi.fastly.outputs.ServiceComputeLoggingFtp;
import com.pulumi.fastly.outputs.ServiceComputeLoggingGc;
import com.pulumi.fastly.outputs.ServiceComputeLoggingGooglepubsub;
import com.pulumi.fastly.outputs.ServiceComputeLoggingGrafanacloudlog;
import com.pulumi.fastly.outputs.ServiceComputeLoggingHeroku;
import com.pulumi.fastly.outputs.ServiceComputeLoggingHoneycomb;
import com.pulumi.fastly.outputs.ServiceComputeLoggingHttp;
import com.pulumi.fastly.outputs.ServiceComputeLoggingKafka;
import com.pulumi.fastly.outputs.ServiceComputeLoggingKinese;
import com.pulumi.fastly.outputs.ServiceComputeLoggingLogentry;
import com.pulumi.fastly.outputs.ServiceComputeLoggingLoggly;
import com.pulumi.fastly.outputs.ServiceComputeLoggingLogshuttle;
import com.pulumi.fastly.outputs.ServiceComputeLoggingNewrelic;
import com.pulumi.fastly.outputs.ServiceComputeLoggingOpenstack;
import com.pulumi.fastly.outputs.ServiceComputeLoggingPapertrail;
import com.pulumi.fastly.outputs.ServiceComputeLoggingS3;
import com.pulumi.fastly.outputs.ServiceComputeLoggingScalyr;
import com.pulumi.fastly.outputs.ServiceComputeLoggingSftp;
import com.pulumi.fastly.outputs.ServiceComputeLoggingSplunk;
import com.pulumi.fastly.outputs.ServiceComputeLoggingSumologic;
import com.pulumi.fastly.outputs.ServiceComputeLoggingSyslog;
import com.pulumi.fastly.outputs.ServiceComputePackage;
import com.pulumi.fastly.outputs.ServiceComputeProductEnablement;
import com.pulumi.fastly.outputs.ServiceComputeResourceLink;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * Fastly Services can be imported using their service ID, e.g.
 * 
 * ```sh
 * $ pulumi import fastly:index/serviceCompute:ServiceCompute demo xxxxxxxxxxxxxxxxxxxx
 * ```
 * 
 * By default, either the active version will be imported, or the latest version if no version is active.
 * 
 * Alternatively, a specific version of the service can be selected by appending an `{@literal @}` followed by the version number to the service ID, e.g.
 * 
 * ```sh
 * $ pulumi import fastly:index/serviceCompute:ServiceCompute demo xxxxxxxxxxxxxxxxxxxx{@literal @}2
 * ```
 * 
 */
@ResourceType(type="fastly:index/serviceCompute:ServiceCompute")
public class ServiceCompute extends com.pulumi.resources.CustomResource {
    /**
     * Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but
     * will not activate it if this is set to `false`. Default `true`
     * 
     */
    @Export(name="activate", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> activate;

    /**
     * @return Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but
     * will not activate it if this is set to `false`. Default `true`
     * 
     */
    public Output<Optional<Boolean>> activate() {
        return Codegen.optional(this.activate);
    }
    /**
     * The currently active version of your Fastly Service
     * 
     */
    @Export(name="activeVersion", refs={Integer.class}, tree="[0]")
    private Output<Integer> activeVersion;

    /**
     * @return The currently active version of your Fastly Service
     * 
     */
    public Output<Integer> activeVersion() {
        return this.activeVersion;
    }
    @Export(name="backends", refs={List.class,ServiceComputeBackend.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeBackend>> backends;

    public Output<Optional<List<ServiceComputeBackend>>> backends() {
        return Codegen.optional(this.backends);
    }
    /**
     * The latest cloned version by the provider
     * 
     */
    @Export(name="clonedVersion", refs={Integer.class}, tree="[0]")
    private Output<Integer> clonedVersion;

    /**
     * @return The latest cloned version by the provider
     * 
     */
    public Output<Integer> clonedVersion() {
        return this.clonedVersion;
    }
    @Export(name="comment", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> comment;

    public Output<Optional<String>> comment() {
        return Codegen.optional(this.comment);
    }
    @Export(name="dictionaries", refs={List.class,ServiceComputeDictionary.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeDictionary>> dictionaries;

    public Output<Optional<List<ServiceComputeDictionary>>> dictionaries() {
        return Codegen.optional(this.dictionaries);
    }
    /**
     * A set of Domain names to serve as entry points for your Service
     * 
     */
    @Export(name="domains", refs={List.class,ServiceComputeDomain.class}, tree="[0,1]")
    private Output<List<ServiceComputeDomain>> domains;

    /**
     * @return A set of Domain names to serve as entry points for your Service
     * 
     */
    public Output<List<ServiceComputeDomain>> domains() {
        return this.domains;
    }
    /**
     * Services that are active cannot be destroyed. In order to destroy the Service, set `force_destroy` to `true`. Default
     * `false`
     * 
     */
    @Export(name="forceDestroy", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> forceDestroy;

    /**
     * @return Services that are active cannot be destroyed. In order to destroy the Service, set `force_destroy` to `true`. Default
     * `false`
     * 
     */
    public Output<Optional<Boolean>> forceDestroy() {
        return Codegen.optional(this.forceDestroy);
    }
    @Export(name="forceRefresh", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> forceRefresh;

    public Output<Boolean> forceRefresh() {
        return this.forceRefresh;
    }
    @Export(name="imageOptimizerDefaultSettings", refs={ServiceComputeImageOptimizerDefaultSettings.class}, tree="[0]")
    private Output</* @Nullable */ ServiceComputeImageOptimizerDefaultSettings> imageOptimizerDefaultSettings;

    public Output<Optional<ServiceComputeImageOptimizerDefaultSettings>> imageOptimizerDefaultSettings() {
        return Codegen.optional(this.imageOptimizerDefaultSettings);
    }
    /**
     * Used internally by the provider to temporarily indicate if the service is being imported, and is reset to false once the
     * import is finished
     * 
     */
    @Export(name="imported", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> imported;

    /**
     * @return Used internally by the provider to temporarily indicate if the service is being imported, and is reset to false once the
     * import is finished
     * 
     */
    public Output<Boolean> imported() {
        return this.imported;
    }
    @Export(name="loggingBigqueries", refs={List.class,ServiceComputeLoggingBigquery.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingBigquery>> loggingBigqueries;

    public Output<Optional<List<ServiceComputeLoggingBigquery>>> loggingBigqueries() {
        return Codegen.optional(this.loggingBigqueries);
    }
    @Export(name="loggingBlobstorages", refs={List.class,ServiceComputeLoggingBlobstorage.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingBlobstorage>> loggingBlobstorages;

    public Output<Optional<List<ServiceComputeLoggingBlobstorage>>> loggingBlobstorages() {
        return Codegen.optional(this.loggingBlobstorages);
    }
    @Export(name="loggingCloudfiles", refs={List.class,ServiceComputeLoggingCloudfile.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingCloudfile>> loggingCloudfiles;

    public Output<Optional<List<ServiceComputeLoggingCloudfile>>> loggingCloudfiles() {
        return Codegen.optional(this.loggingCloudfiles);
    }
    @Export(name="loggingDatadogs", refs={List.class,ServiceComputeLoggingDatadog.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingDatadog>> loggingDatadogs;

    public Output<Optional<List<ServiceComputeLoggingDatadog>>> loggingDatadogs() {
        return Codegen.optional(this.loggingDatadogs);
    }
    @Export(name="loggingDigitaloceans", refs={List.class,ServiceComputeLoggingDigitalocean.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingDigitalocean>> loggingDigitaloceans;

    public Output<Optional<List<ServiceComputeLoggingDigitalocean>>> loggingDigitaloceans() {
        return Codegen.optional(this.loggingDigitaloceans);
    }
    @Export(name="loggingElasticsearches", refs={List.class,ServiceComputeLoggingElasticsearch.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingElasticsearch>> loggingElasticsearches;

    public Output<Optional<List<ServiceComputeLoggingElasticsearch>>> loggingElasticsearches() {
        return Codegen.optional(this.loggingElasticsearches);
    }
    @Export(name="loggingFtps", refs={List.class,ServiceComputeLoggingFtp.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingFtp>> loggingFtps;

    public Output<Optional<List<ServiceComputeLoggingFtp>>> loggingFtps() {
        return Codegen.optional(this.loggingFtps);
    }
    @Export(name="loggingGcs", refs={List.class,ServiceComputeLoggingGc.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingGc>> loggingGcs;

    public Output<Optional<List<ServiceComputeLoggingGc>>> loggingGcs() {
        return Codegen.optional(this.loggingGcs);
    }
    @Export(name="loggingGooglepubsubs", refs={List.class,ServiceComputeLoggingGooglepubsub.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingGooglepubsub>> loggingGooglepubsubs;

    public Output<Optional<List<ServiceComputeLoggingGooglepubsub>>> loggingGooglepubsubs() {
        return Codegen.optional(this.loggingGooglepubsubs);
    }
    @Export(name="loggingGrafanacloudlogs", refs={List.class,ServiceComputeLoggingGrafanacloudlog.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingGrafanacloudlog>> loggingGrafanacloudlogs;

    public Output<Optional<List<ServiceComputeLoggingGrafanacloudlog>>> loggingGrafanacloudlogs() {
        return Codegen.optional(this.loggingGrafanacloudlogs);
    }
    @Export(name="loggingHeroku", refs={List.class,ServiceComputeLoggingHeroku.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingHeroku>> loggingHeroku;

    public Output<Optional<List<ServiceComputeLoggingHeroku>>> loggingHeroku() {
        return Codegen.optional(this.loggingHeroku);
    }
    @Export(name="loggingHoneycombs", refs={List.class,ServiceComputeLoggingHoneycomb.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingHoneycomb>> loggingHoneycombs;

    public Output<Optional<List<ServiceComputeLoggingHoneycomb>>> loggingHoneycombs() {
        return Codegen.optional(this.loggingHoneycombs);
    }
    @Export(name="loggingHttps", refs={List.class,ServiceComputeLoggingHttp.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingHttp>> loggingHttps;

    public Output<Optional<List<ServiceComputeLoggingHttp>>> loggingHttps() {
        return Codegen.optional(this.loggingHttps);
    }
    @Export(name="loggingKafkas", refs={List.class,ServiceComputeLoggingKafka.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingKafka>> loggingKafkas;

    public Output<Optional<List<ServiceComputeLoggingKafka>>> loggingKafkas() {
        return Codegen.optional(this.loggingKafkas);
    }
    @Export(name="loggingKineses", refs={List.class,ServiceComputeLoggingKinese.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingKinese>> loggingKineses;

    public Output<Optional<List<ServiceComputeLoggingKinese>>> loggingKineses() {
        return Codegen.optional(this.loggingKineses);
    }
    @Export(name="loggingLogentries", refs={List.class,ServiceComputeLoggingLogentry.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingLogentry>> loggingLogentries;

    public Output<Optional<List<ServiceComputeLoggingLogentry>>> loggingLogentries() {
        return Codegen.optional(this.loggingLogentries);
    }
    @Export(name="loggingLogglies", refs={List.class,ServiceComputeLoggingLoggly.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingLoggly>> loggingLogglies;

    public Output<Optional<List<ServiceComputeLoggingLoggly>>> loggingLogglies() {
        return Codegen.optional(this.loggingLogglies);
    }
    @Export(name="loggingLogshuttles", refs={List.class,ServiceComputeLoggingLogshuttle.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingLogshuttle>> loggingLogshuttles;

    public Output<Optional<List<ServiceComputeLoggingLogshuttle>>> loggingLogshuttles() {
        return Codegen.optional(this.loggingLogshuttles);
    }
    @Export(name="loggingNewrelics", refs={List.class,ServiceComputeLoggingNewrelic.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingNewrelic>> loggingNewrelics;

    public Output<Optional<List<ServiceComputeLoggingNewrelic>>> loggingNewrelics() {
        return Codegen.optional(this.loggingNewrelics);
    }
    @Export(name="loggingOpenstacks", refs={List.class,ServiceComputeLoggingOpenstack.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingOpenstack>> loggingOpenstacks;

    public Output<Optional<List<ServiceComputeLoggingOpenstack>>> loggingOpenstacks() {
        return Codegen.optional(this.loggingOpenstacks);
    }
    @Export(name="loggingPapertrails", refs={List.class,ServiceComputeLoggingPapertrail.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingPapertrail>> loggingPapertrails;

    public Output<Optional<List<ServiceComputeLoggingPapertrail>>> loggingPapertrails() {
        return Codegen.optional(this.loggingPapertrails);
    }
    @Export(name="loggingS3s", refs={List.class,ServiceComputeLoggingS3.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingS3>> loggingS3s;

    public Output<Optional<List<ServiceComputeLoggingS3>>> loggingS3s() {
        return Codegen.optional(this.loggingS3s);
    }
    @Export(name="loggingScalyrs", refs={List.class,ServiceComputeLoggingScalyr.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingScalyr>> loggingScalyrs;

    public Output<Optional<List<ServiceComputeLoggingScalyr>>> loggingScalyrs() {
        return Codegen.optional(this.loggingScalyrs);
    }
    @Export(name="loggingSftps", refs={List.class,ServiceComputeLoggingSftp.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingSftp>> loggingSftps;

    public Output<Optional<List<ServiceComputeLoggingSftp>>> loggingSftps() {
        return Codegen.optional(this.loggingSftps);
    }
    @Export(name="loggingSplunks", refs={List.class,ServiceComputeLoggingSplunk.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingSplunk>> loggingSplunks;

    public Output<Optional<List<ServiceComputeLoggingSplunk>>> loggingSplunks() {
        return Codegen.optional(this.loggingSplunks);
    }
    @Export(name="loggingSumologics", refs={List.class,ServiceComputeLoggingSumologic.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingSumologic>> loggingSumologics;

    public Output<Optional<List<ServiceComputeLoggingSumologic>>> loggingSumologics() {
        return Codegen.optional(this.loggingSumologics);
    }
    @Export(name="loggingSyslogs", refs={List.class,ServiceComputeLoggingSyslog.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeLoggingSyslog>> loggingSyslogs;

    public Output<Optional<List<ServiceComputeLoggingSyslog>>> loggingSyslogs() {
        return Codegen.optional(this.loggingSyslogs);
    }
    /**
     * The unique name for the Service to create
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The unique name for the Service to create
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The `package` block supports uploading or modifying Wasm packages for use in a Fastly Compute service (if omitted,
     * ensure `activate = false` is set on `fastly.ServiceCompute` to avoid service validation errors). See Fastly&#39;s
     * documentation on [Compute](https://developer.fastly.com/learning/compute/)
     * 
     */
    @Export(name="package", refs={ServiceComputePackage.class}, tree="[0]")
    private Output</* @Nullable */ ServiceComputePackage> package_;

    /**
     * @return The `package` block supports uploading or modifying Wasm packages for use in a Fastly Compute service (if omitted,
     * ensure `activate = false` is set on `fastly.ServiceCompute` to avoid service validation errors). See Fastly&#39;s
     * documentation on [Compute](https://developer.fastly.com/learning/compute/)
     * 
     */
    public Output<Optional<ServiceComputePackage>> package_() {
        return Codegen.optional(this.package_);
    }
    @Export(name="productEnablement", refs={ServiceComputeProductEnablement.class}, tree="[0]")
    private Output</* @Nullable */ ServiceComputeProductEnablement> productEnablement;

    public Output<Optional<ServiceComputeProductEnablement>> productEnablement() {
        return Codegen.optional(this.productEnablement);
    }
    /**
     * A resource link represents a link between a shared resource (such as an KV Store or Config Store) and a service version.
     * 
     */
    @Export(name="resourceLinks", refs={List.class,ServiceComputeResourceLink.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceComputeResourceLink>> resourceLinks;

    /**
     * @return A resource link represents a link between a shared resource (such as an KV Store or Config Store) and a service version.
     * 
     */
    public Output<Optional<List<ServiceComputeResourceLink>>> resourceLinks() {
        return Codegen.optional(this.resourceLinks);
    }
    @Export(name="reuse", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> reuse;

    public Output<Optional<Boolean>> reuse() {
        return Codegen.optional(this.reuse);
    }
    /**
     * Description field for the version
     * 
     */
    @Export(name="versionComment", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> versionComment;

    /**
     * @return Description field for the version
     * 
     */
    public Output<Optional<String>> versionComment() {
        return Codegen.optional(this.versionComment);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServiceCompute(java.lang.String name) {
        this(name, ServiceComputeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServiceCompute(java.lang.String name, ServiceComputeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceCompute(java.lang.String name, ServiceComputeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/serviceCompute:ServiceCompute", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ServiceCompute(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceComputeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/serviceCompute:ServiceCompute", name, state, makeResourceOptions(options, id), false);
    }

    private static ServiceComputeArgs makeArgs(ServiceComputeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ServiceComputeArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceCompute get(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceComputeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServiceCompute(name, id, state, options);
    }
}
