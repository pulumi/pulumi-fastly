// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceComputeProductEnablementArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceComputeProductEnablementArgs Empty = new ServiceComputeProductEnablementArgs();

    /**
     * Enable Fanout support
     * 
     */
    @Import(name="fanout")
    private @Nullable Output<Boolean> fanout;

    /**
     * @return Enable Fanout support
     * 
     */
    public Optional<Output<Boolean>> fanout() {
        return Optional.ofNullable(this.fanout);
    }

    /**
     * Used by the provider to identify modified settings (changing this value will force the entire block to be deleted, then recreated)
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Used by the provider to identify modified settings (changing this value will force the entire block to be deleted, then recreated)
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Enable WebSockets support
     * 
     */
    @Import(name="websockets")
    private @Nullable Output<Boolean> websockets;

    /**
     * @return Enable WebSockets support
     * 
     */
    public Optional<Output<Boolean>> websockets() {
        return Optional.ofNullable(this.websockets);
    }

    private ServiceComputeProductEnablementArgs() {}

    private ServiceComputeProductEnablementArgs(ServiceComputeProductEnablementArgs $) {
        this.fanout = $.fanout;
        this.name = $.name;
        this.websockets = $.websockets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceComputeProductEnablementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceComputeProductEnablementArgs $;

        public Builder() {
            $ = new ServiceComputeProductEnablementArgs();
        }

        public Builder(ServiceComputeProductEnablementArgs defaults) {
            $ = new ServiceComputeProductEnablementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fanout Enable Fanout support
         * 
         * @return builder
         * 
         */
        public Builder fanout(@Nullable Output<Boolean> fanout) {
            $.fanout = fanout;
            return this;
        }

        /**
         * @param fanout Enable Fanout support
         * 
         * @return builder
         * 
         */
        public Builder fanout(Boolean fanout) {
            return fanout(Output.of(fanout));
        }

        /**
         * @param name Used by the provider to identify modified settings (changing this value will force the entire block to be deleted, then recreated)
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Used by the provider to identify modified settings (changing this value will force the entire block to be deleted, then recreated)
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param websockets Enable WebSockets support
         * 
         * @return builder
         * 
         */
        public Builder websockets(@Nullable Output<Boolean> websockets) {
            $.websockets = websockets;
            return this;
        }

        /**
         * @param websockets Enable WebSockets support
         * 
         * @return builder
         * 
         */
        public Builder websockets(Boolean websockets) {
            return websockets(Output.of(websockets));
        }

        public ServiceComputeProductEnablementArgs build() {
            return $;
        }
    }

}
