// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceComputeLoggingSumologic {
    /**
     * @return How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`
     * 
     */
    private @Nullable String messageType;
    /**
     * @return A unique name to identify this Sumologic endpoint. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    private String name;
    /**
     * @return Region where logs will be processed before streaming to BigQuery. Valid values are &#39;none&#39;, &#39;us&#39; and &#39;eu&#39;.
     * 
     */
    private @Nullable String processingRegion;
    /**
     * @return The URL to Sumologic collector endpoint
     * 
     */
    private String url;

    private ServiceComputeLoggingSumologic() {}
    /**
     * @return How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default is `classic`
     * 
     */
    public Optional<String> messageType() {
        return Optional.ofNullable(this.messageType);
    }
    /**
     * @return A unique name to identify this Sumologic endpoint. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Region where logs will be processed before streaming to BigQuery. Valid values are &#39;none&#39;, &#39;us&#39; and &#39;eu&#39;.
     * 
     */
    public Optional<String> processingRegion() {
        return Optional.ofNullable(this.processingRegion);
    }
    /**
     * @return The URL to Sumologic collector endpoint
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceComputeLoggingSumologic defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String messageType;
        private String name;
        private @Nullable String processingRegion;
        private String url;
        public Builder() {}
        public Builder(ServiceComputeLoggingSumologic defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.messageType = defaults.messageType;
    	      this.name = defaults.name;
    	      this.processingRegion = defaults.processingRegion;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder messageType(@Nullable String messageType) {

            this.messageType = messageType;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ServiceComputeLoggingSumologic", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder processingRegion(@Nullable String processingRegion) {

            this.processingRegion = processingRegion;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("ServiceComputeLoggingSumologic", "url");
            }
            this.url = url;
            return this;
        }
        public ServiceComputeLoggingSumologic build() {
            final var _resultValue = new ServiceComputeLoggingSumologic();
            _resultValue.messageType = messageType;
            _resultValue.name = name;
            _resultValue.processingRegion = processingRegion;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
