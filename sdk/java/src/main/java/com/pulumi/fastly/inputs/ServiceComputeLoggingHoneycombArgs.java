// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceComputeLoggingHoneycombArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceComputeLoggingHoneycombArgs Empty = new ServiceComputeLoggingHoneycombArgs();

    /**
     * The Honeycomb Dataset you want to log to
     * 
     */
    @Import(name="dataset", required=true)
    private Output<String> dataset;

    /**
     * @return The Honeycomb Dataset you want to log to
     * 
     */
    public Output<String> dataset() {
        return this.dataset;
    }

    /**
     * The unique name of the Honeycomb logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The unique name of the Honeycomb logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Region where logs will be processed before streaming to BigQuery. Valid values are &#39;none&#39;, &#39;us&#39; and &#39;eu&#39;.
     * 
     */
    @Import(name="processingRegion")
    private @Nullable Output<String> processingRegion;

    /**
     * @return Region where logs will be processed before streaming to BigQuery. Valid values are &#39;none&#39;, &#39;us&#39; and &#39;eu&#39;.
     * 
     */
    public Optional<Output<String>> processingRegion() {
        return Optional.ofNullable(this.processingRegion);
    }

    /**
     * The Write Key from the Account page of your Honeycomb account
     * 
     */
    @Import(name="token", required=true)
    private Output<String> token;

    /**
     * @return The Write Key from the Account page of your Honeycomb account
     * 
     */
    public Output<String> token() {
        return this.token;
    }

    private ServiceComputeLoggingHoneycombArgs() {}

    private ServiceComputeLoggingHoneycombArgs(ServiceComputeLoggingHoneycombArgs $) {
        this.dataset = $.dataset;
        this.name = $.name;
        this.processingRegion = $.processingRegion;
        this.token = $.token;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceComputeLoggingHoneycombArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceComputeLoggingHoneycombArgs $;

        public Builder() {
            $ = new ServiceComputeLoggingHoneycombArgs();
        }

        public Builder(ServiceComputeLoggingHoneycombArgs defaults) {
            $ = new ServiceComputeLoggingHoneycombArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataset The Honeycomb Dataset you want to log to
         * 
         * @return builder
         * 
         */
        public Builder dataset(Output<String> dataset) {
            $.dataset = dataset;
            return this;
        }

        /**
         * @param dataset The Honeycomb Dataset you want to log to
         * 
         * @return builder
         * 
         */
        public Builder dataset(String dataset) {
            return dataset(Output.of(dataset));
        }

        /**
         * @param name The unique name of the Honeycomb logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The unique name of the Honeycomb logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param processingRegion Region where logs will be processed before streaming to BigQuery. Valid values are &#39;none&#39;, &#39;us&#39; and &#39;eu&#39;.
         * 
         * @return builder
         * 
         */
        public Builder processingRegion(@Nullable Output<String> processingRegion) {
            $.processingRegion = processingRegion;
            return this;
        }

        /**
         * @param processingRegion Region where logs will be processed before streaming to BigQuery. Valid values are &#39;none&#39;, &#39;us&#39; and &#39;eu&#39;.
         * 
         * @return builder
         * 
         */
        public Builder processingRegion(String processingRegion) {
            return processingRegion(Output.of(processingRegion));
        }

        /**
         * @param token The Write Key from the Account page of your Honeycomb account
         * 
         * @return builder
         * 
         */
        public Builder token(Output<String> token) {
            $.token = token;
            return this;
        }

        /**
         * @param token The Write Key from the Account page of your Honeycomb account
         * 
         * @return builder
         * 
         */
        public Builder token(String token) {
            return token(Output.of(token));
        }

        public ServiceComputeLoggingHoneycombArgs build() {
            if ($.dataset == null) {
                throw new MissingRequiredPropertyException("ServiceComputeLoggingHoneycombArgs", "dataset");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ServiceComputeLoggingHoneycombArgs", "name");
            }
            if ($.token == null) {
                throw new MissingRequiredPropertyException("ServiceComputeLoggingHoneycombArgs", "token");
            }
            return $;
        }
    }

}
