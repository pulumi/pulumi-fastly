// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceVclRequestSetting {
    /**
     * @return Allows you to terminate request handling and immediately perform an action. When set it can be `lookup` or `pass` (Ignore the cache completely)
     * 
     */
    private @Nullable String action;
    /**
     * @return Disable collapsed forwarding, so you don&#39;t wait for other objects to origin
     * 
     */
    private @Nullable Boolean bypassBusyWait;
    /**
     * @return Sets the host header
     * 
     */
    private @Nullable String defaultHost;
    /**
     * @return Force a cache miss for the request. If specified, can be `true` or `false`
     * 
     */
    private @Nullable Boolean forceMiss;
    /**
     * @return Forces the request to use SSL (Redirects a non-SSL request to SSL)
     * 
     */
    private @Nullable Boolean forceSsl;
    /**
     * @return Injects Fastly-Geo-Country, Fastly-Geo-City, and Fastly-Geo-Region into the request headers
     * 
     * @deprecated
     * &#39;geo_headers&#39; attribute has been deprecated and will be removed in the next major version release
     * 
     */
    @Deprecated /* 'geo_headers' attribute has been deprecated and will be removed in the next major version release */
    private @Nullable Boolean geoHeaders;
    /**
     * @return Comma separated list of varnish request object fields that should be in the hash key
     * 
     */
    private @Nullable String hashKeys;
    /**
     * @return How old an object is allowed to be to serve `stale-if-error` or `stale-while-revalidate`, in seconds
     * 
     */
    private @Nullable Integer maxStaleAge;
    /**
     * @return Unique name to refer to this Request Setting. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    private String name;
    /**
     * @return Name of already defined `condition` to determine if this request setting should be applied
     * 
     */
    private @Nullable String requestCondition;
    /**
     * @return Injects the X-Timer info into the request for viewing origin fetch durations
     * 
     */
    private @Nullable Boolean timerSupport;
    /**
     * @return X-Forwarded-For, should be `clear`, `leave`, `append`, `append_all`, or `overwrite`. Default `append`
     * 
     */
    private @Nullable String xff;

    private ServiceVclRequestSetting() {}
    /**
     * @return Allows you to terminate request handling and immediately perform an action. When set it can be `lookup` or `pass` (Ignore the cache completely)
     * 
     */
    public Optional<String> action() {
        return Optional.ofNullable(this.action);
    }
    /**
     * @return Disable collapsed forwarding, so you don&#39;t wait for other objects to origin
     * 
     */
    public Optional<Boolean> bypassBusyWait() {
        return Optional.ofNullable(this.bypassBusyWait);
    }
    /**
     * @return Sets the host header
     * 
     */
    public Optional<String> defaultHost() {
        return Optional.ofNullable(this.defaultHost);
    }
    /**
     * @return Force a cache miss for the request. If specified, can be `true` or `false`
     * 
     */
    public Optional<Boolean> forceMiss() {
        return Optional.ofNullable(this.forceMiss);
    }
    /**
     * @return Forces the request to use SSL (Redirects a non-SSL request to SSL)
     * 
     */
    public Optional<Boolean> forceSsl() {
        return Optional.ofNullable(this.forceSsl);
    }
    /**
     * @return Injects Fastly-Geo-Country, Fastly-Geo-City, and Fastly-Geo-Region into the request headers
     * 
     * @deprecated
     * &#39;geo_headers&#39; attribute has been deprecated and will be removed in the next major version release
     * 
     */
    @Deprecated /* 'geo_headers' attribute has been deprecated and will be removed in the next major version release */
    public Optional<Boolean> geoHeaders() {
        return Optional.ofNullable(this.geoHeaders);
    }
    /**
     * @return Comma separated list of varnish request object fields that should be in the hash key
     * 
     */
    public Optional<String> hashKeys() {
        return Optional.ofNullable(this.hashKeys);
    }
    /**
     * @return How old an object is allowed to be to serve `stale-if-error` or `stale-while-revalidate`, in seconds
     * 
     */
    public Optional<Integer> maxStaleAge() {
        return Optional.ofNullable(this.maxStaleAge);
    }
    /**
     * @return Unique name to refer to this Request Setting. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Name of already defined `condition` to determine if this request setting should be applied
     * 
     */
    public Optional<String> requestCondition() {
        return Optional.ofNullable(this.requestCondition);
    }
    /**
     * @return Injects the X-Timer info into the request for viewing origin fetch durations
     * 
     */
    public Optional<Boolean> timerSupport() {
        return Optional.ofNullable(this.timerSupport);
    }
    /**
     * @return X-Forwarded-For, should be `clear`, `leave`, `append`, `append_all`, or `overwrite`. Default `append`
     * 
     */
    public Optional<String> xff() {
        return Optional.ofNullable(this.xff);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceVclRequestSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String action;
        private @Nullable Boolean bypassBusyWait;
        private @Nullable String defaultHost;
        private @Nullable Boolean forceMiss;
        private @Nullable Boolean forceSsl;
        private @Nullable Boolean geoHeaders;
        private @Nullable String hashKeys;
        private @Nullable Integer maxStaleAge;
        private String name;
        private @Nullable String requestCondition;
        private @Nullable Boolean timerSupport;
        private @Nullable String xff;
        public Builder() {}
        public Builder(ServiceVclRequestSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.bypassBusyWait = defaults.bypassBusyWait;
    	      this.defaultHost = defaults.defaultHost;
    	      this.forceMiss = defaults.forceMiss;
    	      this.forceSsl = defaults.forceSsl;
    	      this.geoHeaders = defaults.geoHeaders;
    	      this.hashKeys = defaults.hashKeys;
    	      this.maxStaleAge = defaults.maxStaleAge;
    	      this.name = defaults.name;
    	      this.requestCondition = defaults.requestCondition;
    	      this.timerSupport = defaults.timerSupport;
    	      this.xff = defaults.xff;
        }

        @CustomType.Setter
        public Builder action(@Nullable String action) {
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder bypassBusyWait(@Nullable Boolean bypassBusyWait) {
            this.bypassBusyWait = bypassBusyWait;
            return this;
        }
        @CustomType.Setter
        public Builder defaultHost(@Nullable String defaultHost) {
            this.defaultHost = defaultHost;
            return this;
        }
        @CustomType.Setter
        public Builder forceMiss(@Nullable Boolean forceMiss) {
            this.forceMiss = forceMiss;
            return this;
        }
        @CustomType.Setter
        public Builder forceSsl(@Nullable Boolean forceSsl) {
            this.forceSsl = forceSsl;
            return this;
        }
        @CustomType.Setter
        public Builder geoHeaders(@Nullable Boolean geoHeaders) {
            this.geoHeaders = geoHeaders;
            return this;
        }
        @CustomType.Setter
        public Builder hashKeys(@Nullable String hashKeys) {
            this.hashKeys = hashKeys;
            return this;
        }
        @CustomType.Setter
        public Builder maxStaleAge(@Nullable Integer maxStaleAge) {
            this.maxStaleAge = maxStaleAge;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder requestCondition(@Nullable String requestCondition) {
            this.requestCondition = requestCondition;
            return this;
        }
        @CustomType.Setter
        public Builder timerSupport(@Nullable Boolean timerSupport) {
            this.timerSupport = timerSupport;
            return this;
        }
        @CustomType.Setter
        public Builder xff(@Nullable String xff) {
            this.xff = xff;
            return this;
        }
        public ServiceVclRequestSetting build() {
            final var o = new ServiceVclRequestSetting();
            o.action = action;
            o.bypassBusyWait = bypassBusyWait;
            o.defaultHost = defaultHost;
            o.forceMiss = forceMiss;
            o.forceSsl = forceSsl;
            o.geoHeaders = geoHeaders;
            o.hashKeys = hashKeys;
            o.maxStaleAge = maxStaleAge;
            o.name = name;
            o.requestCondition = requestCondition;
            o.timerSupport = timerSupport;
            o.xff = xff;
            return o;
        }
    }
}
