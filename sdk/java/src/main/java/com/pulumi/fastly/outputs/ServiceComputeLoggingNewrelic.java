// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceComputeLoggingNewrelic {
    /**
     * @return The unique name of the New Relic logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    private String name;
    /**
     * @return The region that log data will be sent to. Default: `US`
     * 
     */
    private @Nullable String region;
    /**
     * @return The Insert API key from the Account page of your New Relic account
     * 
     */
    private String token;

    private ServiceComputeLoggingNewrelic() {}
    /**
     * @return The unique name of the New Relic logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The region that log data will be sent to. Default: `US`
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return The Insert API key from the Account page of your New Relic account
     * 
     */
    public String token() {
        return this.token;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceComputeLoggingNewrelic defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private @Nullable String region;
        private String token;
        public Builder() {}
        public Builder(ServiceComputeLoggingNewrelic defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.region = defaults.region;
    	      this.token = defaults.token;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ServiceComputeLoggingNewrelic", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder token(String token) {
            if (token == null) {
              throw new MissingRequiredPropertyException("ServiceComputeLoggingNewrelic", "token");
            }
            this.token = token;
            return this;
        }
        public ServiceComputeLoggingNewrelic build() {
            final var _resultValue = new ServiceComputeLoggingNewrelic();
            _resultValue.name = name;
            _resultValue.region = region;
            _resultValue.token = token;
            return _resultValue;
        }
    }
}
