// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObjectStorageAccessKeysState extends com.pulumi.resources.ResourceArgs {

    public static final ObjectStorageAccessKeysState Empty = new ObjectStorageAccessKeysState();

    /**
     * ID for the object storage access token
     * 
     */
    @Import(name="accessKeyId")
    private @Nullable Output<String> accessKeyId;

    /**
     * @return ID for the object storage access token
     * 
     */
    public Optional<Output<String>> accessKeyId() {
        return Optional.ofNullable(this.accessKeyId);
    }

    /**
     * Optional list of buckets the access key will be associated with.  Example: `[&#34;bucket1&#34;, &#34;bucket2&#34;]`
     * 
     */
    @Import(name="buckets")
    private @Nullable Output<List<String>> buckets;

    /**
     * @return Optional list of buckets the access key will be associated with.  Example: `[&#34;bucket1&#34;, &#34;bucket2&#34;]`
     * 
     */
    public Optional<Output<List<String>>> buckets() {
        return Optional.ofNullable(this.buckets);
    }

    /**
     * The description of the access key
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the access key
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The permissions of the access key
     * 
     */
    @Import(name="permission")
    private @Nullable Output<String> permission;

    /**
     * @return The permissions of the access key
     * 
     */
    public Optional<Output<String>> permission() {
        return Optional.ofNullable(this.permission);
    }

    /**
     * Secret key for the object storage access token
     * 
     */
    @Import(name="secretKey")
    private @Nullable Output<String> secretKey;

    /**
     * @return Secret key for the object storage access token
     * 
     */
    public Optional<Output<String>> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }

    private ObjectStorageAccessKeysState() {}

    private ObjectStorageAccessKeysState(ObjectStorageAccessKeysState $) {
        this.accessKeyId = $.accessKeyId;
        this.buckets = $.buckets;
        this.description = $.description;
        this.permission = $.permission;
        this.secretKey = $.secretKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObjectStorageAccessKeysState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObjectStorageAccessKeysState $;

        public Builder() {
            $ = new ObjectStorageAccessKeysState();
        }

        public Builder(ObjectStorageAccessKeysState defaults) {
            $ = new ObjectStorageAccessKeysState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKeyId ID for the object storage access token
         * 
         * @return builder
         * 
         */
        public Builder accessKeyId(@Nullable Output<String> accessKeyId) {
            $.accessKeyId = accessKeyId;
            return this;
        }

        /**
         * @param accessKeyId ID for the object storage access token
         * 
         * @return builder
         * 
         */
        public Builder accessKeyId(String accessKeyId) {
            return accessKeyId(Output.of(accessKeyId));
        }

        /**
         * @param buckets Optional list of buckets the access key will be associated with.  Example: `[&#34;bucket1&#34;, &#34;bucket2&#34;]`
         * 
         * @return builder
         * 
         */
        public Builder buckets(@Nullable Output<List<String>> buckets) {
            $.buckets = buckets;
            return this;
        }

        /**
         * @param buckets Optional list of buckets the access key will be associated with.  Example: `[&#34;bucket1&#34;, &#34;bucket2&#34;]`
         * 
         * @return builder
         * 
         */
        public Builder buckets(List<String> buckets) {
            return buckets(Output.of(buckets));
        }

        /**
         * @param buckets Optional list of buckets the access key will be associated with.  Example: `[&#34;bucket1&#34;, &#34;bucket2&#34;]`
         * 
         * @return builder
         * 
         */
        public Builder buckets(String... buckets) {
            return buckets(List.of(buckets));
        }

        /**
         * @param description The description of the access key
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the access key
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param permission The permissions of the access key
         * 
         * @return builder
         * 
         */
        public Builder permission(@Nullable Output<String> permission) {
            $.permission = permission;
            return this;
        }

        /**
         * @param permission The permissions of the access key
         * 
         * @return builder
         * 
         */
        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        /**
         * @param secretKey Secret key for the object storage access token
         * 
         * @return builder
         * 
         */
        public Builder secretKey(@Nullable Output<String> secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        /**
         * @param secretKey Secret key for the object storage access token
         * 
         * @return builder
         * 
         */
        public Builder secretKey(String secretKey) {
            return secretKey(Output.of(secretKey));
        }

        public ObjectStorageAccessKeysState build() {
            return $;
        }
    }

}
