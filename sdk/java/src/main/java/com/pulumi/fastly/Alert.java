// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.fastly.AlertArgs;
import com.pulumi.fastly.Utilities;
import com.pulumi.fastly.inputs.AlertState;
import com.pulumi.fastly.outputs.AlertDimensions;
import com.pulumi.fastly.outputs.AlertEvaluationStrategy;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Fastly Alert. Alerts send notifications to custom integrations (e.g., Slack channels, PagerDuty, Microsoft Teams and New Relic) when an observed metric either exceeds or falls below a threshold.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.fastly.ServiceVcl;
 * import com.pulumi.fastly.ServiceVclArgs;
 * import com.pulumi.fastly.Integration;
 * import com.pulumi.fastly.IntegrationArgs;
 * import com.pulumi.fastly.Alert;
 * import com.pulumi.fastly.AlertArgs;
 * import com.pulumi.fastly.inputs.AlertEvaluationStrategyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ServiceVcl("example", ServiceVclArgs.builder()
 *             .name("my_vcl_service")
 *             .build());
 * 
 *         var exampleIntegration = new Integration("exampleIntegration", IntegrationArgs.builder()
 *             .name("my_integration")
 *             .build());
 * 
 *         var exampleAlert = new Alert("exampleAlert", AlertArgs.builder()
 *             .name("my_vcl_service errors")
 *             .serviceId(example.id())
 *             .source("stats")
 *             .metric("status_5xx")
 *             .evaluationStrategy(AlertEvaluationStrategyArgs.builder()
 *                 .type("above_threshold")
 *                 .period("5m")
 *                 .threshold(10.0)
 *                 .build())
 *             .integrationIds(exampleIntegration.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Fastly Alerts can be imported using their ID, e.g.
 * 
 * ```sh
 * $ pulumi import fastly:index/alert:Alert example xxxxxxxxxxxxxxxxxxxx
 * ```
 * 
 */
@ResourceType(type="fastly:index/alert:Alert")
public class Alert extends com.pulumi.resources.CustomResource {
    /**
     * Additional text that is included in the alert notification.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Additional text that is included in the alert notification.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * More filters depending on the source type.
     * 
     */
    @Export(name="dimensions", refs={AlertDimensions.class}, tree="[0]")
    private Output</* @Nullable */ AlertDimensions> dimensions;

    /**
     * @return More filters depending on the source type.
     * 
     */
    public Output<Optional<AlertDimensions>> dimensions() {
        return Codegen.optional(this.dimensions);
    }
    /**
     * Criteria on how to alert.
     * 
     */
    @Export(name="evaluationStrategy", refs={AlertEvaluationStrategy.class}, tree="[0]")
    private Output<AlertEvaluationStrategy> evaluationStrategy;

    /**
     * @return Criteria on how to alert.
     * 
     */
    public Output<AlertEvaluationStrategy> evaluationStrategy() {
        return this.evaluationStrategy;
    }
    /**
     * List of integrations used to notify when alert fires.
     * 
     */
    @Export(name="integrationIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> integrationIds;

    /**
     * @return List of integrations used to notify when alert fires.
     * 
     */
    public Output<Optional<List<String>>> integrationIds() {
        return Codegen.optional(this.integrationIds);
    }
    /**
     * The metric name to alert on for a specific source: [domains](https://developer.fastly.com/reference/api/metrics-stats/domain-inspector/historical), [origins](https://developer.fastly.com/reference/api/metrics-stats/origin-inspector/historical), or [stats](https://developer.fastly.com/reference/api/metrics-stats/historical-stats).
     * 
     */
    @Export(name="metric", refs={String.class}, tree="[0]")
    private Output<String> metric;

    /**
     * @return The metric name to alert on for a specific source: [domains](https://developer.fastly.com/reference/api/metrics-stats/domain-inspector/historical), [origins](https://developer.fastly.com/reference/api/metrics-stats/origin-inspector/historical), or [stats](https://developer.fastly.com/reference/api/metrics-stats/historical-stats).
     * 
     */
    public Output<String> metric() {
        return this.metric;
    }
    /**
     * The name of the alert.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the alert.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The service which the alert monitors. Optional when using `stats` as the `source`.
     * 
     */
    @Export(name="serviceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> serviceId;

    /**
     * @return The service which the alert monitors. Optional when using `stats` as the `source`.
     * 
     */
    public Output<Optional<String>> serviceId() {
        return Codegen.optional(this.serviceId);
    }
    /**
     * The source where the metric comes from. One of: `domains`, `origins`, `stats`.
     * 
     */
    @Export(name="source", refs={String.class}, tree="[0]")
    private Output<String> source;

    /**
     * @return The source where the metric comes from. One of: `domains`, `origins`, `stats`.
     * 
     */
    public Output<String> source() {
        return this.source;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Alert(java.lang.String name) {
        this(name, AlertArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Alert(java.lang.String name, AlertArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Alert(java.lang.String name, AlertArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/alert:Alert", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Alert(java.lang.String name, Output<java.lang.String> id, @Nullable AlertState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/alert:Alert", name, state, makeResourceOptions(options, id), false);
    }

    private static AlertArgs makeArgs(AlertArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AlertArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Alert get(java.lang.String name, Output<java.lang.String> id, @Nullable AlertState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Alert(name, id, state, options);
    }
}
