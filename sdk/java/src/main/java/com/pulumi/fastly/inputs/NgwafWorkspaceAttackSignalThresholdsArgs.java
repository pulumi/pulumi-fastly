// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NgwafWorkspaceAttackSignalThresholdsArgs extends com.pulumi.resources.ResourceArgs {

    public static final NgwafWorkspaceAttackSignalThresholdsArgs Empty = new NgwafWorkspaceAttackSignalThresholdsArgs();

    /**
     * Ignore thresholds and block immediately when at least one attack signal is detected. Default value `false`.
     * 
     */
    @Import(name="immediate")
    private @Nullable Output<Boolean> immediate;

    /**
     * @return Ignore thresholds and block immediately when at least one attack signal is detected. Default value `false`.
     * 
     */
    public Optional<Output<Boolean>> immediate() {
        return Optional.ofNullable(this.immediate);
    }

    /**
     * The one-hour interval threshold. Minimum 1 and maximum 10,000. Default value 100.
     * 
     */
    @Import(name="oneHour")
    private @Nullable Output<Integer> oneHour;

    /**
     * @return The one-hour interval threshold. Minimum 1 and maximum 10,000. Default value 100.
     * 
     */
    public Optional<Output<Integer>> oneHour() {
        return Optional.ofNullable(this.oneHour);
    }

    /**
     * The one-minute interval threshold. Minimum 1 and maximum 10,000. Default value 1.
     * 
     */
    @Import(name="oneMinute")
    private @Nullable Output<Integer> oneMinute;

    /**
     * @return The one-minute interval threshold. Minimum 1 and maximum 10,000. Default value 1.
     * 
     */
    public Optional<Output<Integer>> oneMinute() {
        return Optional.ofNullable(this.oneMinute);
    }

    /**
     * The ten-minute interval threshold. Minimum 1 and maximum 10,000. Default value 60.
     * 
     */
    @Import(name="tenMinutes")
    private @Nullable Output<Integer> tenMinutes;

    /**
     * @return The ten-minute interval threshold. Minimum 1 and maximum 10,000. Default value 60.
     * 
     */
    public Optional<Output<Integer>> tenMinutes() {
        return Optional.ofNullable(this.tenMinutes);
    }

    private NgwafWorkspaceAttackSignalThresholdsArgs() {}

    private NgwafWorkspaceAttackSignalThresholdsArgs(NgwafWorkspaceAttackSignalThresholdsArgs $) {
        this.immediate = $.immediate;
        this.oneHour = $.oneHour;
        this.oneMinute = $.oneMinute;
        this.tenMinutes = $.tenMinutes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NgwafWorkspaceAttackSignalThresholdsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NgwafWorkspaceAttackSignalThresholdsArgs $;

        public Builder() {
            $ = new NgwafWorkspaceAttackSignalThresholdsArgs();
        }

        public Builder(NgwafWorkspaceAttackSignalThresholdsArgs defaults) {
            $ = new NgwafWorkspaceAttackSignalThresholdsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param immediate Ignore thresholds and block immediately when at least one attack signal is detected. Default value `false`.
         * 
         * @return builder
         * 
         */
        public Builder immediate(@Nullable Output<Boolean> immediate) {
            $.immediate = immediate;
            return this;
        }

        /**
         * @param immediate Ignore thresholds and block immediately when at least one attack signal is detected. Default value `false`.
         * 
         * @return builder
         * 
         */
        public Builder immediate(Boolean immediate) {
            return immediate(Output.of(immediate));
        }

        /**
         * @param oneHour The one-hour interval threshold. Minimum 1 and maximum 10,000. Default value 100.
         * 
         * @return builder
         * 
         */
        public Builder oneHour(@Nullable Output<Integer> oneHour) {
            $.oneHour = oneHour;
            return this;
        }

        /**
         * @param oneHour The one-hour interval threshold. Minimum 1 and maximum 10,000. Default value 100.
         * 
         * @return builder
         * 
         */
        public Builder oneHour(Integer oneHour) {
            return oneHour(Output.of(oneHour));
        }

        /**
         * @param oneMinute The one-minute interval threshold. Minimum 1 and maximum 10,000. Default value 1.
         * 
         * @return builder
         * 
         */
        public Builder oneMinute(@Nullable Output<Integer> oneMinute) {
            $.oneMinute = oneMinute;
            return this;
        }

        /**
         * @param oneMinute The one-minute interval threshold. Minimum 1 and maximum 10,000. Default value 1.
         * 
         * @return builder
         * 
         */
        public Builder oneMinute(Integer oneMinute) {
            return oneMinute(Output.of(oneMinute));
        }

        /**
         * @param tenMinutes The ten-minute interval threshold. Minimum 1 and maximum 10,000. Default value 60.
         * 
         * @return builder
         * 
         */
        public Builder tenMinutes(@Nullable Output<Integer> tenMinutes) {
            $.tenMinutes = tenMinutes;
            return this;
        }

        /**
         * @param tenMinutes The ten-minute interval threshold. Minimum 1 and maximum 10,000. Default value 60.
         * 
         * @return builder
         * 
         */
        public Builder tenMinutes(Integer tenMinutes) {
            return tenMinutes(Output.of(tenMinutes));
        }

        public NgwafWorkspaceAttackSignalThresholdsArgs build() {
            return $;
        }
    }

}
