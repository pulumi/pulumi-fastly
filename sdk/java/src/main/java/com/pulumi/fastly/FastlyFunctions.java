// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.fastly.Utilities;
import com.pulumi.fastly.inputs.GetDictionariesArgs;
import com.pulumi.fastly.inputs.GetDictionariesPlainArgs;
import com.pulumi.fastly.inputs.GetNgwafAlertDatadogIntegrationArgs;
import com.pulumi.fastly.inputs.GetNgwafAlertDatadogIntegrationPlainArgs;
import com.pulumi.fastly.inputs.GetNgwafAlertJiraIntegrationArgs;
import com.pulumi.fastly.inputs.GetNgwafAlertJiraIntegrationPlainArgs;
import com.pulumi.fastly.inputs.GetNgwafAlertMailingListIntegrationArgs;
import com.pulumi.fastly.inputs.GetNgwafAlertMailingListIntegrationPlainArgs;
import com.pulumi.fastly.inputs.GetNgwafAlertMicrosoftTeamsIntegrationArgs;
import com.pulumi.fastly.inputs.GetNgwafAlertMicrosoftTeamsIntegrationPlainArgs;
import com.pulumi.fastly.inputs.GetNgwafAlertOpsgenieIntegrationArgs;
import com.pulumi.fastly.inputs.GetNgwafAlertOpsgenieIntegrationPlainArgs;
import com.pulumi.fastly.inputs.GetNgwafAlertPagerdutyIntegrationArgs;
import com.pulumi.fastly.inputs.GetNgwafAlertPagerdutyIntegrationPlainArgs;
import com.pulumi.fastly.inputs.GetNgwafAlertSlackIntegrationArgs;
import com.pulumi.fastly.inputs.GetNgwafAlertSlackIntegrationPlainArgs;
import com.pulumi.fastly.inputs.GetNgwafAlertWebhookIntegrationArgs;
import com.pulumi.fastly.inputs.GetNgwafAlertWebhookIntegrationPlainArgs;
import com.pulumi.fastly.inputs.GetNgwafRedactionsArgs;
import com.pulumi.fastly.inputs.GetNgwafRedactionsPlainArgs;
import com.pulumi.fastly.inputs.GetNgwafThresholdsArgs;
import com.pulumi.fastly.inputs.GetNgwafThresholdsPlainArgs;
import com.pulumi.fastly.inputs.GetNgwafVirtualPatchesArgs;
import com.pulumi.fastly.inputs.GetNgwafVirtualPatchesPlainArgs;
import com.pulumi.fastly.inputs.GetPackageHashArgs;
import com.pulumi.fastly.inputs.GetPackageHashPlainArgs;
import com.pulumi.fastly.inputs.GetTlsActivationArgs;
import com.pulumi.fastly.inputs.GetTlsActivationIdsArgs;
import com.pulumi.fastly.inputs.GetTlsActivationIdsPlainArgs;
import com.pulumi.fastly.inputs.GetTlsActivationPlainArgs;
import com.pulumi.fastly.inputs.GetTlsCertificateArgs;
import com.pulumi.fastly.inputs.GetTlsCertificatePlainArgs;
import com.pulumi.fastly.inputs.GetTlsConfigurationArgs;
import com.pulumi.fastly.inputs.GetTlsConfigurationPlainArgs;
import com.pulumi.fastly.inputs.GetTlsDomainArgs;
import com.pulumi.fastly.inputs.GetTlsDomainPlainArgs;
import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
import com.pulumi.fastly.inputs.GetTlsPlatformCertificatePlainArgs;
import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
import com.pulumi.fastly.inputs.GetTlsPrivateKeyPlainArgs;
import com.pulumi.fastly.inputs.GetTlsSubscriptionArgs;
import com.pulumi.fastly.inputs.GetTlsSubscriptionPlainArgs;
import com.pulumi.fastly.inputs.GetVclSnippetsArgs;
import com.pulumi.fastly.inputs.GetVclSnippetsPlainArgs;
import com.pulumi.fastly.outputs.GetConfigstoresResult;
import com.pulumi.fastly.outputs.GetDatacentersResult;
import com.pulumi.fastly.outputs.GetDictionariesResult;
import com.pulumi.fastly.outputs.GetFastlyIpRangesResult;
import com.pulumi.fastly.outputs.GetKvstoresResult;
import com.pulumi.fastly.outputs.GetNgwafAlertDatadogIntegrationResult;
import com.pulumi.fastly.outputs.GetNgwafAlertJiraIntegrationResult;
import com.pulumi.fastly.outputs.GetNgwafAlertMailingListIntegrationResult;
import com.pulumi.fastly.outputs.GetNgwafAlertMicrosoftTeamsIntegrationResult;
import com.pulumi.fastly.outputs.GetNgwafAlertOpsgenieIntegrationResult;
import com.pulumi.fastly.outputs.GetNgwafAlertPagerdutyIntegrationResult;
import com.pulumi.fastly.outputs.GetNgwafAlertSlackIntegrationResult;
import com.pulumi.fastly.outputs.GetNgwafAlertWebhookIntegrationResult;
import com.pulumi.fastly.outputs.GetNgwafRedactionsResult;
import com.pulumi.fastly.outputs.GetNgwafThresholdsResult;
import com.pulumi.fastly.outputs.GetNgwafVirtualPatchesResult;
import com.pulumi.fastly.outputs.GetNgwafWorkspacesResult;
import com.pulumi.fastly.outputs.GetPackageHashResult;
import com.pulumi.fastly.outputs.GetSecretstoresResult;
import com.pulumi.fastly.outputs.GetServicesResult;
import com.pulumi.fastly.outputs.GetTlsActivationIdsResult;
import com.pulumi.fastly.outputs.GetTlsActivationResult;
import com.pulumi.fastly.outputs.GetTlsCertificateIdsResult;
import com.pulumi.fastly.outputs.GetTlsCertificateResult;
import com.pulumi.fastly.outputs.GetTlsConfigurationIdsResult;
import com.pulumi.fastly.outputs.GetTlsConfigurationResult;
import com.pulumi.fastly.outputs.GetTlsDomainResult;
import com.pulumi.fastly.outputs.GetTlsPlatformCertificateIdsResult;
import com.pulumi.fastly.outputs.GetTlsPlatformCertificateResult;
import com.pulumi.fastly.outputs.GetTlsPrivateKeyIdsResult;
import com.pulumi.fastly.outputs.GetTlsPrivateKeyResult;
import com.pulumi.fastly.outputs.GetTlsSubscriptionIdsResult;
import com.pulumi.fastly.outputs.GetTlsSubscriptionResult;
import com.pulumi.fastly.outputs.GetVclSnippetsResult;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class FastlyFunctions {
    public static Output<GetConfigstoresResult> getConfigstores() {
        return getConfigstores(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetConfigstoresResult> getConfigstoresPlain() {
        return getConfigstoresPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetConfigstoresResult> getConfigstores(InvokeArgs args) {
        return getConfigstores(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetConfigstoresResult> getConfigstoresPlain(InvokeArgs args) {
        return getConfigstoresPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetConfigstoresResult> getConfigstores(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getConfigstores:getConfigstores", TypeShape.of(GetConfigstoresResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetConfigstoresResult> getConfigstores(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getConfigstores:getConfigstores", TypeShape.of(GetConfigstoresResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetConfigstoresResult> getConfigstoresPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getConfigstores:getConfigstores", TypeShape.of(GetConfigstoresResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of the [Fastly datacenters](https://developer.fastly.com/reference/api/utils/pops/).
     * 
     */
    public static Output<GetDatacentersResult> getDatacenters() {
        return getDatacenters(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of the [Fastly datacenters](https://developer.fastly.com/reference/api/utils/pops/).
     * 
     */
    public static CompletableFuture<GetDatacentersResult> getDatacentersPlain() {
        return getDatacentersPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of the [Fastly datacenters](https://developer.fastly.com/reference/api/utils/pops/).
     * 
     */
    public static Output<GetDatacentersResult> getDatacenters(InvokeArgs args) {
        return getDatacenters(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of the [Fastly datacenters](https://developer.fastly.com/reference/api/utils/pops/).
     * 
     */
    public static CompletableFuture<GetDatacentersResult> getDatacentersPlain(InvokeArgs args) {
        return getDatacentersPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of the [Fastly datacenters](https://developer.fastly.com/reference/api/utils/pops/).
     * 
     */
    public static Output<GetDatacentersResult> getDatacenters(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getDatacenters:getDatacenters", TypeShape.of(GetDatacentersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of the [Fastly datacenters](https://developer.fastly.com/reference/api/utils/pops/).
     * 
     */
    public static Output<GetDatacentersResult> getDatacenters(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getDatacenters:getDatacenters", TypeShape.of(GetDatacentersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of the [Fastly datacenters](https://developer.fastly.com/reference/api/utils/pops/).
     * 
     */
    public static CompletableFuture<GetDatacentersResult> getDatacentersPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getDatacenters:getDatacenters", TypeShape.of(GetDatacentersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a list of [Fastly dictionaries](https://developer.fastly.com/reference/api/dictionaries/) for the specified service/version.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.ServiceVcl;
     * import com.pulumi.fastly.ServiceVclArgs;
     * import com.pulumi.fastly.inputs.ServiceVclDomainArgs;
     * import com.pulumi.fastly.inputs.ServiceVclDictionaryArgs;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetDictionariesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleServiceVcl = new ServiceVcl("exampleServiceVcl", ServiceVclArgs.builder()
     *             .name("Example Service")
     *             .domains(ServiceVclDomainArgs.builder()
     *                 .name("example.com")
     *                 .build())
     *             .dictionaries(            
     *                 ServiceVclDictionaryArgs.builder()
     *                     .name("example_1")
     *                     .build(),
     *                 ServiceVclDictionaryArgs.builder()
     *                     .name("example_2")
     *                     .build(),
     *                 ServiceVclDictionaryArgs.builder()
     *                     .name("example_3")
     *                     .build())
     *             .forceDestroy(true)
     *             .build());
     * 
     *         final var example = FastlyFunctions.getDictionaries(GetDictionariesArgs.builder()
     *             .serviceId(exampleServiceVcl.id())
     *             .serviceVersion(exampleServiceVcl.activeVersion())
     *             .build());
     * 
     *         ctx.export("serviceDictionaries", example);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://developer.fastly.com/reference/api/dictionaries/
     * 
     */
    public static Output<GetDictionariesResult> getDictionaries(GetDictionariesArgs args) {
        return getDictionaries(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a list of [Fastly dictionaries](https://developer.fastly.com/reference/api/dictionaries/) for the specified service/version.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.ServiceVcl;
     * import com.pulumi.fastly.ServiceVclArgs;
     * import com.pulumi.fastly.inputs.ServiceVclDomainArgs;
     * import com.pulumi.fastly.inputs.ServiceVclDictionaryArgs;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetDictionariesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleServiceVcl = new ServiceVcl("exampleServiceVcl", ServiceVclArgs.builder()
     *             .name("Example Service")
     *             .domains(ServiceVclDomainArgs.builder()
     *                 .name("example.com")
     *                 .build())
     *             .dictionaries(            
     *                 ServiceVclDictionaryArgs.builder()
     *                     .name("example_1")
     *                     .build(),
     *                 ServiceVclDictionaryArgs.builder()
     *                     .name("example_2")
     *                     .build(),
     *                 ServiceVclDictionaryArgs.builder()
     *                     .name("example_3")
     *                     .build())
     *             .forceDestroy(true)
     *             .build());
     * 
     *         final var example = FastlyFunctions.getDictionaries(GetDictionariesArgs.builder()
     *             .serviceId(exampleServiceVcl.id())
     *             .serviceVersion(exampleServiceVcl.activeVersion())
     *             .build());
     * 
     *         ctx.export("serviceDictionaries", example);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://developer.fastly.com/reference/api/dictionaries/
     * 
     */
    public static CompletableFuture<GetDictionariesResult> getDictionariesPlain(GetDictionariesPlainArgs args) {
        return getDictionariesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a list of [Fastly dictionaries](https://developer.fastly.com/reference/api/dictionaries/) for the specified service/version.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.ServiceVcl;
     * import com.pulumi.fastly.ServiceVclArgs;
     * import com.pulumi.fastly.inputs.ServiceVclDomainArgs;
     * import com.pulumi.fastly.inputs.ServiceVclDictionaryArgs;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetDictionariesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleServiceVcl = new ServiceVcl("exampleServiceVcl", ServiceVclArgs.builder()
     *             .name("Example Service")
     *             .domains(ServiceVclDomainArgs.builder()
     *                 .name("example.com")
     *                 .build())
     *             .dictionaries(            
     *                 ServiceVclDictionaryArgs.builder()
     *                     .name("example_1")
     *                     .build(),
     *                 ServiceVclDictionaryArgs.builder()
     *                     .name("example_2")
     *                     .build(),
     *                 ServiceVclDictionaryArgs.builder()
     *                     .name("example_3")
     *                     .build())
     *             .forceDestroy(true)
     *             .build());
     * 
     *         final var example = FastlyFunctions.getDictionaries(GetDictionariesArgs.builder()
     *             .serviceId(exampleServiceVcl.id())
     *             .serviceVersion(exampleServiceVcl.activeVersion())
     *             .build());
     * 
     *         ctx.export("serviceDictionaries", example);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://developer.fastly.com/reference/api/dictionaries/
     * 
     */
    public static Output<GetDictionariesResult> getDictionaries(GetDictionariesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getDictionaries:getDictionaries", TypeShape.of(GetDictionariesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a list of [Fastly dictionaries](https://developer.fastly.com/reference/api/dictionaries/) for the specified service/version.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.ServiceVcl;
     * import com.pulumi.fastly.ServiceVclArgs;
     * import com.pulumi.fastly.inputs.ServiceVclDomainArgs;
     * import com.pulumi.fastly.inputs.ServiceVclDictionaryArgs;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetDictionariesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleServiceVcl = new ServiceVcl("exampleServiceVcl", ServiceVclArgs.builder()
     *             .name("Example Service")
     *             .domains(ServiceVclDomainArgs.builder()
     *                 .name("example.com")
     *                 .build())
     *             .dictionaries(            
     *                 ServiceVclDictionaryArgs.builder()
     *                     .name("example_1")
     *                     .build(),
     *                 ServiceVclDictionaryArgs.builder()
     *                     .name("example_2")
     *                     .build(),
     *                 ServiceVclDictionaryArgs.builder()
     *                     .name("example_3")
     *                     .build())
     *             .forceDestroy(true)
     *             .build());
     * 
     *         final var example = FastlyFunctions.getDictionaries(GetDictionariesArgs.builder()
     *             .serviceId(exampleServiceVcl.id())
     *             .serviceVersion(exampleServiceVcl.activeVersion())
     *             .build());
     * 
     *         ctx.export("serviceDictionaries", example);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://developer.fastly.com/reference/api/dictionaries/
     * 
     */
    public static Output<GetDictionariesResult> getDictionaries(GetDictionariesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getDictionaries:getDictionaries", TypeShape.of(GetDictionariesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a list of [Fastly dictionaries](https://developer.fastly.com/reference/api/dictionaries/) for the specified service/version.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.ServiceVcl;
     * import com.pulumi.fastly.ServiceVclArgs;
     * import com.pulumi.fastly.inputs.ServiceVclDomainArgs;
     * import com.pulumi.fastly.inputs.ServiceVclDictionaryArgs;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetDictionariesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleServiceVcl = new ServiceVcl("exampleServiceVcl", ServiceVclArgs.builder()
     *             .name("Example Service")
     *             .domains(ServiceVclDomainArgs.builder()
     *                 .name("example.com")
     *                 .build())
     *             .dictionaries(            
     *                 ServiceVclDictionaryArgs.builder()
     *                     .name("example_1")
     *                     .build(),
     *                 ServiceVclDictionaryArgs.builder()
     *                     .name("example_2")
     *                     .build(),
     *                 ServiceVclDictionaryArgs.builder()
     *                     .name("example_3")
     *                     .build())
     *             .forceDestroy(true)
     *             .build());
     * 
     *         final var example = FastlyFunctions.getDictionaries(GetDictionariesArgs.builder()
     *             .serviceId(exampleServiceVcl.id())
     *             .serviceVersion(exampleServiceVcl.activeVersion())
     *             .build());
     * 
     *         ctx.export("serviceDictionaries", example);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://developer.fastly.com/reference/api/dictionaries/
     * 
     */
    public static CompletableFuture<GetDictionariesResult> getDictionariesPlain(GetDictionariesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getDictionaries:getDictionaries", TypeShape.of(GetDictionariesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the [IP ranges](https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges) of Fastly edge nodes.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.aws.securityGroup;
     * import com.pulumi.aws.securityGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fastly = FastlyFunctions.getFastlyIpRanges(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var fromFastly = new SecurityGroup("fromFastly", SecurityGroupArgs.builder()
     *             .name("from_fastly")
     *             .ingress(List.of(Map.ofEntries(
     *                 Map.entry("fromPort", "443"),
     *                 Map.entry("toPort", "443"),
     *                 Map.entry("protocol", "tcp"),
     *                 Map.entry("cidrBlocks", fastly.cidrBlocks()),
     *                 Map.entry("ipv6CidrBlocks", fastly.ipv6CidrBlocks())
     *             )))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges
     * 
     */
    public static Output<GetFastlyIpRangesResult> getFastlyIpRanges() {
        return getFastlyIpRanges(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the [IP ranges](https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges) of Fastly edge nodes.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.aws.securityGroup;
     * import com.pulumi.aws.securityGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fastly = FastlyFunctions.getFastlyIpRanges(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var fromFastly = new SecurityGroup("fromFastly", SecurityGroupArgs.builder()
     *             .name("from_fastly")
     *             .ingress(List.of(Map.ofEntries(
     *                 Map.entry("fromPort", "443"),
     *                 Map.entry("toPort", "443"),
     *                 Map.entry("protocol", "tcp"),
     *                 Map.entry("cidrBlocks", fastly.cidrBlocks()),
     *                 Map.entry("ipv6CidrBlocks", fastly.ipv6CidrBlocks())
     *             )))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges
     * 
     */
    public static CompletableFuture<GetFastlyIpRangesResult> getFastlyIpRangesPlain() {
        return getFastlyIpRangesPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the [IP ranges](https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges) of Fastly edge nodes.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.aws.securityGroup;
     * import com.pulumi.aws.securityGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fastly = FastlyFunctions.getFastlyIpRanges(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var fromFastly = new SecurityGroup("fromFastly", SecurityGroupArgs.builder()
     *             .name("from_fastly")
     *             .ingress(List.of(Map.ofEntries(
     *                 Map.entry("fromPort", "443"),
     *                 Map.entry("toPort", "443"),
     *                 Map.entry("protocol", "tcp"),
     *                 Map.entry("cidrBlocks", fastly.cidrBlocks()),
     *                 Map.entry("ipv6CidrBlocks", fastly.ipv6CidrBlocks())
     *             )))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges
     * 
     */
    public static Output<GetFastlyIpRangesResult> getFastlyIpRanges(InvokeArgs args) {
        return getFastlyIpRanges(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the [IP ranges](https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges) of Fastly edge nodes.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.aws.securityGroup;
     * import com.pulumi.aws.securityGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fastly = FastlyFunctions.getFastlyIpRanges(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var fromFastly = new SecurityGroup("fromFastly", SecurityGroupArgs.builder()
     *             .name("from_fastly")
     *             .ingress(List.of(Map.ofEntries(
     *                 Map.entry("fromPort", "443"),
     *                 Map.entry("toPort", "443"),
     *                 Map.entry("protocol", "tcp"),
     *                 Map.entry("cidrBlocks", fastly.cidrBlocks()),
     *                 Map.entry("ipv6CidrBlocks", fastly.ipv6CidrBlocks())
     *             )))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges
     * 
     */
    public static CompletableFuture<GetFastlyIpRangesResult> getFastlyIpRangesPlain(InvokeArgs args) {
        return getFastlyIpRangesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the [IP ranges](https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges) of Fastly edge nodes.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.aws.securityGroup;
     * import com.pulumi.aws.securityGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fastly = FastlyFunctions.getFastlyIpRanges(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var fromFastly = new SecurityGroup("fromFastly", SecurityGroupArgs.builder()
     *             .name("from_fastly")
     *             .ingress(List.of(Map.ofEntries(
     *                 Map.entry("fromPort", "443"),
     *                 Map.entry("toPort", "443"),
     *                 Map.entry("protocol", "tcp"),
     *                 Map.entry("cidrBlocks", fastly.cidrBlocks()),
     *                 Map.entry("ipv6CidrBlocks", fastly.ipv6CidrBlocks())
     *             )))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges
     * 
     */
    public static Output<GetFastlyIpRangesResult> getFastlyIpRanges(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getFastlyIpRanges:getFastlyIpRanges", TypeShape.of(GetFastlyIpRangesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the [IP ranges](https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges) of Fastly edge nodes.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.aws.securityGroup;
     * import com.pulumi.aws.securityGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fastly = FastlyFunctions.getFastlyIpRanges(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var fromFastly = new SecurityGroup("fromFastly", SecurityGroupArgs.builder()
     *             .name("from_fastly")
     *             .ingress(List.of(Map.ofEntries(
     *                 Map.entry("fromPort", "443"),
     *                 Map.entry("toPort", "443"),
     *                 Map.entry("protocol", "tcp"),
     *                 Map.entry("cidrBlocks", fastly.cidrBlocks()),
     *                 Map.entry("ipv6CidrBlocks", fastly.ipv6CidrBlocks())
     *             )))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges
     * 
     */
    public static Output<GetFastlyIpRangesResult> getFastlyIpRanges(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getFastlyIpRanges:getFastlyIpRanges", TypeShape.of(GetFastlyIpRangesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the [IP ranges](https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges) of Fastly edge nodes.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.aws.securityGroup;
     * import com.pulumi.aws.securityGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fastly = FastlyFunctions.getFastlyIpRanges(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var fromFastly = new SecurityGroup("fromFastly", SecurityGroupArgs.builder()
     *             .name("from_fastly")
     *             .ingress(List.of(Map.ofEntries(
     *                 Map.entry("fromPort", "443"),
     *                 Map.entry("toPort", "443"),
     *                 Map.entry("protocol", "tcp"),
     *                 Map.entry("cidrBlocks", fastly.cidrBlocks()),
     *                 Map.entry("ipv6CidrBlocks", fastly.ipv6CidrBlocks())
     *             )))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges
     * 
     */
    public static CompletableFuture<GetFastlyIpRangesResult> getFastlyIpRangesPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getFastlyIpRanges:getFastlyIpRanges", TypeShape.of(GetFastlyIpRangesResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetKvstoresResult> getKvstores() {
        return getKvstores(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetKvstoresResult> getKvstoresPlain() {
        return getKvstoresPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetKvstoresResult> getKvstores(InvokeArgs args) {
        return getKvstores(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetKvstoresResult> getKvstoresPlain(InvokeArgs args) {
        return getKvstoresPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetKvstoresResult> getKvstores(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getKvstores:getKvstores", TypeShape.of(GetKvstoresResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetKvstoresResult> getKvstores(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getKvstores:getKvstores", TypeShape.of(GetKvstoresResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetKvstoresResult> getKvstoresPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getKvstores:getKvstores", TypeShape.of(GetKvstoresResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Datadog integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertDatadogIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafDatadogAlerts = FastlyFunctions.getNgwafAlertDatadogIntegration(GetNgwafAlertDatadogIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafDatadogAlertsAll", datadogAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertDatadogIntegrationResult> getNgwafAlertDatadogIntegration(GetNgwafAlertDatadogIntegrationArgs args) {
        return getNgwafAlertDatadogIntegration(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Datadog integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertDatadogIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafDatadogAlerts = FastlyFunctions.getNgwafAlertDatadogIntegration(GetNgwafAlertDatadogIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafDatadogAlertsAll", datadogAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNgwafAlertDatadogIntegrationResult> getNgwafAlertDatadogIntegrationPlain(GetNgwafAlertDatadogIntegrationPlainArgs args) {
        return getNgwafAlertDatadogIntegrationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Datadog integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertDatadogIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafDatadogAlerts = FastlyFunctions.getNgwafAlertDatadogIntegration(GetNgwafAlertDatadogIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafDatadogAlertsAll", datadogAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertDatadogIntegrationResult> getNgwafAlertDatadogIntegration(GetNgwafAlertDatadogIntegrationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafAlertDatadogIntegration:getNgwafAlertDatadogIntegration", TypeShape.of(GetNgwafAlertDatadogIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Datadog integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertDatadogIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafDatadogAlerts = FastlyFunctions.getNgwafAlertDatadogIntegration(GetNgwafAlertDatadogIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafDatadogAlertsAll", datadogAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertDatadogIntegrationResult> getNgwafAlertDatadogIntegration(GetNgwafAlertDatadogIntegrationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafAlertDatadogIntegration:getNgwafAlertDatadogIntegration", TypeShape.of(GetNgwafAlertDatadogIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Datadog integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertDatadogIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafDatadogAlerts = FastlyFunctions.getNgwafAlertDatadogIntegration(GetNgwafAlertDatadogIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafDatadogAlertsAll", datadogAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNgwafAlertDatadogIntegrationResult> getNgwafAlertDatadogIntegrationPlain(GetNgwafAlertDatadogIntegrationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getNgwafAlertDatadogIntegration:getNgwafAlertDatadogIntegration", TypeShape.of(GetNgwafAlertDatadogIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Jira integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertJiraIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafJiraAlerts = FastlyFunctions.getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafJiraAlertsAll", jiraAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertJiraIntegrationResult> getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs args) {
        return getNgwafAlertJiraIntegration(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Jira integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertJiraIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafJiraAlerts = FastlyFunctions.getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafJiraAlertsAll", jiraAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNgwafAlertJiraIntegrationResult> getNgwafAlertJiraIntegrationPlain(GetNgwafAlertJiraIntegrationPlainArgs args) {
        return getNgwafAlertJiraIntegrationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Jira integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertJiraIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafJiraAlerts = FastlyFunctions.getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafJiraAlertsAll", jiraAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertJiraIntegrationResult> getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafAlertJiraIntegration:getNgwafAlertJiraIntegration", TypeShape.of(GetNgwafAlertJiraIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Jira integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertJiraIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafJiraAlerts = FastlyFunctions.getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafJiraAlertsAll", jiraAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertJiraIntegrationResult> getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafAlertJiraIntegration:getNgwafAlertJiraIntegration", TypeShape.of(GetNgwafAlertJiraIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Jira integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertJiraIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafJiraAlerts = FastlyFunctions.getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafJiraAlertsAll", jiraAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNgwafAlertJiraIntegrationResult> getNgwafAlertJiraIntegrationPlain(GetNgwafAlertJiraIntegrationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getNgwafAlertJiraIntegration:getNgwafAlertJiraIntegration", TypeShape.of(GetNgwafAlertJiraIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Mailing List integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertJiraIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafJiraAlerts = FastlyFunctions.getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafJiraAlertsAll", jiraAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertMailingListIntegrationResult> getNgwafAlertMailingListIntegration(GetNgwafAlertMailingListIntegrationArgs args) {
        return getNgwafAlertMailingListIntegration(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Mailing List integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertJiraIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafJiraAlerts = FastlyFunctions.getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafJiraAlertsAll", jiraAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNgwafAlertMailingListIntegrationResult> getNgwafAlertMailingListIntegrationPlain(GetNgwafAlertMailingListIntegrationPlainArgs args) {
        return getNgwafAlertMailingListIntegrationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Mailing List integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertJiraIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafJiraAlerts = FastlyFunctions.getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafJiraAlertsAll", jiraAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertMailingListIntegrationResult> getNgwafAlertMailingListIntegration(GetNgwafAlertMailingListIntegrationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafAlertMailingListIntegration:getNgwafAlertMailingListIntegration", TypeShape.of(GetNgwafAlertMailingListIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Mailing List integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertJiraIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafJiraAlerts = FastlyFunctions.getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafJiraAlertsAll", jiraAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertMailingListIntegrationResult> getNgwafAlertMailingListIntegration(GetNgwafAlertMailingListIntegrationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafAlertMailingListIntegration:getNgwafAlertMailingListIntegration", TypeShape.of(GetNgwafAlertMailingListIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Mailing List integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertJiraIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafJiraAlerts = FastlyFunctions.getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafJiraAlertsAll", jiraAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNgwafAlertMailingListIntegrationResult> getNgwafAlertMailingListIntegrationPlain(GetNgwafAlertMailingListIntegrationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getNgwafAlertMailingListIntegration:getNgwafAlertMailingListIntegration", TypeShape.of(GetNgwafAlertMailingListIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Microsoft Teams integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertJiraIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafJiraAlerts = FastlyFunctions.getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafJiraAlertsAll", jiraAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertMicrosoftTeamsIntegrationResult> getNgwafAlertMicrosoftTeamsIntegration(GetNgwafAlertMicrosoftTeamsIntegrationArgs args) {
        return getNgwafAlertMicrosoftTeamsIntegration(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Microsoft Teams integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertJiraIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafJiraAlerts = FastlyFunctions.getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafJiraAlertsAll", jiraAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNgwafAlertMicrosoftTeamsIntegrationResult> getNgwafAlertMicrosoftTeamsIntegrationPlain(GetNgwafAlertMicrosoftTeamsIntegrationPlainArgs args) {
        return getNgwafAlertMicrosoftTeamsIntegrationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Microsoft Teams integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertJiraIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafJiraAlerts = FastlyFunctions.getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafJiraAlertsAll", jiraAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertMicrosoftTeamsIntegrationResult> getNgwafAlertMicrosoftTeamsIntegration(GetNgwafAlertMicrosoftTeamsIntegrationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafAlertMicrosoftTeamsIntegration:getNgwafAlertMicrosoftTeamsIntegration", TypeShape.of(GetNgwafAlertMicrosoftTeamsIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Microsoft Teams integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertJiraIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafJiraAlerts = FastlyFunctions.getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafJiraAlertsAll", jiraAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertMicrosoftTeamsIntegrationResult> getNgwafAlertMicrosoftTeamsIntegration(GetNgwafAlertMicrosoftTeamsIntegrationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafAlertMicrosoftTeamsIntegration:getNgwafAlertMicrosoftTeamsIntegration", TypeShape.of(GetNgwafAlertMicrosoftTeamsIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Microsoft Teams integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertJiraIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafJiraAlerts = FastlyFunctions.getNgwafAlertJiraIntegration(GetNgwafAlertJiraIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafJiraAlertsAll", jiraAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNgwafAlertMicrosoftTeamsIntegrationResult> getNgwafAlertMicrosoftTeamsIntegrationPlain(GetNgwafAlertMicrosoftTeamsIntegrationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getNgwafAlertMicrosoftTeamsIntegration:getNgwafAlertMicrosoftTeamsIntegration", TypeShape.of(GetNgwafAlertMicrosoftTeamsIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Opsgenie integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertOpsgenieIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafOpsgenieAlerts = FastlyFunctions.getNgwafAlertOpsgenieIntegration(GetNgwafAlertOpsgenieIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafOpsgenieAlertsAll", opsgenieAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertOpsgenieIntegrationResult> getNgwafAlertOpsgenieIntegration(GetNgwafAlertOpsgenieIntegrationArgs args) {
        return getNgwafAlertOpsgenieIntegration(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Opsgenie integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertOpsgenieIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafOpsgenieAlerts = FastlyFunctions.getNgwafAlertOpsgenieIntegration(GetNgwafAlertOpsgenieIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafOpsgenieAlertsAll", opsgenieAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNgwafAlertOpsgenieIntegrationResult> getNgwafAlertOpsgenieIntegrationPlain(GetNgwafAlertOpsgenieIntegrationPlainArgs args) {
        return getNgwafAlertOpsgenieIntegrationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Opsgenie integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertOpsgenieIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafOpsgenieAlerts = FastlyFunctions.getNgwafAlertOpsgenieIntegration(GetNgwafAlertOpsgenieIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafOpsgenieAlertsAll", opsgenieAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertOpsgenieIntegrationResult> getNgwafAlertOpsgenieIntegration(GetNgwafAlertOpsgenieIntegrationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafAlertOpsgenieIntegration:getNgwafAlertOpsgenieIntegration", TypeShape.of(GetNgwafAlertOpsgenieIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Opsgenie integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertOpsgenieIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafOpsgenieAlerts = FastlyFunctions.getNgwafAlertOpsgenieIntegration(GetNgwafAlertOpsgenieIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafOpsgenieAlertsAll", opsgenieAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertOpsgenieIntegrationResult> getNgwafAlertOpsgenieIntegration(GetNgwafAlertOpsgenieIntegrationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafAlertOpsgenieIntegration:getNgwafAlertOpsgenieIntegration", TypeShape.of(GetNgwafAlertOpsgenieIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Opsgenie integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertOpsgenieIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafOpsgenieAlerts = FastlyFunctions.getNgwafAlertOpsgenieIntegration(GetNgwafAlertOpsgenieIntegrationArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("ngwafOpsgenieAlertsAll", opsgenieAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNgwafAlertOpsgenieIntegrationResult> getNgwafAlertOpsgenieIntegrationPlain(GetNgwafAlertOpsgenieIntegrationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getNgwafAlertOpsgenieIntegration:getNgwafAlertOpsgenieIntegration", TypeShape.of(GetNgwafAlertOpsgenieIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert PagerDuty integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertPagerdutyIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafPagerdutyAlerts = FastlyFunctions.getNgwafAlertPagerdutyIntegration(GetNgwafAlertPagerdutyIntegrationArgs.builder()
     *             .workspaceId(example.id())
     *             .build());
     * 
     *         ctx.export("ngwafPagerdutyAlertsAll", ngwafPagerdutyAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertPagerdutyIntegrationResult> getNgwafAlertPagerdutyIntegration(GetNgwafAlertPagerdutyIntegrationArgs args) {
        return getNgwafAlertPagerdutyIntegration(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert PagerDuty integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertPagerdutyIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafPagerdutyAlerts = FastlyFunctions.getNgwafAlertPagerdutyIntegration(GetNgwafAlertPagerdutyIntegrationArgs.builder()
     *             .workspaceId(example.id())
     *             .build());
     * 
     *         ctx.export("ngwafPagerdutyAlertsAll", ngwafPagerdutyAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNgwafAlertPagerdutyIntegrationResult> getNgwafAlertPagerdutyIntegrationPlain(GetNgwafAlertPagerdutyIntegrationPlainArgs args) {
        return getNgwafAlertPagerdutyIntegrationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert PagerDuty integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertPagerdutyIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafPagerdutyAlerts = FastlyFunctions.getNgwafAlertPagerdutyIntegration(GetNgwafAlertPagerdutyIntegrationArgs.builder()
     *             .workspaceId(example.id())
     *             .build());
     * 
     *         ctx.export("ngwafPagerdutyAlertsAll", ngwafPagerdutyAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertPagerdutyIntegrationResult> getNgwafAlertPagerdutyIntegration(GetNgwafAlertPagerdutyIntegrationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafAlertPagerdutyIntegration:getNgwafAlertPagerdutyIntegration", TypeShape.of(GetNgwafAlertPagerdutyIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert PagerDuty integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertPagerdutyIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafPagerdutyAlerts = FastlyFunctions.getNgwafAlertPagerdutyIntegration(GetNgwafAlertPagerdutyIntegrationArgs.builder()
     *             .workspaceId(example.id())
     *             .build());
     * 
     *         ctx.export("ngwafPagerdutyAlertsAll", ngwafPagerdutyAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertPagerdutyIntegrationResult> getNgwafAlertPagerdutyIntegration(GetNgwafAlertPagerdutyIntegrationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafAlertPagerdutyIntegration:getNgwafAlertPagerdutyIntegration", TypeShape.of(GetNgwafAlertPagerdutyIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert PagerDuty integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertPagerdutyIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafPagerdutyAlerts = FastlyFunctions.getNgwafAlertPagerdutyIntegration(GetNgwafAlertPagerdutyIntegrationArgs.builder()
     *             .workspaceId(example.id())
     *             .build());
     * 
     *         ctx.export("ngwafPagerdutyAlertsAll", ngwafPagerdutyAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNgwafAlertPagerdutyIntegrationResult> getNgwafAlertPagerdutyIntegrationPlain(GetNgwafAlertPagerdutyIntegrationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getNgwafAlertPagerdutyIntegration:getNgwafAlertPagerdutyIntegration", TypeShape.of(GetNgwafAlertPagerdutyIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Slack integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertSlackIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafSlackAlerts = FastlyFunctions.getNgwafAlertSlackIntegration(GetNgwafAlertSlackIntegrationArgs.builder()
     *             .workspaceId(example.id())
     *             .build());
     * 
     *         ctx.export("ngwafSlackAlertsAll", ngwafSlackAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertSlackIntegrationResult> getNgwafAlertSlackIntegration(GetNgwafAlertSlackIntegrationArgs args) {
        return getNgwafAlertSlackIntegration(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Slack integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertSlackIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafSlackAlerts = FastlyFunctions.getNgwafAlertSlackIntegration(GetNgwafAlertSlackIntegrationArgs.builder()
     *             .workspaceId(example.id())
     *             .build());
     * 
     *         ctx.export("ngwafSlackAlertsAll", ngwafSlackAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNgwafAlertSlackIntegrationResult> getNgwafAlertSlackIntegrationPlain(GetNgwafAlertSlackIntegrationPlainArgs args) {
        return getNgwafAlertSlackIntegrationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Slack integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertSlackIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafSlackAlerts = FastlyFunctions.getNgwafAlertSlackIntegration(GetNgwafAlertSlackIntegrationArgs.builder()
     *             .workspaceId(example.id())
     *             .build());
     * 
     *         ctx.export("ngwafSlackAlertsAll", ngwafSlackAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertSlackIntegrationResult> getNgwafAlertSlackIntegration(GetNgwafAlertSlackIntegrationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafAlertSlackIntegration:getNgwafAlertSlackIntegration", TypeShape.of(GetNgwafAlertSlackIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Slack integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertSlackIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafSlackAlerts = FastlyFunctions.getNgwafAlertSlackIntegration(GetNgwafAlertSlackIntegrationArgs.builder()
     *             .workspaceId(example.id())
     *             .build());
     * 
     *         ctx.export("ngwafSlackAlertsAll", ngwafSlackAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertSlackIntegrationResult> getNgwafAlertSlackIntegration(GetNgwafAlertSlackIntegrationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafAlertSlackIntegration:getNgwafAlertSlackIntegration", TypeShape.of(GetNgwafAlertSlackIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Slack integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertSlackIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafSlackAlerts = FastlyFunctions.getNgwafAlertSlackIntegration(GetNgwafAlertSlackIntegrationArgs.builder()
     *             .workspaceId(example.id())
     *             .build());
     * 
     *         ctx.export("ngwafSlackAlertsAll", ngwafSlackAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNgwafAlertSlackIntegrationResult> getNgwafAlertSlackIntegrationPlain(GetNgwafAlertSlackIntegrationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getNgwafAlertSlackIntegration:getNgwafAlertSlackIntegration", TypeShape.of(GetNgwafAlertSlackIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Webhook integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertWebhookIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafWebhookAlerts = FastlyFunctions.getNgwafAlertWebhookIntegration(GetNgwafAlertWebhookIntegrationArgs.builder()
     *             .workspaceId(example.id())
     *             .build());
     * 
     *         ctx.export("ngwafWebhookAlertsAll", ngwafWebhookAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertWebhookIntegrationResult> getNgwafAlertWebhookIntegration(GetNgwafAlertWebhookIntegrationArgs args) {
        return getNgwafAlertWebhookIntegration(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Webhook integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertWebhookIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafWebhookAlerts = FastlyFunctions.getNgwafAlertWebhookIntegration(GetNgwafAlertWebhookIntegrationArgs.builder()
     *             .workspaceId(example.id())
     *             .build());
     * 
     *         ctx.export("ngwafWebhookAlertsAll", ngwafWebhookAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNgwafAlertWebhookIntegrationResult> getNgwafAlertWebhookIntegrationPlain(GetNgwafAlertWebhookIntegrationPlainArgs args) {
        return getNgwafAlertWebhookIntegrationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Webhook integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertWebhookIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafWebhookAlerts = FastlyFunctions.getNgwafAlertWebhookIntegration(GetNgwafAlertWebhookIntegrationArgs.builder()
     *             .workspaceId(example.id())
     *             .build());
     * 
     *         ctx.export("ngwafWebhookAlertsAll", ngwafWebhookAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertWebhookIntegrationResult> getNgwafAlertWebhookIntegration(GetNgwafAlertWebhookIntegrationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafAlertWebhookIntegration:getNgwafAlertWebhookIntegration", TypeShape.of(GetNgwafAlertWebhookIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Webhook integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertWebhookIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafWebhookAlerts = FastlyFunctions.getNgwafAlertWebhookIntegration(GetNgwafAlertWebhookIntegrationArgs.builder()
     *             .workspaceId(example.id())
     *             .build());
     * 
     *         ctx.export("ngwafWebhookAlertsAll", ngwafWebhookAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNgwafAlertWebhookIntegrationResult> getNgwafAlertWebhookIntegration(GetNgwafAlertWebhookIntegrationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafAlertWebhookIntegration:getNgwafAlertWebhookIntegration", TypeShape.of(GetNgwafAlertWebhookIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a Fastly Next-Gen WAF Alert Webhook integration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafAlertWebhookIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafWebhookAlerts = FastlyFunctions.getNgwafAlertWebhookIntegration(GetNgwafAlertWebhookIntegrationArgs.builder()
     *             .workspaceId(example.id())
     *             .build());
     * 
     *         ctx.export("ngwafWebhookAlertsAll", ngwafWebhookAlerts);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNgwafAlertWebhookIntegrationResult> getNgwafAlertWebhookIntegrationPlain(GetNgwafAlertWebhookIntegrationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getNgwafAlertWebhookIntegration:getNgwafAlertWebhookIntegration", TypeShape.of(GetNgwafAlertWebhookIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a list of [Fastly Next-Gen WAF Redactions][1].
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafRedactionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafRedactions = FastlyFunctions.getNgwafRedactions(GetNgwafRedactionsArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("fastlyNgwafRedactionsAll", redactions);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://www.fastly.com/documentation/reference/api/ngwaf/redactions/
     * 
     */
    public static Output<GetNgwafRedactionsResult> getNgwafRedactions(GetNgwafRedactionsArgs args) {
        return getNgwafRedactions(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a list of [Fastly Next-Gen WAF Redactions][1].
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafRedactionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafRedactions = FastlyFunctions.getNgwafRedactions(GetNgwafRedactionsArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("fastlyNgwafRedactionsAll", redactions);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://www.fastly.com/documentation/reference/api/ngwaf/redactions/
     * 
     */
    public static CompletableFuture<GetNgwafRedactionsResult> getNgwafRedactionsPlain(GetNgwafRedactionsPlainArgs args) {
        return getNgwafRedactionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a list of [Fastly Next-Gen WAF Redactions][1].
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafRedactionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafRedactions = FastlyFunctions.getNgwafRedactions(GetNgwafRedactionsArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("fastlyNgwafRedactionsAll", redactions);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://www.fastly.com/documentation/reference/api/ngwaf/redactions/
     * 
     */
    public static Output<GetNgwafRedactionsResult> getNgwafRedactions(GetNgwafRedactionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafRedactions:getNgwafRedactions", TypeShape.of(GetNgwafRedactionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a list of [Fastly Next-Gen WAF Redactions][1].
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafRedactionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafRedactions = FastlyFunctions.getNgwafRedactions(GetNgwafRedactionsArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("fastlyNgwafRedactionsAll", redactions);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://www.fastly.com/documentation/reference/api/ngwaf/redactions/
     * 
     */
    public static Output<GetNgwafRedactionsResult> getNgwafRedactions(GetNgwafRedactionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafRedactions:getNgwafRedactions", TypeShape.of(GetNgwafRedactionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a list of [Fastly Next-Gen WAF Redactions][1].
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafRedactionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ngwafRedactions = FastlyFunctions.getNgwafRedactions(GetNgwafRedactionsArgs.builder()
     *             .workspaceId(testRedactionsWorkspace.id())
     *             .build());
     * 
     *         ctx.export("fastlyNgwafRedactionsAll", redactions);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://www.fastly.com/documentation/reference/api/ngwaf/redactions/
     * 
     */
    public static CompletableFuture<GetNgwafRedactionsResult> getNgwafRedactionsPlain(GetNgwafRedactionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getNgwafRedactions:getNgwafRedactions", TypeShape.of(GetNgwafRedactionsResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetNgwafThresholdsResult> getNgwafThresholds(GetNgwafThresholdsArgs args) {
        return getNgwafThresholds(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetNgwafThresholdsResult> getNgwafThresholdsPlain(GetNgwafThresholdsPlainArgs args) {
        return getNgwafThresholdsPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetNgwafThresholdsResult> getNgwafThresholds(GetNgwafThresholdsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafThresholds:getNgwafThresholds", TypeShape.of(GetNgwafThresholdsResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetNgwafThresholdsResult> getNgwafThresholds(GetNgwafThresholdsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafThresholds:getNgwafThresholds", TypeShape.of(GetNgwafThresholdsResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetNgwafThresholdsResult> getNgwafThresholdsPlain(GetNgwafThresholdsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getNgwafThresholds:getNgwafThresholds", TypeShape.of(GetNgwafThresholdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a list of [Fastly Next-Gen WAF Virtual Patches][1] for a given workspace.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafVirtualPatchesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var listPatches = FastlyFunctions.getNgwafVirtualPatches(GetNgwafVirtualPatchesArgs.builder()
     *             .workspaceId(testVirtualPatchesWorkspace.id())
     *             .build());
     * 
     *         ctx.export("fastlyNgwafVirtualPatchesAll", listPatches);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://www.fastly.com/documentation/reference/api/ngwaf/virtual-patches/
     * 
     */
    public static Output<GetNgwafVirtualPatchesResult> getNgwafVirtualPatches(GetNgwafVirtualPatchesArgs args) {
        return getNgwafVirtualPatches(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a list of [Fastly Next-Gen WAF Virtual Patches][1] for a given workspace.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafVirtualPatchesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var listPatches = FastlyFunctions.getNgwafVirtualPatches(GetNgwafVirtualPatchesArgs.builder()
     *             .workspaceId(testVirtualPatchesWorkspace.id())
     *             .build());
     * 
     *         ctx.export("fastlyNgwafVirtualPatchesAll", listPatches);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://www.fastly.com/documentation/reference/api/ngwaf/virtual-patches/
     * 
     */
    public static CompletableFuture<GetNgwafVirtualPatchesResult> getNgwafVirtualPatchesPlain(GetNgwafVirtualPatchesPlainArgs args) {
        return getNgwafVirtualPatchesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a list of [Fastly Next-Gen WAF Virtual Patches][1] for a given workspace.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafVirtualPatchesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var listPatches = FastlyFunctions.getNgwafVirtualPatches(GetNgwafVirtualPatchesArgs.builder()
     *             .workspaceId(testVirtualPatchesWorkspace.id())
     *             .build());
     * 
     *         ctx.export("fastlyNgwafVirtualPatchesAll", listPatches);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://www.fastly.com/documentation/reference/api/ngwaf/virtual-patches/
     * 
     */
    public static Output<GetNgwafVirtualPatchesResult> getNgwafVirtualPatches(GetNgwafVirtualPatchesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafVirtualPatches:getNgwafVirtualPatches", TypeShape.of(GetNgwafVirtualPatchesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a list of [Fastly Next-Gen WAF Virtual Patches][1] for a given workspace.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafVirtualPatchesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var listPatches = FastlyFunctions.getNgwafVirtualPatches(GetNgwafVirtualPatchesArgs.builder()
     *             .workspaceId(testVirtualPatchesWorkspace.id())
     *             .build());
     * 
     *         ctx.export("fastlyNgwafVirtualPatchesAll", listPatches);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://www.fastly.com/documentation/reference/api/ngwaf/virtual-patches/
     * 
     */
    public static Output<GetNgwafVirtualPatchesResult> getNgwafVirtualPatches(GetNgwafVirtualPatchesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafVirtualPatches:getNgwafVirtualPatches", TypeShape.of(GetNgwafVirtualPatchesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a list of [Fastly Next-Gen WAF Virtual Patches][1] for a given workspace.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetNgwafVirtualPatchesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var listPatches = FastlyFunctions.getNgwafVirtualPatches(GetNgwafVirtualPatchesArgs.builder()
     *             .workspaceId(testVirtualPatchesWorkspace.id())
     *             .build());
     * 
     *         ctx.export("fastlyNgwafVirtualPatchesAll", listPatches);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://www.fastly.com/documentation/reference/api/ngwaf/virtual-patches/
     * 
     */
    public static CompletableFuture<GetNgwafVirtualPatchesResult> getNgwafVirtualPatchesPlain(GetNgwafVirtualPatchesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getNgwafVirtualPatches:getNgwafVirtualPatches", TypeShape.of(GetNgwafVirtualPatchesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a list of [Fastly Next-Gen WAF Workspaces][1].
     * 
     */
    public static Output<GetNgwafWorkspacesResult> getNgwafWorkspaces() {
        return getNgwafWorkspaces(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a list of [Fastly Next-Gen WAF Workspaces][1].
     * 
     */
    public static CompletableFuture<GetNgwafWorkspacesResult> getNgwafWorkspacesPlain() {
        return getNgwafWorkspacesPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a list of [Fastly Next-Gen WAF Workspaces][1].
     * 
     */
    public static Output<GetNgwafWorkspacesResult> getNgwafWorkspaces(InvokeArgs args) {
        return getNgwafWorkspaces(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a list of [Fastly Next-Gen WAF Workspaces][1].
     * 
     */
    public static CompletableFuture<GetNgwafWorkspacesResult> getNgwafWorkspacesPlain(InvokeArgs args) {
        return getNgwafWorkspacesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a list of [Fastly Next-Gen WAF Workspaces][1].
     * 
     */
    public static Output<GetNgwafWorkspacesResult> getNgwafWorkspaces(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafWorkspaces:getNgwafWorkspaces", TypeShape.of(GetNgwafWorkspacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a list of [Fastly Next-Gen WAF Workspaces][1].
     * 
     */
    public static Output<GetNgwafWorkspacesResult> getNgwafWorkspaces(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getNgwafWorkspaces:getNgwafWorkspaces", TypeShape.of(GetNgwafWorkspacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a list of [Fastly Next-Gen WAF Workspaces][1].
     * 
     */
    public static CompletableFuture<GetNgwafWorkspacesResult> getNgwafWorkspacesPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getNgwafWorkspaces:getNgwafWorkspaces", TypeShape.of(GetNgwafWorkspacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to generate a SHA512 hash of all files (in sorted order) within the package.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetPackageHashArgs;
     * import com.pulumi.fastly.ServiceCompute;
     * import com.pulumi.fastly.ServiceComputeArgs;
     * import com.pulumi.fastly.inputs.ServiceComputePackageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getPackageHash(GetPackageHashArgs.builder()
     *             .filename("./path/to/package.tar.gz")
     *             .build());
     * 
     *         var exampleServiceCompute = new ServiceCompute("exampleServiceCompute", ServiceComputeArgs.builder()
     *             .package_(ServiceComputePackageArgs.builder()
     *                 .filename("./path/to/package.tar.gz")
     *                 .sourceCodeHash(example.hash())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPackageHashResult> getPackageHash() {
        return getPackageHash(GetPackageHashArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to generate a SHA512 hash of all files (in sorted order) within the package.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetPackageHashArgs;
     * import com.pulumi.fastly.ServiceCompute;
     * import com.pulumi.fastly.ServiceComputeArgs;
     * import com.pulumi.fastly.inputs.ServiceComputePackageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getPackageHash(GetPackageHashArgs.builder()
     *             .filename("./path/to/package.tar.gz")
     *             .build());
     * 
     *         var exampleServiceCompute = new ServiceCompute("exampleServiceCompute", ServiceComputeArgs.builder()
     *             .package_(ServiceComputePackageArgs.builder()
     *                 .filename("./path/to/package.tar.gz")
     *                 .sourceCodeHash(example.hash())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPackageHashResult> getPackageHashPlain() {
        return getPackageHashPlain(GetPackageHashPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to generate a SHA512 hash of all files (in sorted order) within the package.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetPackageHashArgs;
     * import com.pulumi.fastly.ServiceCompute;
     * import com.pulumi.fastly.ServiceComputeArgs;
     * import com.pulumi.fastly.inputs.ServiceComputePackageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getPackageHash(GetPackageHashArgs.builder()
     *             .filename("./path/to/package.tar.gz")
     *             .build());
     * 
     *         var exampleServiceCompute = new ServiceCompute("exampleServiceCompute", ServiceComputeArgs.builder()
     *             .package_(ServiceComputePackageArgs.builder()
     *                 .filename("./path/to/package.tar.gz")
     *                 .sourceCodeHash(example.hash())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPackageHashResult> getPackageHash(GetPackageHashArgs args) {
        return getPackageHash(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to generate a SHA512 hash of all files (in sorted order) within the package.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetPackageHashArgs;
     * import com.pulumi.fastly.ServiceCompute;
     * import com.pulumi.fastly.ServiceComputeArgs;
     * import com.pulumi.fastly.inputs.ServiceComputePackageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getPackageHash(GetPackageHashArgs.builder()
     *             .filename("./path/to/package.tar.gz")
     *             .build());
     * 
     *         var exampleServiceCompute = new ServiceCompute("exampleServiceCompute", ServiceComputeArgs.builder()
     *             .package_(ServiceComputePackageArgs.builder()
     *                 .filename("./path/to/package.tar.gz")
     *                 .sourceCodeHash(example.hash())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPackageHashResult> getPackageHashPlain(GetPackageHashPlainArgs args) {
        return getPackageHashPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to generate a SHA512 hash of all files (in sorted order) within the package.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetPackageHashArgs;
     * import com.pulumi.fastly.ServiceCompute;
     * import com.pulumi.fastly.ServiceComputeArgs;
     * import com.pulumi.fastly.inputs.ServiceComputePackageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getPackageHash(GetPackageHashArgs.builder()
     *             .filename("./path/to/package.tar.gz")
     *             .build());
     * 
     *         var exampleServiceCompute = new ServiceCompute("exampleServiceCompute", ServiceComputeArgs.builder()
     *             .package_(ServiceComputePackageArgs.builder()
     *                 .filename("./path/to/package.tar.gz")
     *                 .sourceCodeHash(example.hash())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPackageHashResult> getPackageHash(GetPackageHashArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getPackageHash:getPackageHash", TypeShape.of(GetPackageHashResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to generate a SHA512 hash of all files (in sorted order) within the package.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetPackageHashArgs;
     * import com.pulumi.fastly.ServiceCompute;
     * import com.pulumi.fastly.ServiceComputeArgs;
     * import com.pulumi.fastly.inputs.ServiceComputePackageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getPackageHash(GetPackageHashArgs.builder()
     *             .filename("./path/to/package.tar.gz")
     *             .build());
     * 
     *         var exampleServiceCompute = new ServiceCompute("exampleServiceCompute", ServiceComputeArgs.builder()
     *             .package_(ServiceComputePackageArgs.builder()
     *                 .filename("./path/to/package.tar.gz")
     *                 .sourceCodeHash(example.hash())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPackageHashResult> getPackageHash(GetPackageHashArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getPackageHash:getPackageHash", TypeShape.of(GetPackageHashResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to generate a SHA512 hash of all files (in sorted order) within the package.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetPackageHashArgs;
     * import com.pulumi.fastly.ServiceCompute;
     * import com.pulumi.fastly.ServiceComputeArgs;
     * import com.pulumi.fastly.inputs.ServiceComputePackageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getPackageHash(GetPackageHashArgs.builder()
     *             .filename("./path/to/package.tar.gz")
     *             .build());
     * 
     *         var exampleServiceCompute = new ServiceCompute("exampleServiceCompute", ServiceComputeArgs.builder()
     *             .package_(ServiceComputePackageArgs.builder()
     *                 .filename("./path/to/package.tar.gz")
     *                 .sourceCodeHash(example.hash())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPackageHashResult> getPackageHashPlain(GetPackageHashPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getPackageHash:getPackageHash", TypeShape.of(GetPackageHashResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetSecretstoresResult> getSecretstores() {
        return getSecretstores(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSecretstoresResult> getSecretstoresPlain() {
        return getSecretstoresPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetSecretstoresResult> getSecretstores(InvokeArgs args) {
        return getSecretstores(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSecretstoresResult> getSecretstoresPlain(InvokeArgs args) {
        return getSecretstoresPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetSecretstoresResult> getSecretstores(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getSecretstores:getSecretstores", TypeShape.of(GetSecretstoresResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetSecretstoresResult> getSecretstores(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getSecretstores:getSecretstores", TypeShape.of(GetSecretstoresResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetSecretstoresResult> getSecretstoresPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getSecretstores:getSecretstores", TypeShape.of(GetSecretstoresResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of the [Fastly services](https://developer.fastly.com/reference/api/services/service/).
     * 
     */
    public static Output<GetServicesResult> getServices() {
        return getServices(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of the [Fastly services](https://developer.fastly.com/reference/api/services/service/).
     * 
     */
    public static CompletableFuture<GetServicesResult> getServicesPlain() {
        return getServicesPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of the [Fastly services](https://developer.fastly.com/reference/api/services/service/).
     * 
     */
    public static Output<GetServicesResult> getServices(InvokeArgs args) {
        return getServices(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of the [Fastly services](https://developer.fastly.com/reference/api/services/service/).
     * 
     */
    public static CompletableFuture<GetServicesResult> getServicesPlain(InvokeArgs args) {
        return getServicesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of the [Fastly services](https://developer.fastly.com/reference/api/services/service/).
     * 
     */
    public static Output<GetServicesResult> getServices(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getServices:getServices", TypeShape.of(GetServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of the [Fastly services](https://developer.fastly.com/reference/api/services/service/).
     * 
     */
    public static Output<GetServicesResult> getServices(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getServices:getServices", TypeShape.of(GetServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of the [Fastly services](https://developer.fastly.com/reference/api/services/service/).
     * 
     */
    public static CompletableFuture<GetServicesResult> getServicesPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getServices:getServices", TypeShape.of(GetServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information on a TLS activation, including the certificate used, and the domain on which TLS was enabled.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsActivation(GetTlsActivationArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsActivationResult> getTlsActivation() {
        return getTlsActivation(GetTlsActivationArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on a TLS activation, including the certificate used, and the domain on which TLS was enabled.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsActivation(GetTlsActivationArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsActivationResult> getTlsActivationPlain() {
        return getTlsActivationPlain(GetTlsActivationPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on a TLS activation, including the certificate used, and the domain on which TLS was enabled.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsActivation(GetTlsActivationArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsActivationResult> getTlsActivation(GetTlsActivationArgs args) {
        return getTlsActivation(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on a TLS activation, including the certificate used, and the domain on which TLS was enabled.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsActivation(GetTlsActivationArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsActivationResult> getTlsActivationPlain(GetTlsActivationPlainArgs args) {
        return getTlsActivationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on a TLS activation, including the certificate used, and the domain on which TLS was enabled.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsActivation(GetTlsActivationArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsActivationResult> getTlsActivation(GetTlsActivationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsActivation:getTlsActivation", TypeShape.of(GetTlsActivationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information on a TLS activation, including the certificate used, and the domain on which TLS was enabled.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsActivation(GetTlsActivationArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsActivationResult> getTlsActivation(GetTlsActivationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsActivation:getTlsActivation", TypeShape.of(GetTlsActivationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information on a TLS activation, including the certificate used, and the domain on which TLS was enabled.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsActivation(GetTlsActivationArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsActivationResult> getTlsActivationPlain(GetTlsActivationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsActivation:getTlsActivation", TypeShape.of(GetTlsActivationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of TLS Activation identifiers in Fastly.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetTlsActivationIdsResult> getTlsActivationIds() {
        return getTlsActivationIds(GetTlsActivationIdsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of TLS Activation identifiers in Fastly.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetTlsActivationIdsResult> getTlsActivationIdsPlain() {
        return getTlsActivationIdsPlain(GetTlsActivationIdsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of TLS Activation identifiers in Fastly.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetTlsActivationIdsResult> getTlsActivationIds(GetTlsActivationIdsArgs args) {
        return getTlsActivationIds(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of TLS Activation identifiers in Fastly.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetTlsActivationIdsResult> getTlsActivationIdsPlain(GetTlsActivationIdsPlainArgs args) {
        return getTlsActivationIdsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of TLS Activation identifiers in Fastly.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetTlsActivationIdsResult> getTlsActivationIds(GetTlsActivationIdsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsActivationIds:getTlsActivationIds", TypeShape.of(GetTlsActivationIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of TLS Activation identifiers in Fastly.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetTlsActivationIdsResult> getTlsActivationIds(GetTlsActivationIdsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsActivationIds:getTlsActivationIds", TypeShape.of(GetTlsActivationIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of TLS Activation identifiers in Fastly.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetTlsActivationIdsResult> getTlsActivationIdsPlain(GetTlsActivationIdsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsActivationIds:getTlsActivationIds", TypeShape.of(GetTlsActivationIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of a TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificate(GetTlsCertificateArgs.builder()
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsCertificateResult> getTlsCertificate() {
        return getTlsCertificate(GetTlsCertificateArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of a TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificate(GetTlsCertificateArgs.builder()
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsCertificateResult> getTlsCertificatePlain() {
        return getTlsCertificatePlain(GetTlsCertificatePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of a TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificate(GetTlsCertificateArgs.builder()
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsCertificateResult> getTlsCertificate(GetTlsCertificateArgs args) {
        return getTlsCertificate(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of a TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificate(GetTlsCertificateArgs.builder()
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsCertificateResult> getTlsCertificatePlain(GetTlsCertificatePlainArgs args) {
        return getTlsCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of a TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificate(GetTlsCertificateArgs.builder()
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsCertificateResult> getTlsCertificate(GetTlsCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsCertificate:getTlsCertificate", TypeShape.of(GetTlsCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of a TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificate(GetTlsCertificateArgs.builder()
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsCertificateResult> getTlsCertificate(GetTlsCertificateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsCertificate:getTlsCertificate", TypeShape.of(GetTlsCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of a TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificate(GetTlsCertificateArgs.builder()
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsCertificateResult> getTlsCertificatePlain(GetTlsCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsCertificate:getTlsCertificate", TypeShape.of(GetTlsCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of available TLS certificates for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificateIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .certificateId(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsCertificateIdsResult> getTlsCertificateIds() {
        return getTlsCertificateIds(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available TLS certificates for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificateIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .certificateId(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsCertificateIdsResult> getTlsCertificateIdsPlain() {
        return getTlsCertificateIdsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available TLS certificates for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificateIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .certificateId(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsCertificateIdsResult> getTlsCertificateIds(InvokeArgs args) {
        return getTlsCertificateIds(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available TLS certificates for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificateIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .certificateId(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsCertificateIdsResult> getTlsCertificateIdsPlain(InvokeArgs args) {
        return getTlsCertificateIdsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available TLS certificates for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificateIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .certificateId(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsCertificateIdsResult> getTlsCertificateIds(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsCertificateIds:getTlsCertificateIds", TypeShape.of(GetTlsCertificateIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of available TLS certificates for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificateIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .certificateId(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsCertificateIdsResult> getTlsCertificateIds(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsCertificateIds:getTlsCertificateIds", TypeShape.of(GetTlsCertificateIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of available TLS certificates for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificateIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .certificateId(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsCertificateIdsResult> getTlsCertificateIdsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsCertificateIds:getTlsCertificateIds", TypeShape.of(GetTlsCertificateIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the ID of a TLS configuration for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsConfigurationArgs;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsConfiguration(GetTlsConfigurationArgs.builder()
     *             .default_(true)
     *             .build());
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .configurationId(example.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsConfigurationResult> getTlsConfiguration() {
        return getTlsConfiguration(GetTlsConfigurationArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ID of a TLS configuration for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsConfigurationArgs;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsConfiguration(GetTlsConfigurationArgs.builder()
     *             .default_(true)
     *             .build());
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .configurationId(example.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsConfigurationResult> getTlsConfigurationPlain() {
        return getTlsConfigurationPlain(GetTlsConfigurationPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ID of a TLS configuration for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsConfigurationArgs;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsConfiguration(GetTlsConfigurationArgs.builder()
     *             .default_(true)
     *             .build());
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .configurationId(example.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsConfigurationResult> getTlsConfiguration(GetTlsConfigurationArgs args) {
        return getTlsConfiguration(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ID of a TLS configuration for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsConfigurationArgs;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsConfiguration(GetTlsConfigurationArgs.builder()
     *             .default_(true)
     *             .build());
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .configurationId(example.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsConfigurationResult> getTlsConfigurationPlain(GetTlsConfigurationPlainArgs args) {
        return getTlsConfigurationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ID of a TLS configuration for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsConfigurationArgs;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsConfiguration(GetTlsConfigurationArgs.builder()
     *             .default_(true)
     *             .build());
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .configurationId(example.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsConfigurationResult> getTlsConfiguration(GetTlsConfigurationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsConfiguration:getTlsConfiguration", TypeShape.of(GetTlsConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the ID of a TLS configuration for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsConfigurationArgs;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsConfiguration(GetTlsConfigurationArgs.builder()
     *             .default_(true)
     *             .build());
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .configurationId(example.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsConfigurationResult> getTlsConfiguration(GetTlsConfigurationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsConfiguration:getTlsConfiguration", TypeShape.of(GetTlsConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the ID of a TLS configuration for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsConfigurationArgs;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsConfiguration(GetTlsConfigurationArgs.builder()
     *             .default_(true)
     *             .build());
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .configurationId(example.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsConfigurationResult> getTlsConfigurationPlain(GetTlsConfigurationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsConfiguration:getTlsConfiguration", TypeShape.of(GetTlsConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of available TLS configurations for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsConfigurationIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .configurationId(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsConfigurationIdsResult> getTlsConfigurationIds() {
        return getTlsConfigurationIds(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available TLS configurations for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsConfigurationIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .configurationId(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsConfigurationIdsResult> getTlsConfigurationIdsPlain() {
        return getTlsConfigurationIdsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available TLS configurations for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsConfigurationIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .configurationId(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsConfigurationIdsResult> getTlsConfigurationIds(InvokeArgs args) {
        return getTlsConfigurationIds(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available TLS configurations for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsConfigurationIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .configurationId(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsConfigurationIdsResult> getTlsConfigurationIdsPlain(InvokeArgs args) {
        return getTlsConfigurationIdsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available TLS configurations for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsConfigurationIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .configurationId(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsConfigurationIdsResult> getTlsConfigurationIds(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsConfigurationIds:getTlsConfigurationIds", TypeShape.of(GetTlsConfigurationIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of available TLS configurations for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsConfigurationIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .configurationId(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsConfigurationIdsResult> getTlsConfigurationIds(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsConfigurationIds:getTlsConfigurationIds", TypeShape.of(GetTlsConfigurationIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of available TLS configurations for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsConfigurationIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var exampleTlsActivation = new TlsActivation("exampleTlsActivation", TlsActivationArgs.builder()
     *             .configurationId(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsConfigurationIdsResult> getTlsConfigurationIdsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsConfigurationIds:getTlsConfigurationIds", TypeShape.of(GetTlsConfigurationIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of activations, certificates and subscriptions associated with a domain.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = FastlyFunctions.getTlsDomain(GetTlsDomainArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsDomainResult> getTlsDomain(GetTlsDomainArgs args) {
        return getTlsDomain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of activations, certificates and subscriptions associated with a domain.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = FastlyFunctions.getTlsDomain(GetTlsDomainArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsDomainResult> getTlsDomainPlain(GetTlsDomainPlainArgs args) {
        return getTlsDomainPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of activations, certificates and subscriptions associated with a domain.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = FastlyFunctions.getTlsDomain(GetTlsDomainArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsDomainResult> getTlsDomain(GetTlsDomainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsDomain:getTlsDomain", TypeShape.of(GetTlsDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of activations, certificates and subscriptions associated with a domain.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = FastlyFunctions.getTlsDomain(GetTlsDomainArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsDomainResult> getTlsDomain(GetTlsDomainArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsDomain:getTlsDomain", TypeShape.of(GetTlsDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of activations, certificates and subscriptions associated with a domain.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = FastlyFunctions.getTlsDomain(GetTlsDomainArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsDomainResult> getTlsDomainPlain(GetTlsDomainPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsDomain:getTlsDomain", TypeShape.of(GetTlsDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of a Platform TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .domains("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsPlatformCertificateResult> getTlsPlatformCertificate() {
        return getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of a Platform TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .domains("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsPlatformCertificateResult> getTlsPlatformCertificatePlain() {
        return getTlsPlatformCertificatePlain(GetTlsPlatformCertificatePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of a Platform TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .domains("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsPlatformCertificateResult> getTlsPlatformCertificate(GetTlsPlatformCertificateArgs args) {
        return getTlsPlatformCertificate(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of a Platform TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .domains("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsPlatformCertificateResult> getTlsPlatformCertificatePlain(GetTlsPlatformCertificatePlainArgs args) {
        return getTlsPlatformCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of a Platform TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .domains("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsPlatformCertificateResult> getTlsPlatformCertificate(GetTlsPlatformCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsPlatformCertificate:getTlsPlatformCertificate", TypeShape.of(GetTlsPlatformCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of a Platform TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .domains("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsPlatformCertificateResult> getTlsPlatformCertificate(GetTlsPlatformCertificateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsPlatformCertificate:getTlsPlatformCertificate", TypeShape.of(GetTlsPlatformCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of a Platform TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .domains("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsPlatformCertificateResult> getTlsPlatformCertificatePlain(GetTlsPlatformCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsPlatformCertificate:getTlsPlatformCertificate", TypeShape.of(GetTlsPlatformCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of available Platform TLS Certificates for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificateIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         final var exampleGetTlsPlatformCertificate = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .id(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsPlatformCertificateIdsResult> getTlsPlatformCertificateIds() {
        return getTlsPlatformCertificateIds(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available Platform TLS Certificates for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificateIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         final var exampleGetTlsPlatformCertificate = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .id(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsPlatformCertificateIdsResult> getTlsPlatformCertificateIdsPlain() {
        return getTlsPlatformCertificateIdsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available Platform TLS Certificates for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificateIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         final var exampleGetTlsPlatformCertificate = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .id(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsPlatformCertificateIdsResult> getTlsPlatformCertificateIds(InvokeArgs args) {
        return getTlsPlatformCertificateIds(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available Platform TLS Certificates for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificateIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         final var exampleGetTlsPlatformCertificate = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .id(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsPlatformCertificateIdsResult> getTlsPlatformCertificateIdsPlain(InvokeArgs args) {
        return getTlsPlatformCertificateIdsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available Platform TLS Certificates for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificateIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         final var exampleGetTlsPlatformCertificate = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .id(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsPlatformCertificateIdsResult> getTlsPlatformCertificateIds(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsPlatformCertificateIds:getTlsPlatformCertificateIds", TypeShape.of(GetTlsPlatformCertificateIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of available Platform TLS Certificates for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificateIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         final var exampleGetTlsPlatformCertificate = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .id(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsPlatformCertificateIdsResult> getTlsPlatformCertificateIds(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsPlatformCertificateIds:getTlsPlatformCertificateIds", TypeShape.of(GetTlsPlatformCertificateIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of available Platform TLS Certificates for use with other resources.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificateIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         final var exampleGetTlsPlatformCertificate = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .id(example.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsPlatformCertificateIdsResult> getTlsPlatformCertificateIdsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsPlatformCertificateIds:getTlsPlatformCertificateIds", TypeShape.of(GetTlsPlatformCertificateIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information on a TLS Private Key uploaded to Fastly.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     *  of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     *  with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search
     *  is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .name("demo-private-key")
     *             .build());
     * 
     *         ctx.export("privateKeyNeedsReplacing", demo.replace());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsPrivateKeyResult> getTlsPrivateKey() {
        return getTlsPrivateKey(GetTlsPrivateKeyArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on a TLS Private Key uploaded to Fastly.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     *  of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     *  with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search
     *  is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .name("demo-private-key")
     *             .build());
     * 
     *         ctx.export("privateKeyNeedsReplacing", demo.replace());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsPrivateKeyResult> getTlsPrivateKeyPlain() {
        return getTlsPrivateKeyPlain(GetTlsPrivateKeyPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on a TLS Private Key uploaded to Fastly.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     *  of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     *  with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search
     *  is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .name("demo-private-key")
     *             .build());
     * 
     *         ctx.export("privateKeyNeedsReplacing", demo.replace());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsPrivateKeyResult> getTlsPrivateKey(GetTlsPrivateKeyArgs args) {
        return getTlsPrivateKey(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on a TLS Private Key uploaded to Fastly.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     *  of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     *  with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search
     *  is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .name("demo-private-key")
     *             .build());
     * 
     *         ctx.export("privateKeyNeedsReplacing", demo.replace());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsPrivateKeyResult> getTlsPrivateKeyPlain(GetTlsPrivateKeyPlainArgs args) {
        return getTlsPrivateKeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on a TLS Private Key uploaded to Fastly.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     *  of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     *  with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search
     *  is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .name("demo-private-key")
     *             .build());
     * 
     *         ctx.export("privateKeyNeedsReplacing", demo.replace());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsPrivateKeyResult> getTlsPrivateKey(GetTlsPrivateKeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsPrivateKey:getTlsPrivateKey", TypeShape.of(GetTlsPrivateKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information on a TLS Private Key uploaded to Fastly.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     *  of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     *  with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search
     *  is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .name("demo-private-key")
     *             .build());
     * 
     *         ctx.export("privateKeyNeedsReplacing", demo.replace());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsPrivateKeyResult> getTlsPrivateKey(GetTlsPrivateKeyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsPrivateKey:getTlsPrivateKey", TypeShape.of(GetTlsPrivateKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information on a TLS Private Key uploaded to Fastly.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     *  of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     *  with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search
     *  is specific enough to return a single key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .name("demo-private-key")
     *             .build());
     * 
     *         ctx.export("privateKeyNeedsReplacing", demo.replace());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsPrivateKeyResult> getTlsPrivateKeyPlain(GetTlsPrivateKeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsPrivateKey:getTlsPrivateKey", TypeShape.of(GetTlsPrivateKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of TLS private key identifiers in Fastly.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKeyIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         final var example = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .id(demoFastlyTlsPrivateKeyIds.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsPrivateKeyIdsResult> getTlsPrivateKeyIds() {
        return getTlsPrivateKeyIds(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of TLS private key identifiers in Fastly.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKeyIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         final var example = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .id(demoFastlyTlsPrivateKeyIds.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsPrivateKeyIdsResult> getTlsPrivateKeyIdsPlain() {
        return getTlsPrivateKeyIdsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of TLS private key identifiers in Fastly.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKeyIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         final var example = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .id(demoFastlyTlsPrivateKeyIds.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsPrivateKeyIdsResult> getTlsPrivateKeyIds(InvokeArgs args) {
        return getTlsPrivateKeyIds(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of TLS private key identifiers in Fastly.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKeyIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         final var example = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .id(demoFastlyTlsPrivateKeyIds.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsPrivateKeyIdsResult> getTlsPrivateKeyIdsPlain(InvokeArgs args) {
        return getTlsPrivateKeyIdsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of TLS private key identifiers in Fastly.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKeyIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         final var example = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .id(demoFastlyTlsPrivateKeyIds.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsPrivateKeyIdsResult> getTlsPrivateKeyIds(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsPrivateKeyIds:getTlsPrivateKeyIds", TypeShape.of(GetTlsPrivateKeyIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of TLS private key identifiers in Fastly.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKeyIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         final var example = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .id(demoFastlyTlsPrivateKeyIds.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsPrivateKeyIdsResult> getTlsPrivateKeyIds(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsPrivateKeyIds:getTlsPrivateKeyIds", TypeShape.of(GetTlsPrivateKeyIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of TLS private key identifiers in Fastly.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKeyIds(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         final var example = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .id(demoFastlyTlsPrivateKeyIds.ids()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsPrivateKeyIdsResult> getTlsPrivateKeyIdsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsPrivateKeyIds:getTlsPrivateKeyIds", TypeShape.of(GetTlsPrivateKeyIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a TLS subscription.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsSubscription(GetTlsSubscriptionArgs.builder()
     *             .domains("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsSubscriptionResult> getTlsSubscription() {
        return getTlsSubscription(GetTlsSubscriptionArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a TLS subscription.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsSubscription(GetTlsSubscriptionArgs.builder()
     *             .domains("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsSubscriptionResult> getTlsSubscriptionPlain() {
        return getTlsSubscriptionPlain(GetTlsSubscriptionPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a TLS subscription.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsSubscription(GetTlsSubscriptionArgs.builder()
     *             .domains("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsSubscriptionResult> getTlsSubscription(GetTlsSubscriptionArgs args) {
        return getTlsSubscription(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a TLS subscription.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsSubscription(GetTlsSubscriptionArgs.builder()
     *             .domains("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsSubscriptionResult> getTlsSubscriptionPlain(GetTlsSubscriptionPlainArgs args) {
        return getTlsSubscriptionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a TLS subscription.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsSubscription(GetTlsSubscriptionArgs.builder()
     *             .domains("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsSubscriptionResult> getTlsSubscription(GetTlsSubscriptionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsSubscription:getTlsSubscription", TypeShape.of(GetTlsSubscriptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a TLS subscription.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsSubscription(GetTlsSubscriptionArgs.builder()
     *             .domains("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTlsSubscriptionResult> getTlsSubscription(GetTlsSubscriptionArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsSubscription:getTlsSubscription", TypeShape.of(GetTlsSubscriptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a TLS subscription.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsSubscription(GetTlsSubscriptionArgs.builder()
     *             .domains("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTlsSubscriptionResult> getTlsSubscriptionPlain(GetTlsSubscriptionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsSubscription:getTlsSubscription", TypeShape.of(GetTlsSubscriptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of IDs of TLS Subscriptions in Fastly.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetTlsSubscriptionIdsResult> getTlsSubscriptionIds() {
        return getTlsSubscriptionIds(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of IDs of TLS Subscriptions in Fastly.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetTlsSubscriptionIdsResult> getTlsSubscriptionIdsPlain() {
        return getTlsSubscriptionIdsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of IDs of TLS Subscriptions in Fastly.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetTlsSubscriptionIdsResult> getTlsSubscriptionIds(InvokeArgs args) {
        return getTlsSubscriptionIds(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of IDs of TLS Subscriptions in Fastly.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetTlsSubscriptionIdsResult> getTlsSubscriptionIdsPlain(InvokeArgs args) {
        return getTlsSubscriptionIdsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of IDs of TLS Subscriptions in Fastly.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetTlsSubscriptionIdsResult> getTlsSubscriptionIds(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsSubscriptionIds:getTlsSubscriptionIds", TypeShape.of(GetTlsSubscriptionIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of IDs of TLS Subscriptions in Fastly.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetTlsSubscriptionIdsResult> getTlsSubscriptionIds(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsSubscriptionIds:getTlsSubscriptionIds", TypeShape.of(GetTlsSubscriptionIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of IDs of TLS Subscriptions in Fastly.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetTlsSubscriptionIdsResult> getTlsSubscriptionIdsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsSubscriptionIds:getTlsSubscriptionIds", TypeShape.of(GetTlsSubscriptionIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * VCL Snippets are blocks of VCL logic inserted into your service&#39;s configuration that don&#39;t require custom VCL.
     * 
     * Use this data source to get a list of [Fastly VCL Snippets](https://www.fastly.com/documentation/reference/api/vcl-services/snippet/) for the specified service/version.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.ServiceVcl;
     * import com.pulumi.fastly.ServiceVclArgs;
     * import com.pulumi.fastly.inputs.ServiceVclDomainArgs;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetVclSnippetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleServiceVcl = new ServiceVcl("exampleServiceVcl", ServiceVclArgs.builder()
     *             .name("Example Service")
     *             .domains(ServiceVclDomainArgs.builder()
     *                 .name("example.com")
     *                 .build())
     *             .forceDestroy(true)
     *             .build());
     * 
     *         final var example = FastlyFunctions.getVclSnippets(GetVclSnippetsArgs.builder()
     *             .serviceId(exampleServiceVcl.id())
     *             .serviceVersion(exampleServiceVcl.activeVersion())
     *             .build());
     * 
     *         ctx.export("serviceVclSnippets", example);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://www.fastly.com/documentation/reference/api/vcl-services/snippet/
     * 
     */
    public static Output<GetVclSnippetsResult> getVclSnippets(GetVclSnippetsArgs args) {
        return getVclSnippets(args, InvokeOptions.Empty);
    }
    /**
     * VCL Snippets are blocks of VCL logic inserted into your service&#39;s configuration that don&#39;t require custom VCL.
     * 
     * Use this data source to get a list of [Fastly VCL Snippets](https://www.fastly.com/documentation/reference/api/vcl-services/snippet/) for the specified service/version.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.ServiceVcl;
     * import com.pulumi.fastly.ServiceVclArgs;
     * import com.pulumi.fastly.inputs.ServiceVclDomainArgs;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetVclSnippetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleServiceVcl = new ServiceVcl("exampleServiceVcl", ServiceVclArgs.builder()
     *             .name("Example Service")
     *             .domains(ServiceVclDomainArgs.builder()
     *                 .name("example.com")
     *                 .build())
     *             .forceDestroy(true)
     *             .build());
     * 
     *         final var example = FastlyFunctions.getVclSnippets(GetVclSnippetsArgs.builder()
     *             .serviceId(exampleServiceVcl.id())
     *             .serviceVersion(exampleServiceVcl.activeVersion())
     *             .build());
     * 
     *         ctx.export("serviceVclSnippets", example);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://www.fastly.com/documentation/reference/api/vcl-services/snippet/
     * 
     */
    public static CompletableFuture<GetVclSnippetsResult> getVclSnippetsPlain(GetVclSnippetsPlainArgs args) {
        return getVclSnippetsPlain(args, InvokeOptions.Empty);
    }
    /**
     * VCL Snippets are blocks of VCL logic inserted into your service&#39;s configuration that don&#39;t require custom VCL.
     * 
     * Use this data source to get a list of [Fastly VCL Snippets](https://www.fastly.com/documentation/reference/api/vcl-services/snippet/) for the specified service/version.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.ServiceVcl;
     * import com.pulumi.fastly.ServiceVclArgs;
     * import com.pulumi.fastly.inputs.ServiceVclDomainArgs;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetVclSnippetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleServiceVcl = new ServiceVcl("exampleServiceVcl", ServiceVclArgs.builder()
     *             .name("Example Service")
     *             .domains(ServiceVclDomainArgs.builder()
     *                 .name("example.com")
     *                 .build())
     *             .forceDestroy(true)
     *             .build());
     * 
     *         final var example = FastlyFunctions.getVclSnippets(GetVclSnippetsArgs.builder()
     *             .serviceId(exampleServiceVcl.id())
     *             .serviceVersion(exampleServiceVcl.activeVersion())
     *             .build());
     * 
     *         ctx.export("serviceVclSnippets", example);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://www.fastly.com/documentation/reference/api/vcl-services/snippet/
     * 
     */
    public static Output<GetVclSnippetsResult> getVclSnippets(GetVclSnippetsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getVclSnippets:getVclSnippets", TypeShape.of(GetVclSnippetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * VCL Snippets are blocks of VCL logic inserted into your service&#39;s configuration that don&#39;t require custom VCL.
     * 
     * Use this data source to get a list of [Fastly VCL Snippets](https://www.fastly.com/documentation/reference/api/vcl-services/snippet/) for the specified service/version.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.ServiceVcl;
     * import com.pulumi.fastly.ServiceVclArgs;
     * import com.pulumi.fastly.inputs.ServiceVclDomainArgs;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetVclSnippetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleServiceVcl = new ServiceVcl("exampleServiceVcl", ServiceVclArgs.builder()
     *             .name("Example Service")
     *             .domains(ServiceVclDomainArgs.builder()
     *                 .name("example.com")
     *                 .build())
     *             .forceDestroy(true)
     *             .build());
     * 
     *         final var example = FastlyFunctions.getVclSnippets(GetVclSnippetsArgs.builder()
     *             .serviceId(exampleServiceVcl.id())
     *             .serviceVersion(exampleServiceVcl.activeVersion())
     *             .build());
     * 
     *         ctx.export("serviceVclSnippets", example);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://www.fastly.com/documentation/reference/api/vcl-services/snippet/
     * 
     */
    public static Output<GetVclSnippetsResult> getVclSnippets(GetVclSnippetsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getVclSnippets:getVclSnippets", TypeShape.of(GetVclSnippetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * VCL Snippets are blocks of VCL logic inserted into your service&#39;s configuration that don&#39;t require custom VCL.
     * 
     * Use this data source to get a list of [Fastly VCL Snippets](https://www.fastly.com/documentation/reference/api/vcl-services/snippet/) for the specified service/version.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.ServiceVcl;
     * import com.pulumi.fastly.ServiceVclArgs;
     * import com.pulumi.fastly.inputs.ServiceVclDomainArgs;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetVclSnippetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleServiceVcl = new ServiceVcl("exampleServiceVcl", ServiceVclArgs.builder()
     *             .name("Example Service")
     *             .domains(ServiceVclDomainArgs.builder()
     *                 .name("example.com")
     *                 .build())
     *             .forceDestroy(true)
     *             .build());
     * 
     *         final var example = FastlyFunctions.getVclSnippets(GetVclSnippetsArgs.builder()
     *             .serviceId(exampleServiceVcl.id())
     *             .serviceVersion(exampleServiceVcl.activeVersion())
     *             .build());
     * 
     *         ctx.export("serviceVclSnippets", example);
     *     }
     * }
     * }
     * </pre>
     * 
     * [1]: https://www.fastly.com/documentation/reference/api/vcl-services/snippet/
     * 
     */
    public static CompletableFuture<GetVclSnippetsResult> getVclSnippetsPlain(GetVclSnippetsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getVclSnippets:getVclSnippets", TypeShape.of(GetVclSnippetsResult.class), args, Utilities.withVersion(options));
    }
}
