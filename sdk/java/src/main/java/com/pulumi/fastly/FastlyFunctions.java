// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.fastly.Utilities;
import com.pulumi.fastly.inputs.GetTlsActivationArgs;
import com.pulumi.fastly.inputs.GetTlsActivationIdsArgs;
import com.pulumi.fastly.inputs.GetTlsActivationIdsPlainArgs;
import com.pulumi.fastly.inputs.GetTlsActivationPlainArgs;
import com.pulumi.fastly.inputs.GetTlsCertificateArgs;
import com.pulumi.fastly.inputs.GetTlsCertificatePlainArgs;
import com.pulumi.fastly.inputs.GetTlsConfigurationArgs;
import com.pulumi.fastly.inputs.GetTlsConfigurationPlainArgs;
import com.pulumi.fastly.inputs.GetTlsDomainArgs;
import com.pulumi.fastly.inputs.GetTlsDomainPlainArgs;
import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
import com.pulumi.fastly.inputs.GetTlsPlatformCertificatePlainArgs;
import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
import com.pulumi.fastly.inputs.GetTlsPrivateKeyPlainArgs;
import com.pulumi.fastly.inputs.GetTlsSubscriptionArgs;
import com.pulumi.fastly.inputs.GetTlsSubscriptionPlainArgs;
import com.pulumi.fastly.inputs.GetWafRulesArgs;
import com.pulumi.fastly.inputs.GetWafRulesPlainArgs;
import com.pulumi.fastly.outputs.GetDatacentersResult;
import com.pulumi.fastly.outputs.GetFastlyIpRangesResult;
import com.pulumi.fastly.outputs.GetServicesResult;
import com.pulumi.fastly.outputs.GetTlsActivationIdsResult;
import com.pulumi.fastly.outputs.GetTlsActivationResult;
import com.pulumi.fastly.outputs.GetTlsCertificateIdsResult;
import com.pulumi.fastly.outputs.GetTlsCertificateResult;
import com.pulumi.fastly.outputs.GetTlsConfigurationIdsResult;
import com.pulumi.fastly.outputs.GetTlsConfigurationResult;
import com.pulumi.fastly.outputs.GetTlsDomainResult;
import com.pulumi.fastly.outputs.GetTlsPlatformCertificateIdsResult;
import com.pulumi.fastly.outputs.GetTlsPlatformCertificateResult;
import com.pulumi.fastly.outputs.GetTlsPrivateKeyIdsResult;
import com.pulumi.fastly.outputs.GetTlsPrivateKeyResult;
import com.pulumi.fastly.outputs.GetTlsSubscriptionIdsResult;
import com.pulumi.fastly.outputs.GetTlsSubscriptionResult;
import com.pulumi.fastly.outputs.GetWafRulesResult;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class FastlyFunctions {
    /**
     * Use this data source to get the list of the [Fastly datacenters](https://developer.fastly.com/reference/api/utils/pops/).
     * 
     */
    public static Output<GetDatacentersResult> getDatacenters() {
        return getDatacenters(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of the [Fastly datacenters](https://developer.fastly.com/reference/api/utils/pops/).
     * 
     */
    public static CompletableFuture<GetDatacentersResult> getDatacentersPlain() {
        return getDatacentersPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of the [Fastly datacenters](https://developer.fastly.com/reference/api/utils/pops/).
     * 
     */
    public static Output<GetDatacentersResult> getDatacenters(InvokeArgs args) {
        return getDatacenters(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of the [Fastly datacenters](https://developer.fastly.com/reference/api/utils/pops/).
     * 
     */
    public static CompletableFuture<GetDatacentersResult> getDatacentersPlain(InvokeArgs args) {
        return getDatacentersPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of the [Fastly datacenters](https://developer.fastly.com/reference/api/utils/pops/).
     * 
     */
    public static Output<GetDatacentersResult> getDatacenters(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getDatacenters:getDatacenters", TypeShape.of(GetDatacentersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of the [Fastly datacenters](https://developer.fastly.com/reference/api/utils/pops/).
     * 
     */
    public static CompletableFuture<GetDatacentersResult> getDatacentersPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getDatacenters:getDatacenters", TypeShape.of(GetDatacentersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the [IP ranges](https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges) of Fastly edge nodes.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.aws.ec2.SecurityGroup;
     * import com.pulumi.aws.ec2.SecurityGroupArgs;
     * import com.pulumi.aws.ec2.inputs.SecurityGroupIngressArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fastly = FastlyFunctions.getFastlyIpRanges();
     * 
     *         var fromFastly = new SecurityGroup(&#34;fromFastly&#34;, SecurityGroupArgs.builder()        
     *             .ingress(SecurityGroupIngressArgs.builder()
     *                 .fromPort(&#34;443&#34;)
     *                 .toPort(&#34;443&#34;)
     *                 .protocol(&#34;tcp&#34;)
     *                 .cidrBlocks(fastly.applyValue(getFastlyIpRangesResult -&gt; getFastlyIpRangesResult.cidrBlocks()))
     *                 .ipv6CidrBlocks(fastly.applyValue(getFastlyIpRangesResult -&gt; getFastlyIpRangesResult.ipv6CidrBlocks()))
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * [1]: https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges
     * 
     */
    public static Output<GetFastlyIpRangesResult> getFastlyIpRanges() {
        return getFastlyIpRanges(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the [IP ranges](https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges) of Fastly edge nodes.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.aws.ec2.SecurityGroup;
     * import com.pulumi.aws.ec2.SecurityGroupArgs;
     * import com.pulumi.aws.ec2.inputs.SecurityGroupIngressArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fastly = FastlyFunctions.getFastlyIpRanges();
     * 
     *         var fromFastly = new SecurityGroup(&#34;fromFastly&#34;, SecurityGroupArgs.builder()        
     *             .ingress(SecurityGroupIngressArgs.builder()
     *                 .fromPort(&#34;443&#34;)
     *                 .toPort(&#34;443&#34;)
     *                 .protocol(&#34;tcp&#34;)
     *                 .cidrBlocks(fastly.applyValue(getFastlyIpRangesResult -&gt; getFastlyIpRangesResult.cidrBlocks()))
     *                 .ipv6CidrBlocks(fastly.applyValue(getFastlyIpRangesResult -&gt; getFastlyIpRangesResult.ipv6CidrBlocks()))
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * [1]: https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges
     * 
     */
    public static CompletableFuture<GetFastlyIpRangesResult> getFastlyIpRangesPlain() {
        return getFastlyIpRangesPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the [IP ranges](https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges) of Fastly edge nodes.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.aws.ec2.SecurityGroup;
     * import com.pulumi.aws.ec2.SecurityGroupArgs;
     * import com.pulumi.aws.ec2.inputs.SecurityGroupIngressArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fastly = FastlyFunctions.getFastlyIpRanges();
     * 
     *         var fromFastly = new SecurityGroup(&#34;fromFastly&#34;, SecurityGroupArgs.builder()        
     *             .ingress(SecurityGroupIngressArgs.builder()
     *                 .fromPort(&#34;443&#34;)
     *                 .toPort(&#34;443&#34;)
     *                 .protocol(&#34;tcp&#34;)
     *                 .cidrBlocks(fastly.applyValue(getFastlyIpRangesResult -&gt; getFastlyIpRangesResult.cidrBlocks()))
     *                 .ipv6CidrBlocks(fastly.applyValue(getFastlyIpRangesResult -&gt; getFastlyIpRangesResult.ipv6CidrBlocks()))
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * [1]: https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges
     * 
     */
    public static Output<GetFastlyIpRangesResult> getFastlyIpRanges(InvokeArgs args) {
        return getFastlyIpRanges(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the [IP ranges](https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges) of Fastly edge nodes.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.aws.ec2.SecurityGroup;
     * import com.pulumi.aws.ec2.SecurityGroupArgs;
     * import com.pulumi.aws.ec2.inputs.SecurityGroupIngressArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fastly = FastlyFunctions.getFastlyIpRanges();
     * 
     *         var fromFastly = new SecurityGroup(&#34;fromFastly&#34;, SecurityGroupArgs.builder()        
     *             .ingress(SecurityGroupIngressArgs.builder()
     *                 .fromPort(&#34;443&#34;)
     *                 .toPort(&#34;443&#34;)
     *                 .protocol(&#34;tcp&#34;)
     *                 .cidrBlocks(fastly.applyValue(getFastlyIpRangesResult -&gt; getFastlyIpRangesResult.cidrBlocks()))
     *                 .ipv6CidrBlocks(fastly.applyValue(getFastlyIpRangesResult -&gt; getFastlyIpRangesResult.ipv6CidrBlocks()))
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * [1]: https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges
     * 
     */
    public static CompletableFuture<GetFastlyIpRangesResult> getFastlyIpRangesPlain(InvokeArgs args) {
        return getFastlyIpRangesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the [IP ranges](https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges) of Fastly edge nodes.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.aws.ec2.SecurityGroup;
     * import com.pulumi.aws.ec2.SecurityGroupArgs;
     * import com.pulumi.aws.ec2.inputs.SecurityGroupIngressArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fastly = FastlyFunctions.getFastlyIpRanges();
     * 
     *         var fromFastly = new SecurityGroup(&#34;fromFastly&#34;, SecurityGroupArgs.builder()        
     *             .ingress(SecurityGroupIngressArgs.builder()
     *                 .fromPort(&#34;443&#34;)
     *                 .toPort(&#34;443&#34;)
     *                 .protocol(&#34;tcp&#34;)
     *                 .cidrBlocks(fastly.applyValue(getFastlyIpRangesResult -&gt; getFastlyIpRangesResult.cidrBlocks()))
     *                 .ipv6CidrBlocks(fastly.applyValue(getFastlyIpRangesResult -&gt; getFastlyIpRangesResult.ipv6CidrBlocks()))
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * [1]: https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges
     * 
     */
    public static Output<GetFastlyIpRangesResult> getFastlyIpRanges(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getFastlyIpRanges:getFastlyIpRanges", TypeShape.of(GetFastlyIpRangesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the [IP ranges](https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges) of Fastly edge nodes.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.aws.ec2.SecurityGroup;
     * import com.pulumi.aws.ec2.SecurityGroupArgs;
     * import com.pulumi.aws.ec2.inputs.SecurityGroupIngressArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fastly = FastlyFunctions.getFastlyIpRanges();
     * 
     *         var fromFastly = new SecurityGroup(&#34;fromFastly&#34;, SecurityGroupArgs.builder()        
     *             .ingress(SecurityGroupIngressArgs.builder()
     *                 .fromPort(&#34;443&#34;)
     *                 .toPort(&#34;443&#34;)
     *                 .protocol(&#34;tcp&#34;)
     *                 .cidrBlocks(fastly.applyValue(getFastlyIpRangesResult -&gt; getFastlyIpRangesResult.cidrBlocks()))
     *                 .ipv6CidrBlocks(fastly.applyValue(getFastlyIpRangesResult -&gt; getFastlyIpRangesResult.ipv6CidrBlocks()))
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * [1]: https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges
     * 
     */
    public static CompletableFuture<GetFastlyIpRangesResult> getFastlyIpRangesPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getFastlyIpRanges:getFastlyIpRanges", TypeShape.of(GetFastlyIpRangesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of the [Fastly services](https://developer.fastly.com/reference/api/services/service/).
     * 
     */
    public static Output<GetServicesResult> getServices() {
        return getServices(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of the [Fastly services](https://developer.fastly.com/reference/api/services/service/).
     * 
     */
    public static CompletableFuture<GetServicesResult> getServicesPlain() {
        return getServicesPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of the [Fastly services](https://developer.fastly.com/reference/api/services/service/).
     * 
     */
    public static Output<GetServicesResult> getServices(InvokeArgs args) {
        return getServices(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of the [Fastly services](https://developer.fastly.com/reference/api/services/service/).
     * 
     */
    public static CompletableFuture<GetServicesResult> getServicesPlain(InvokeArgs args) {
        return getServicesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of the [Fastly services](https://developer.fastly.com/reference/api/services/service/).
     * 
     */
    public static Output<GetServicesResult> getServices(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getServices:getServices", TypeShape.of(GetServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of the [Fastly services](https://developer.fastly.com/reference/api/services/service/).
     * 
     */
    public static CompletableFuture<GetServicesResult> getServicesPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getServices:getServices", TypeShape.of(GetServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information on a TLS activation, including the certificate used, and the domain on which TLS was enabled.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsActivation(GetTlsActivationArgs.builder()
     *             .domain(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsActivationResult> getTlsActivation() {
        return getTlsActivation(GetTlsActivationArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on a TLS activation, including the certificate used, and the domain on which TLS was enabled.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsActivation(GetTlsActivationArgs.builder()
     *             .domain(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsActivationResult> getTlsActivationPlain() {
        return getTlsActivationPlain(GetTlsActivationPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on a TLS activation, including the certificate used, and the domain on which TLS was enabled.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsActivation(GetTlsActivationArgs.builder()
     *             .domain(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsActivationResult> getTlsActivation(GetTlsActivationArgs args) {
        return getTlsActivation(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on a TLS activation, including the certificate used, and the domain on which TLS was enabled.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsActivation(GetTlsActivationArgs.builder()
     *             .domain(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsActivationResult> getTlsActivationPlain(GetTlsActivationPlainArgs args) {
        return getTlsActivationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on a TLS activation, including the certificate used, and the domain on which TLS was enabled.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsActivation(GetTlsActivationArgs.builder()
     *             .domain(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsActivationResult> getTlsActivation(GetTlsActivationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsActivation:getTlsActivation", TypeShape.of(GetTlsActivationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information on a TLS activation, including the certificate used, and the domain on which TLS was enabled.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsActivation(GetTlsActivationArgs.builder()
     *             .domain(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsActivationResult> getTlsActivationPlain(GetTlsActivationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsActivation:getTlsActivation", TypeShape.of(GetTlsActivationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of TLS Activation identifiers in Fastly.
     * 
     */
    public static Output<GetTlsActivationIdsResult> getTlsActivationIds() {
        return getTlsActivationIds(GetTlsActivationIdsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of TLS Activation identifiers in Fastly.
     * 
     */
    public static CompletableFuture<GetTlsActivationIdsResult> getTlsActivationIdsPlain() {
        return getTlsActivationIdsPlain(GetTlsActivationIdsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of TLS Activation identifiers in Fastly.
     * 
     */
    public static Output<GetTlsActivationIdsResult> getTlsActivationIds(GetTlsActivationIdsArgs args) {
        return getTlsActivationIds(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of TLS Activation identifiers in Fastly.
     * 
     */
    public static CompletableFuture<GetTlsActivationIdsResult> getTlsActivationIdsPlain(GetTlsActivationIdsPlainArgs args) {
        return getTlsActivationIdsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of TLS Activation identifiers in Fastly.
     * 
     */
    public static Output<GetTlsActivationIdsResult> getTlsActivationIds(GetTlsActivationIdsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsActivationIds:getTlsActivationIds", TypeShape.of(GetTlsActivationIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of TLS Activation identifiers in Fastly.
     * 
     */
    public static CompletableFuture<GetTlsActivationIdsResult> getTlsActivationIdsPlain(GetTlsActivationIdsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsActivationIds:getTlsActivationIds", TypeShape.of(GetTlsActivationIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of a TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificate(GetTlsCertificateArgs.builder()
     *             .name(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsCertificateResult> getTlsCertificate() {
        return getTlsCertificate(GetTlsCertificateArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of a TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificate(GetTlsCertificateArgs.builder()
     *             .name(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsCertificateResult> getTlsCertificatePlain() {
        return getTlsCertificatePlain(GetTlsCertificatePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of a TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificate(GetTlsCertificateArgs.builder()
     *             .name(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsCertificateResult> getTlsCertificate(GetTlsCertificateArgs args) {
        return getTlsCertificate(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of a TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificate(GetTlsCertificateArgs.builder()
     *             .name(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsCertificateResult> getTlsCertificatePlain(GetTlsCertificatePlainArgs args) {
        return getTlsCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of a TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificate(GetTlsCertificateArgs.builder()
     *             .name(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsCertificateResult> getTlsCertificate(GetTlsCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsCertificate:getTlsCertificate", TypeShape.of(GetTlsCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of a TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsCertificate(GetTlsCertificateArgs.builder()
     *             .name(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsCertificateResult> getTlsCertificatePlain(GetTlsCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsCertificate:getTlsCertificate", TypeShape.of(GetTlsCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of available TLS certificates for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsCertificateIds = FastlyFunctions.getTlsCertificateIds();
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .certificateId(exampleTlsCertificateIds.applyValue(getTlsCertificateIdsResult -&gt; getTlsCertificateIdsResult.ids()[0]))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsCertificateIdsResult> getTlsCertificateIds() {
        return getTlsCertificateIds(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available TLS certificates for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsCertificateIds = FastlyFunctions.getTlsCertificateIds();
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .certificateId(exampleTlsCertificateIds.applyValue(getTlsCertificateIdsResult -&gt; getTlsCertificateIdsResult.ids()[0]))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsCertificateIdsResult> getTlsCertificateIdsPlain() {
        return getTlsCertificateIdsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available TLS certificates for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsCertificateIds = FastlyFunctions.getTlsCertificateIds();
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .certificateId(exampleTlsCertificateIds.applyValue(getTlsCertificateIdsResult -&gt; getTlsCertificateIdsResult.ids()[0]))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsCertificateIdsResult> getTlsCertificateIds(InvokeArgs args) {
        return getTlsCertificateIds(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available TLS certificates for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsCertificateIds = FastlyFunctions.getTlsCertificateIds();
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .certificateId(exampleTlsCertificateIds.applyValue(getTlsCertificateIdsResult -&gt; getTlsCertificateIdsResult.ids()[0]))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsCertificateIdsResult> getTlsCertificateIdsPlain(InvokeArgs args) {
        return getTlsCertificateIdsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available TLS certificates for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsCertificateIds = FastlyFunctions.getTlsCertificateIds();
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .certificateId(exampleTlsCertificateIds.applyValue(getTlsCertificateIdsResult -&gt; getTlsCertificateIdsResult.ids()[0]))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsCertificateIdsResult> getTlsCertificateIds(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsCertificateIds:getTlsCertificateIds", TypeShape.of(GetTlsCertificateIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of available TLS certificates for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsCertificateIds = FastlyFunctions.getTlsCertificateIds();
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .certificateId(exampleTlsCertificateIds.applyValue(getTlsCertificateIdsResult -&gt; getTlsCertificateIdsResult.ids()[0]))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsCertificateIdsResult> getTlsCertificateIdsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsCertificateIds:getTlsCertificateIds", TypeShape.of(GetTlsCertificateIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the ID of a TLS configuration for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsConfigurationArgs;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsConfiguration = FastlyFunctions.getTlsConfiguration(GetTlsConfigurationArgs.builder()
     *             .default_(true)
     *             .build());
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .configurationId(exampleTlsConfiguration.applyValue(getTlsConfigurationResult -&gt; getTlsConfigurationResult.id()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsConfigurationResult> getTlsConfiguration() {
        return getTlsConfiguration(GetTlsConfigurationArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ID of a TLS configuration for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsConfigurationArgs;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsConfiguration = FastlyFunctions.getTlsConfiguration(GetTlsConfigurationArgs.builder()
     *             .default_(true)
     *             .build());
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .configurationId(exampleTlsConfiguration.applyValue(getTlsConfigurationResult -&gt; getTlsConfigurationResult.id()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsConfigurationResult> getTlsConfigurationPlain() {
        return getTlsConfigurationPlain(GetTlsConfigurationPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ID of a TLS configuration for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsConfigurationArgs;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsConfiguration = FastlyFunctions.getTlsConfiguration(GetTlsConfigurationArgs.builder()
     *             .default_(true)
     *             .build());
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .configurationId(exampleTlsConfiguration.applyValue(getTlsConfigurationResult -&gt; getTlsConfigurationResult.id()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsConfigurationResult> getTlsConfiguration(GetTlsConfigurationArgs args) {
        return getTlsConfiguration(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ID of a TLS configuration for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsConfigurationArgs;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsConfiguration = FastlyFunctions.getTlsConfiguration(GetTlsConfigurationArgs.builder()
     *             .default_(true)
     *             .build());
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .configurationId(exampleTlsConfiguration.applyValue(getTlsConfigurationResult -&gt; getTlsConfigurationResult.id()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsConfigurationResult> getTlsConfigurationPlain(GetTlsConfigurationPlainArgs args) {
        return getTlsConfigurationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ID of a TLS configuration for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsConfigurationArgs;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsConfiguration = FastlyFunctions.getTlsConfiguration(GetTlsConfigurationArgs.builder()
     *             .default_(true)
     *             .build());
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .configurationId(exampleTlsConfiguration.applyValue(getTlsConfigurationResult -&gt; getTlsConfigurationResult.id()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsConfigurationResult> getTlsConfiguration(GetTlsConfigurationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsConfiguration:getTlsConfiguration", TypeShape.of(GetTlsConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the ID of a TLS configuration for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsConfigurationArgs;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsConfiguration = FastlyFunctions.getTlsConfiguration(GetTlsConfigurationArgs.builder()
     *             .default_(true)
     *             .build());
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .configurationId(exampleTlsConfiguration.applyValue(getTlsConfigurationResult -&gt; getTlsConfigurationResult.id()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsConfigurationResult> getTlsConfigurationPlain(GetTlsConfigurationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsConfiguration:getTlsConfiguration", TypeShape.of(GetTlsConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of available TLS configurations for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsConfigurationIds = FastlyFunctions.getTlsConfigurationIds();
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .configurationId(data.fastly_tls_configuration().example().ids()[0])
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsConfigurationIdsResult> getTlsConfigurationIds() {
        return getTlsConfigurationIds(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available TLS configurations for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsConfigurationIds = FastlyFunctions.getTlsConfigurationIds();
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .configurationId(data.fastly_tls_configuration().example().ids()[0])
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsConfigurationIdsResult> getTlsConfigurationIdsPlain() {
        return getTlsConfigurationIdsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available TLS configurations for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsConfigurationIds = FastlyFunctions.getTlsConfigurationIds();
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .configurationId(data.fastly_tls_configuration().example().ids()[0])
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsConfigurationIdsResult> getTlsConfigurationIds(InvokeArgs args) {
        return getTlsConfigurationIds(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available TLS configurations for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsConfigurationIds = FastlyFunctions.getTlsConfigurationIds();
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .configurationId(data.fastly_tls_configuration().example().ids()[0])
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsConfigurationIdsResult> getTlsConfigurationIdsPlain(InvokeArgs args) {
        return getTlsConfigurationIdsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available TLS configurations for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsConfigurationIds = FastlyFunctions.getTlsConfigurationIds();
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .configurationId(data.fastly_tls_configuration().example().ids()[0])
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsConfigurationIdsResult> getTlsConfigurationIds(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsConfigurationIds:getTlsConfigurationIds", TypeShape.of(GetTlsConfigurationIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of available TLS configurations for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.TlsActivation;
     * import com.pulumi.fastly.TlsActivationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsConfigurationIds = FastlyFunctions.getTlsConfigurationIds();
     * 
     *         var exampleTlsActivation = new TlsActivation(&#34;exampleTlsActivation&#34;, TlsActivationArgs.builder()        
     *             .configurationId(data.fastly_tls_configuration().example().ids()[0])
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsConfigurationIdsResult> getTlsConfigurationIdsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsConfigurationIds:getTlsConfigurationIds", TypeShape.of(GetTlsConfigurationIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of activations, certificates and subscriptions associated with a domain.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = FastlyFunctions.getTlsDomain(GetTlsDomainArgs.builder()
     *             .domain(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsDomainResult> getTlsDomain(GetTlsDomainArgs args) {
        return getTlsDomain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of activations, certificates and subscriptions associated with a domain.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = FastlyFunctions.getTlsDomain(GetTlsDomainArgs.builder()
     *             .domain(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsDomainResult> getTlsDomainPlain(GetTlsDomainPlainArgs args) {
        return getTlsDomainPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of activations, certificates and subscriptions associated with a domain.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = FastlyFunctions.getTlsDomain(GetTlsDomainArgs.builder()
     *             .domain(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsDomainResult> getTlsDomain(GetTlsDomainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsDomain:getTlsDomain", TypeShape.of(GetTlsDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of activations, certificates and subscriptions associated with a domain.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = FastlyFunctions.getTlsDomain(GetTlsDomainArgs.builder()
     *             .domain(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsDomainResult> getTlsDomainPlain(GetTlsDomainPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsDomain:getTlsDomain", TypeShape.of(GetTlsDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of a Platform TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .domains(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsPlatformCertificateResult> getTlsPlatformCertificate() {
        return getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of a Platform TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .domains(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsPlatformCertificateResult> getTlsPlatformCertificatePlain() {
        return getTlsPlatformCertificatePlain(GetTlsPlatformCertificatePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of a Platform TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .domains(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsPlatformCertificateResult> getTlsPlatformCertificate(GetTlsPlatformCertificateArgs args) {
        return getTlsPlatformCertificate(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of a Platform TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .domains(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsPlatformCertificateResult> getTlsPlatformCertificatePlain(GetTlsPlatformCertificatePlainArgs args) {
        return getTlsPlatformCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information of a Platform TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .domains(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsPlatformCertificateResult> getTlsPlatformCertificate(GetTlsPlatformCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsPlatformCertificate:getTlsPlatformCertificate", TypeShape.of(GetTlsPlatformCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information of a Platform TLS certificate for use with other resources.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     * with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .domains(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsPlatformCertificateResult> getTlsPlatformCertificatePlain(GetTlsPlatformCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsPlatformCertificate:getTlsPlatformCertificate", TypeShape.of(GetTlsPlatformCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of available Platform TLS Certificates for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsPlatformCertificateIds = FastlyFunctions.getTlsPlatformCertificateIds();
     * 
     *         final var exampleTlsPlatformCertificate = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .id(exampleTlsPlatformCertificateIds.applyValue(getTlsPlatformCertificateIdsResult -&gt; getTlsPlatformCertificateIdsResult.ids()[0]))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsPlatformCertificateIdsResult> getTlsPlatformCertificateIds() {
        return getTlsPlatformCertificateIds(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available Platform TLS Certificates for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsPlatformCertificateIds = FastlyFunctions.getTlsPlatformCertificateIds();
     * 
     *         final var exampleTlsPlatformCertificate = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .id(exampleTlsPlatformCertificateIds.applyValue(getTlsPlatformCertificateIdsResult -&gt; getTlsPlatformCertificateIdsResult.ids()[0]))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsPlatformCertificateIdsResult> getTlsPlatformCertificateIdsPlain() {
        return getTlsPlatformCertificateIdsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available Platform TLS Certificates for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsPlatformCertificateIds = FastlyFunctions.getTlsPlatformCertificateIds();
     * 
     *         final var exampleTlsPlatformCertificate = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .id(exampleTlsPlatformCertificateIds.applyValue(getTlsPlatformCertificateIdsResult -&gt; getTlsPlatformCertificateIdsResult.ids()[0]))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsPlatformCertificateIdsResult> getTlsPlatformCertificateIds(InvokeArgs args) {
        return getTlsPlatformCertificateIds(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available Platform TLS Certificates for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsPlatformCertificateIds = FastlyFunctions.getTlsPlatformCertificateIds();
     * 
     *         final var exampleTlsPlatformCertificate = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .id(exampleTlsPlatformCertificateIds.applyValue(getTlsPlatformCertificateIdsResult -&gt; getTlsPlatformCertificateIdsResult.ids()[0]))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsPlatformCertificateIdsResult> getTlsPlatformCertificateIdsPlain(InvokeArgs args) {
        return getTlsPlatformCertificateIdsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IDs of available Platform TLS Certificates for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsPlatformCertificateIds = FastlyFunctions.getTlsPlatformCertificateIds();
     * 
     *         final var exampleTlsPlatformCertificate = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .id(exampleTlsPlatformCertificateIds.applyValue(getTlsPlatformCertificateIdsResult -&gt; getTlsPlatformCertificateIdsResult.ids()[0]))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsPlatformCertificateIdsResult> getTlsPlatformCertificateIds(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsPlatformCertificateIds:getTlsPlatformCertificateIds", TypeShape.of(GetTlsPlatformCertificateIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IDs of available Platform TLS Certificates for use with other resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPlatformCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTlsPlatformCertificateIds = FastlyFunctions.getTlsPlatformCertificateIds();
     * 
     *         final var exampleTlsPlatformCertificate = FastlyFunctions.getTlsPlatformCertificate(GetTlsPlatformCertificateArgs.builder()
     *             .id(exampleTlsPlatformCertificateIds.applyValue(getTlsPlatformCertificateIdsResult -&gt; getTlsPlatformCertificateIdsResult.ids()[0]))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsPlatformCertificateIdsResult> getTlsPlatformCertificateIdsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsPlatformCertificateIds:getTlsPlatformCertificateIds", TypeShape.of(GetTlsPlatformCertificateIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information on a TLS Private Key uploaded to Fastly.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     *  of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     *  with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search
     *  is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .name(&#34;demo-private-key&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;privateKeyNeedsReplacing&#34;, demo.applyValue(getTlsPrivateKeyResult -&gt; getTlsPrivateKeyResult.replace()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsPrivateKeyResult> getTlsPrivateKey() {
        return getTlsPrivateKey(GetTlsPrivateKeyArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on a TLS Private Key uploaded to Fastly.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     *  of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     *  with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search
     *  is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .name(&#34;demo-private-key&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;privateKeyNeedsReplacing&#34;, demo.applyValue(getTlsPrivateKeyResult -&gt; getTlsPrivateKeyResult.replace()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsPrivateKeyResult> getTlsPrivateKeyPlain() {
        return getTlsPrivateKeyPlain(GetTlsPrivateKeyPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on a TLS Private Key uploaded to Fastly.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     *  of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     *  with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search
     *  is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .name(&#34;demo-private-key&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;privateKeyNeedsReplacing&#34;, demo.applyValue(getTlsPrivateKeyResult -&gt; getTlsPrivateKeyResult.replace()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsPrivateKeyResult> getTlsPrivateKey(GetTlsPrivateKeyArgs args) {
        return getTlsPrivateKey(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on a TLS Private Key uploaded to Fastly.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     *  of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     *  with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search
     *  is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .name(&#34;demo-private-key&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;privateKeyNeedsReplacing&#34;, demo.applyValue(getTlsPrivateKeyResult -&gt; getTlsPrivateKeyResult.replace()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsPrivateKeyResult> getTlsPrivateKeyPlain(GetTlsPrivateKeyPlainArgs args) {
        return getTlsPrivateKeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on a TLS Private Key uploaded to Fastly.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     *  of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     *  with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search
     *  is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .name(&#34;demo-private-key&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;privateKeyNeedsReplacing&#34;, demo.applyValue(getTlsPrivateKeyResult -&gt; getTlsPrivateKeyResult.replace()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsPrivateKeyResult> getTlsPrivateKey(GetTlsPrivateKeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsPrivateKey:getTlsPrivateKey", TypeShape.of(GetTlsPrivateKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information on a TLS Private Key uploaded to Fastly.
     * 
     * &gt; **Warning:** The data source&#39;s filters are applied using an **AND** boolean operator, so depending on the combination
     *  of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
     *  with any of the others.
     * 
     * &gt; **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search
     *  is specific enough to return a single key.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .name(&#34;demo-private-key&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;privateKeyNeedsReplacing&#34;, demo.applyValue(getTlsPrivateKeyResult -&gt; getTlsPrivateKeyResult.replace()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsPrivateKeyResult> getTlsPrivateKeyPlain(GetTlsPrivateKeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsPrivateKey:getTlsPrivateKey", TypeShape.of(GetTlsPrivateKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of TLS private key identifiers in Fastly.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKeyIds();
     * 
     *         final var example = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .id(fastly_tls_private_key_ids.demo().ids()[0])
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsPrivateKeyIdsResult> getTlsPrivateKeyIds() {
        return getTlsPrivateKeyIds(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of TLS private key identifiers in Fastly.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKeyIds();
     * 
     *         final var example = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .id(fastly_tls_private_key_ids.demo().ids()[0])
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsPrivateKeyIdsResult> getTlsPrivateKeyIdsPlain() {
        return getTlsPrivateKeyIdsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of TLS private key identifiers in Fastly.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKeyIds();
     * 
     *         final var example = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .id(fastly_tls_private_key_ids.demo().ids()[0])
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsPrivateKeyIdsResult> getTlsPrivateKeyIds(InvokeArgs args) {
        return getTlsPrivateKeyIds(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of TLS private key identifiers in Fastly.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKeyIds();
     * 
     *         final var example = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .id(fastly_tls_private_key_ids.demo().ids()[0])
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsPrivateKeyIdsResult> getTlsPrivateKeyIdsPlain(InvokeArgs args) {
        return getTlsPrivateKeyIdsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of TLS private key identifiers in Fastly.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKeyIds();
     * 
     *         final var example = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .id(fastly_tls_private_key_ids.demo().ids()[0])
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsPrivateKeyIdsResult> getTlsPrivateKeyIds(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsPrivateKeyIds:getTlsPrivateKeyIds", TypeShape.of(GetTlsPrivateKeyIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of TLS private key identifiers in Fastly.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsPrivateKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var demo = FastlyFunctions.getTlsPrivateKeyIds();
     * 
     *         final var example = FastlyFunctions.getTlsPrivateKey(GetTlsPrivateKeyArgs.builder()
     *             .id(fastly_tls_private_key_ids.demo().ids()[0])
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsPrivateKeyIdsResult> getTlsPrivateKeyIdsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsPrivateKeyIds:getTlsPrivateKeyIds", TypeShape.of(GetTlsPrivateKeyIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a TLS subscription.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsSubscription(GetTlsSubscriptionArgs.builder()
     *             .domains(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsSubscriptionResult> getTlsSubscription() {
        return getTlsSubscription(GetTlsSubscriptionArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a TLS subscription.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsSubscription(GetTlsSubscriptionArgs.builder()
     *             .domains(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsSubscriptionResult> getTlsSubscriptionPlain() {
        return getTlsSubscriptionPlain(GetTlsSubscriptionPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a TLS subscription.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsSubscription(GetTlsSubscriptionArgs.builder()
     *             .domains(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsSubscriptionResult> getTlsSubscription(GetTlsSubscriptionArgs args) {
        return getTlsSubscription(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a TLS subscription.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsSubscription(GetTlsSubscriptionArgs.builder()
     *             .domains(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsSubscriptionResult> getTlsSubscriptionPlain(GetTlsSubscriptionPlainArgs args) {
        return getTlsSubscriptionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a TLS subscription.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsSubscription(GetTlsSubscriptionArgs.builder()
     *             .domains(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTlsSubscriptionResult> getTlsSubscription(GetTlsSubscriptionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsSubscription:getTlsSubscription", TypeShape.of(GetTlsSubscriptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a TLS subscription.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.fastly.FastlyFunctions;
     * import com.pulumi.fastly.inputs.GetTlsSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FastlyFunctions.getTlsSubscription(GetTlsSubscriptionArgs.builder()
     *             .domains(&#34;example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTlsSubscriptionResult> getTlsSubscriptionPlain(GetTlsSubscriptionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsSubscription:getTlsSubscription", TypeShape.of(GetTlsSubscriptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of IDs of TLS Subscriptions in Fastly.
     * 
     */
    public static Output<GetTlsSubscriptionIdsResult> getTlsSubscriptionIds() {
        return getTlsSubscriptionIds(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of IDs of TLS Subscriptions in Fastly.
     * 
     */
    public static CompletableFuture<GetTlsSubscriptionIdsResult> getTlsSubscriptionIdsPlain() {
        return getTlsSubscriptionIdsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of IDs of TLS Subscriptions in Fastly.
     * 
     */
    public static Output<GetTlsSubscriptionIdsResult> getTlsSubscriptionIds(InvokeArgs args) {
        return getTlsSubscriptionIds(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of IDs of TLS Subscriptions in Fastly.
     * 
     */
    public static CompletableFuture<GetTlsSubscriptionIdsResult> getTlsSubscriptionIdsPlain(InvokeArgs args) {
        return getTlsSubscriptionIdsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the list of IDs of TLS Subscriptions in Fastly.
     * 
     */
    public static Output<GetTlsSubscriptionIdsResult> getTlsSubscriptionIds(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getTlsSubscriptionIds:getTlsSubscriptionIds", TypeShape.of(GetTlsSubscriptionIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the list of IDs of TLS Subscriptions in Fastly.
     * 
     */
    public static CompletableFuture<GetTlsSubscriptionIdsResult> getTlsSubscriptionIdsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getTlsSubscriptionIds:getTlsSubscriptionIds", TypeShape.of(GetTlsSubscriptionIdsResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetWafRulesResult> getWafRules() {
        return getWafRules(GetWafRulesArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetWafRulesResult> getWafRulesPlain() {
        return getWafRulesPlain(GetWafRulesPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetWafRulesResult> getWafRules(GetWafRulesArgs args) {
        return getWafRules(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetWafRulesResult> getWafRulesPlain(GetWafRulesPlainArgs args) {
        return getWafRulesPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetWafRulesResult> getWafRules(GetWafRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("fastly:index/getWafRules:getWafRules", TypeShape.of(GetWafRulesResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetWafRulesResult> getWafRulesPlain(GetWafRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("fastly:index/getWafRules:getWafRules", TypeShape.of(GetWafRulesResult.class), args, Utilities.withVersion(options));
    }
}
