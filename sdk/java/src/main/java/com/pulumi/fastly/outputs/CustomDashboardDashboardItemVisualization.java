// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.fastly.outputs.CustomDashboardDashboardItemVisualizationConfig;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CustomDashboardDashboardItemVisualization {
    /**
     * @return Configuration options for the selected data source.
     * 
     */
    private CustomDashboardDashboardItemVisualizationConfig config;
    /**
     * @return The type of visualization to display. One of: `chart`.
     * 
     */
    private String type;

    private CustomDashboardDashboardItemVisualization() {}
    /**
     * @return Configuration options for the selected data source.
     * 
     */
    public CustomDashboardDashboardItemVisualizationConfig config() {
        return this.config;
    }
    /**
     * @return The type of visualization to display. One of: `chart`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomDashboardDashboardItemVisualization defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private CustomDashboardDashboardItemVisualizationConfig config;
        private String type;
        public Builder() {}
        public Builder(CustomDashboardDashboardItemVisualization defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.config = defaults.config;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder config(CustomDashboardDashboardItemVisualizationConfig config) {
            if (config == null) {
              throw new MissingRequiredPropertyException("CustomDashboardDashboardItemVisualization", "config");
            }
            this.config = config;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("CustomDashboardDashboardItemVisualization", "type");
            }
            this.type = type;
            return this;
        }
        public CustomDashboardDashboardItemVisualization build() {
            final var _resultValue = new CustomDashboardDashboardItemVisualization();
            _resultValue.config = config;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
