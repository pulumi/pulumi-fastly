// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.fastly.ServiceAuthorizationArgs;
import com.pulumi.fastly.Utilities;
import com.pulumi.fastly.inputs.ServiceAuthorizationState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Configures authorization with granular permissions to services. Users can be granted rights for services on different levels.
 * 
 * The Service Authorization resource requires a user id, service id and an optional permission.
 * 
 * ## Example Usage
 * 
 * Basic usage:
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.fastly.ServiceVcl;
 * import com.pulumi.fastly.User;
 * import com.pulumi.fastly.ServiceAuthorization;
 * import com.pulumi.fastly.ServiceAuthorizationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var demo = new ServiceVcl(&#34;demo&#34;);
 * 
 *         var user = new User(&#34;user&#34;);
 * 
 *         var auth = new ServiceAuthorization(&#34;auth&#34;, ServiceAuthorizationArgs.builder()        
 *             .serviceId(demo.id())
 *             .userId(user.id())
 *             .permission(&#34;purge_all&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * A Fastly Service Authorization can be imported using their user ID, e.g.
 * 
 * ```sh
 *  $ pulumi import fastly:index/serviceAuthorization:ServiceAuthorization demo xxxxxxxxxxxxxxxxxxxx
 * ```
 * 
 */
@ResourceType(type="fastly:index/serviceAuthorization:ServiceAuthorization")
public class ServiceAuthorization extends com.pulumi.resources.CustomResource {
    /**
     * The permissions to grant the user. Can be `full`, `read_only`, `purge_select` or `purge_all`.
     * 
     */
    @Export(name="permission", type=String.class, parameters={})
    private Output<String> permission;

    /**
     * @return The permissions to grant the user. Can be `full`, `read_only`, `purge_select` or `purge_all`.
     * 
     */
    public Output<String> permission() {
        return this.permission;
    }
    /**
     * The ID of the service to grant permissions for.
     * 
     */
    @Export(name="serviceId", type=String.class, parameters={})
    private Output<String> serviceId;

    /**
     * @return The ID of the service to grant permissions for.
     * 
     */
    public Output<String> serviceId() {
        return this.serviceId;
    }
    /**
     * The ID of the user which will receive the granted permissions.
     * 
     */
    @Export(name="userId", type=String.class, parameters={})
    private Output<String> userId;

    /**
     * @return The ID of the user which will receive the granted permissions.
     * 
     */
    public Output<String> userId() {
        return this.userId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServiceAuthorization(String name) {
        this(name, ServiceAuthorizationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServiceAuthorization(String name, ServiceAuthorizationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceAuthorization(String name, ServiceAuthorizationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/serviceAuthorization:ServiceAuthorization", name, args == null ? ServiceAuthorizationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ServiceAuthorization(String name, Output<String> id, @Nullable ServiceAuthorizationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fastly:index/serviceAuthorization:ServiceAuthorization", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceAuthorization get(String name, Output<String> id, @Nullable ServiceAuthorizationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServiceAuthorization(name, id, state, options);
    }
}
