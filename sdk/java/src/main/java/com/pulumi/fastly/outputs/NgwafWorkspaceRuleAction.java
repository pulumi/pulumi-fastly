// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NgwafWorkspaceRuleAction {
    /**
     * @return Redirect target (used when `type = redirect`).
     * 
     */
    private @Nullable String redirectUrl;
    /**
     * @return Response code used with redirect.
     * 
     */
    private @Nullable Integer responseCode;
    /**
     * @return Signal name to exclude (used when `type = exclude_signal`).
     * 
     */
    private @Nullable String signal;
    /**
     * @return The action type, e.g. `block`, `redirect`, `exclude_signal`.
     * 
     */
    private String type;

    private NgwafWorkspaceRuleAction() {}
    /**
     * @return Redirect target (used when `type = redirect`).
     * 
     */
    public Optional<String> redirectUrl() {
        return Optional.ofNullable(this.redirectUrl);
    }
    /**
     * @return Response code used with redirect.
     * 
     */
    public Optional<Integer> responseCode() {
        return Optional.ofNullable(this.responseCode);
    }
    /**
     * @return Signal name to exclude (used when `type = exclude_signal`).
     * 
     */
    public Optional<String> signal() {
        return Optional.ofNullable(this.signal);
    }
    /**
     * @return The action type, e.g. `block`, `redirect`, `exclude_signal`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NgwafWorkspaceRuleAction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String redirectUrl;
        private @Nullable Integer responseCode;
        private @Nullable String signal;
        private String type;
        public Builder() {}
        public Builder(NgwafWorkspaceRuleAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.redirectUrl = defaults.redirectUrl;
    	      this.responseCode = defaults.responseCode;
    	      this.signal = defaults.signal;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder redirectUrl(@Nullable String redirectUrl) {

            this.redirectUrl = redirectUrl;
            return this;
        }
        @CustomType.Setter
        public Builder responseCode(@Nullable Integer responseCode) {

            this.responseCode = responseCode;
            return this;
        }
        @CustomType.Setter
        public Builder signal(@Nullable String signal) {

            this.signal = signal;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("NgwafWorkspaceRuleAction", "type");
            }
            this.type = type;
            return this;
        }
        public NgwafWorkspaceRuleAction build() {
            final var _resultValue = new NgwafWorkspaceRuleAction();
            _resultValue.redirectUrl = redirectUrl;
            _resultValue.responseCode = responseCode;
            _resultValue.signal = signal;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
