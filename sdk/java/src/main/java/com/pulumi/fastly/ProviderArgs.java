// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.fastly;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderArgs Empty = new ProviderArgs();

    /**
     * Fastly API Key from https://app.fastly.com/#account
     * 
     */
    @Import(name="apiKey")
    private @Nullable Output<String> apiKey;

    /**
     * @return Fastly API Key from https://app.fastly.com/#account
     * 
     */
    public Optional<Output<String>> apiKey() {
        return Optional.ofNullable(this.apiKey);
    }

    /**
     * Fastly API URL
     * 
     */
    @Import(name="baseUrl")
    private @Nullable Output<String> baseUrl;

    /**
     * @return Fastly API URL
     * 
     */
    public Optional<Output<String>> baseUrl() {
        return Optional.ofNullable(this.baseUrl);
    }

    /**
     * Set this to `true` to disable HTTP/1.x fallback mechanism that the underlying Go library will attempt upon connection to `api.fastly.com:443` by default. This may slightly improve the provider&#39;s performance and reduce unnecessary TLS handshakes. Default: `false`
     * 
     */
    @Import(name="forceHttp2", json=true)
    private @Nullable Output<Boolean> forceHttp2;

    /**
     * @return Set this to `true` to disable HTTP/1.x fallback mechanism that the underlying Go library will attempt upon connection to `api.fastly.com:443` by default. This may slightly improve the provider&#39;s performance and reduce unnecessary TLS handshakes. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> forceHttp2() {
        return Optional.ofNullable(this.forceHttp2);
    }

    /**
     * Set to `true` if your configuration only consumes data sources that do not require authentication, such as `fastly.getFastlyIpRanges`
     * 
     */
    @Import(name="noAuth", json=true)
    private @Nullable Output<Boolean> noAuth;

    /**
     * @return Set to `true` if your configuration only consumes data sources that do not require authentication, such as `fastly.getFastlyIpRanges`
     * 
     */
    public Optional<Output<Boolean>> noAuth() {
        return Optional.ofNullable(this.noAuth);
    }

    private ProviderArgs() {}

    private ProviderArgs(ProviderArgs $) {
        this.apiKey = $.apiKey;
        this.baseUrl = $.baseUrl;
        this.forceHttp2 = $.forceHttp2;
        this.noAuth = $.noAuth;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderArgs $;

        public Builder() {
            $ = new ProviderArgs();
        }

        public Builder(ProviderArgs defaults) {
            $ = new ProviderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiKey Fastly API Key from https://app.fastly.com/#account
         * 
         * @return builder
         * 
         */
        public Builder apiKey(@Nullable Output<String> apiKey) {
            $.apiKey = apiKey;
            return this;
        }

        /**
         * @param apiKey Fastly API Key from https://app.fastly.com/#account
         * 
         * @return builder
         * 
         */
        public Builder apiKey(String apiKey) {
            return apiKey(Output.of(apiKey));
        }

        /**
         * @param baseUrl Fastly API URL
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(@Nullable Output<String> baseUrl) {
            $.baseUrl = baseUrl;
            return this;
        }

        /**
         * @param baseUrl Fastly API URL
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(String baseUrl) {
            return baseUrl(Output.of(baseUrl));
        }

        /**
         * @param forceHttp2 Set this to `true` to disable HTTP/1.x fallback mechanism that the underlying Go library will attempt upon connection to `api.fastly.com:443` by default. This may slightly improve the provider&#39;s performance and reduce unnecessary TLS handshakes. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder forceHttp2(@Nullable Output<Boolean> forceHttp2) {
            $.forceHttp2 = forceHttp2;
            return this;
        }

        /**
         * @param forceHttp2 Set this to `true` to disable HTTP/1.x fallback mechanism that the underlying Go library will attempt upon connection to `api.fastly.com:443` by default. This may slightly improve the provider&#39;s performance and reduce unnecessary TLS handshakes. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder forceHttp2(Boolean forceHttp2) {
            return forceHttp2(Output.of(forceHttp2));
        }

        /**
         * @param noAuth Set to `true` if your configuration only consumes data sources that do not require authentication, such as `fastly.getFastlyIpRanges`
         * 
         * @return builder
         * 
         */
        public Builder noAuth(@Nullable Output<Boolean> noAuth) {
            $.noAuth = noAuth;
            return this;
        }

        /**
         * @param noAuth Set to `true` if your configuration only consumes data sources that do not require authentication, such as `fastly.getFastlyIpRanges`
         * 
         * @return builder
         * 
         */
        public Builder noAuth(Boolean noAuth) {
            return noAuth(Output.of(noAuth));
        }

        public ProviderArgs build() {
            return $;
        }
    }

}
