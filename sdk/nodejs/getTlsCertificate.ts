// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to get information of a TLS certificate for use with other resources.
 *
 * > **Warning:** The data source's filters are applied using an **AND** boolean operator, so depending on the combination
 * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
 * with any of the others.
 *
 * > **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
 */
export function getTlsCertificate(args?: GetTlsCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetTlsCertificateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fastly:index/getTlsCertificate:getTlsCertificate", {
        "domains": args.domains,
        "id": args.id,
        "issuedTo": args.issuedTo,
        "issuer": args.issuer,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getTlsCertificate.
 */
export interface GetTlsCertificateArgs {
    /**
     * Domains that are listed in any certificates' Subject Alternative Names (SAN) list.
     */
    domains?: string[];
    /**
     * Unique ID assigned to certificate by Fastly
     */
    id?: string;
    /**
     * The hostname for which a certificate was issued.
     */
    issuedTo?: string;
    /**
     * The certificate authority that issued the certificate.
     */
    issuer?: string;
    /**
     * Human-readable name used to identify the certificate. Defaults to the certificate's Common Name or first Subject Alternative Name entry.
     */
    name?: string;
}

/**
 * A collection of values returned by getTlsCertificate.
 */
export interface GetTlsCertificateResult {
    /**
     * Timestamp (GMT) when the certificate was created
     */
    readonly createdAt: string;
    /**
     * Domains that are listed in any certificates' Subject Alternative Names (SAN) list.
     */
    readonly domains: string[];
    /**
     * Unique ID assigned to certificate by Fastly
     */
    readonly id: string;
    /**
     * The hostname for which a certificate was issued.
     */
    readonly issuedTo: string;
    /**
     * The certificate authority that issued the certificate.
     */
    readonly issuer: string;
    /**
     * Human-readable name used to identify the certificate. Defaults to the certificate's Common Name or first Subject Alternative Name entry.
     */
    readonly name: string;
    /**
     * A recommendation from Fastly indicating the key associated with this certificate is in need of rotation
     */
    readonly replace: boolean;
    /**
     * A value assigned by the issuer that is unique to a certificate
     */
    readonly serialNumber: string;
    /**
     * The algorithm used to sign the certificate
     */
    readonly signatureAlgorithm: string;
    /**
     * Timestamp (GMT) when the certificate was last updated
     */
    readonly updatedAt: string;
}
/**
 * Use this data source to get information of a TLS certificate for use with other resources.
 *
 * > **Warning:** The data source's filters are applied using an **AND** boolean operator, so depending on the combination
 * of filters, they may become mutually exclusive. The exception to this is `id` which must not be specified in combination
 * with any of the others.
 *
 * > **Note:** If more or less than a single match is returned by the search, this provider will fail. Ensure that your search is specific enough to return a single key.
 */
export function getTlsCertificateOutput(args?: GetTlsCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTlsCertificateResult> {
    return pulumi.output(args).apply((a: any) => getTlsCertificate(a, opts))
}

/**
 * A collection of arguments for invoking getTlsCertificate.
 */
export interface GetTlsCertificateOutputArgs {
    /**
     * Domains that are listed in any certificates' Subject Alternative Names (SAN) list.
     */
    domains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Unique ID assigned to certificate by Fastly
     */
    id?: pulumi.Input<string>;
    /**
     * The hostname for which a certificate was issued.
     */
    issuedTo?: pulumi.Input<string>;
    /**
     * The certificate authority that issued the certificate.
     */
    issuer?: pulumi.Input<string>;
    /**
     * Human-readable name used to identify the certificate. Defaults to the certificate's Common Name or first Subject Alternative Name entry.
     */
    name?: pulumi.Input<string>;
}
