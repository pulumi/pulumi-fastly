// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to get a list of [Fastly dictionaries](https://developer.fastly.com/reference/api/dictionaries/) for the specified service/version.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fastly from "@pulumi/fastly";
 *
 * const exampleServiceVcl = new fastly.ServiceVcl("example", {
 *     name: "Example Service",
 *     domains: [{
 *         name: "example.com",
 *     }],
 *     dictionaries: [
 *         {
 *             name: "example_1",
 *         },
 *         {
 *             name: "example_2",
 *         },
 *         {
 *             name: "example_3",
 *         },
 *     ],
 *     forceDestroy: true,
 * });
 * const example = fastly.getDictionariesOutput({
 *     serviceId: exampleServiceVcl.id,
 *     serviceVersion: exampleServiceVcl.activeVersion,
 * });
 * export const serviceDictionaries = example;
 * ```
 *
 * [1]: https://developer.fastly.com/reference/api/dictionaries/
 */
export function getDictionaries(args: GetDictionariesArgs, opts?: pulumi.InvokeOptions): Promise<GetDictionariesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fastly:index/getDictionaries:getDictionaries", {
        "serviceId": args.serviceId,
        "serviceVersion": args.serviceVersion,
    }, opts);
}

/**
 * A collection of arguments for invoking getDictionaries.
 */
export interface GetDictionariesArgs {
    /**
     * Alphanumeric string identifying the service.
     */
    serviceId: string;
    /**
     * Integer identifying a service version.
     */
    serviceVersion: number;
}

/**
 * A collection of values returned by getDictionaries.
 */
export interface GetDictionariesResult {
    /**
     * List of all dictionaries for the version of the service.
     */
    readonly dictionaries: outputs.GetDictionariesDictionary[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Alphanumeric string identifying the service.
     */
    readonly serviceId: string;
    /**
     * Integer identifying a service version.
     */
    readonly serviceVersion: number;
}
/**
 * Use this data source to get a list of [Fastly dictionaries](https://developer.fastly.com/reference/api/dictionaries/) for the specified service/version.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fastly from "@pulumi/fastly";
 *
 * const exampleServiceVcl = new fastly.ServiceVcl("example", {
 *     name: "Example Service",
 *     domains: [{
 *         name: "example.com",
 *     }],
 *     dictionaries: [
 *         {
 *             name: "example_1",
 *         },
 *         {
 *             name: "example_2",
 *         },
 *         {
 *             name: "example_3",
 *         },
 *     ],
 *     forceDestroy: true,
 * });
 * const example = fastly.getDictionariesOutput({
 *     serviceId: exampleServiceVcl.id,
 *     serviceVersion: exampleServiceVcl.activeVersion,
 * });
 * export const serviceDictionaries = example;
 * ```
 *
 * [1]: https://developer.fastly.com/reference/api/dictionaries/
 */
export function getDictionariesOutput(args: GetDictionariesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDictionariesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("fastly:index/getDictionaries:getDictionaries", {
        "serviceId": args.serviceId,
        "serviceVersion": args.serviceVersion,
    }, opts);
}

/**
 * A collection of arguments for invoking getDictionaries.
 */
export interface GetDictionariesOutputArgs {
    /**
     * Alphanumeric string identifying the service.
     */
    serviceId: pulumi.Input<string>;
    /**
     * Integer identifying a service version.
     */
    serviceVersion: pulumi.Input<number>;
}
