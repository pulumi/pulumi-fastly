// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides Fastly Next-Gen WAF Alert Mailing List integrations, which provide a connection to Mailing List.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fastly from "@pulumi/fastly";
 *
 * const demoJiraAlert = new fastly.NgwafAlertJiraIntegration("demo_jira_alert", {
 *     description: "A description",
 *     host: "https://mycompany.atlassian.net",
 *     issueType: "task",
 *     key: "a1b2c3d4e5f6789012345678901234567",
 *     project: "test",
 *     username: "user",
 *     workspaceId: demo.id,
 * });
 * ```
 *
 * ## Import
 *
 * Fastly Next-Gen WAF Alert Mailing List integrations can be imported using their ID and the ID of the workspace they belong to.
 *
 * ```sh
 * $ pulumi import fastly:index/ngwafAlertMailingListIntegration:NgwafAlertMailingListIntegration example <workspace_id>/<alert_id>
 * ```
 */
export class NgwafAlertMailingListIntegration extends pulumi.CustomResource {
    /**
     * Get an existing NgwafAlertMailingListIntegration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NgwafAlertMailingListIntegrationState, opts?: pulumi.CustomResourceOptions): NgwafAlertMailingListIntegration {
        return new NgwafAlertMailingListIntegration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fastly:index/ngwafAlertMailingListIntegration:NgwafAlertMailingListIntegration';

    /**
     * Returns true if the given object is an instance of NgwafAlertMailingListIntegration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NgwafAlertMailingListIntegration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NgwafAlertMailingListIntegration.__pulumiType;
    }

    /**
     * Email address that the alert will use.
     */
    declare public readonly address: pulumi.Output<string>;
    /**
     * The description of the alert.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The ID of the workspace.
     */
    declare public readonly workspaceId: pulumi.Output<string>;

    /**
     * Create a NgwafAlertMailingListIntegration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NgwafAlertMailingListIntegrationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NgwafAlertMailingListIntegrationArgs | NgwafAlertMailingListIntegrationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NgwafAlertMailingListIntegrationState | undefined;
            resourceInputs["address"] = state?.address;
            resourceInputs["description"] = state?.description;
            resourceInputs["workspaceId"] = state?.workspaceId;
        } else {
            const args = argsOrState as NgwafAlertMailingListIntegrationArgs | undefined;
            if (args?.address === undefined && !opts.urn) {
                throw new Error("Missing required property 'address'");
            }
            if (args?.workspaceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["address"] = args?.address;
            resourceInputs["description"] = args?.description;
            resourceInputs["workspaceId"] = args?.workspaceId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NgwafAlertMailingListIntegration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NgwafAlertMailingListIntegration resources.
 */
export interface NgwafAlertMailingListIntegrationState {
    /**
     * Email address that the alert will use.
     */
    address?: pulumi.Input<string>;
    /**
     * The description of the alert.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the workspace.
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NgwafAlertMailingListIntegration resource.
 */
export interface NgwafAlertMailingListIntegrationArgs {
    /**
     * Email address that the alert will use.
     */
    address: pulumi.Input<string>;
    /**
     * The description of the alert.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the workspace.
     */
    workspaceId: pulumi.Input<string>;
}
