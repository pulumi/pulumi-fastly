// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNgwafThresholds(args: GetNgwafThresholdsArgs, opts?: pulumi.InvokeOptions): Promise<GetNgwafThresholdsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fastly:index/getNgwafThresholds:getNgwafThresholds", {
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNgwafThresholds.
 */
export interface GetNgwafThresholdsArgs {
    /**
     * The ID of the workspace.
     */
    workspaceId: string;
}

/**
 * A collection of values returned by getNgwafThresholds.
 */
export interface GetNgwafThresholdsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of all thresholds for a given workspace.
     */
    readonly thresholds: outputs.GetNgwafThresholdsThreshold[];
    /**
     * The ID of the workspace.
     */
    readonly workspaceId: string;
}
export function getNgwafThresholdsOutput(args: GetNgwafThresholdsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNgwafThresholdsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("fastly:index/getNgwafThresholds:getNgwafThresholds", {
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNgwafThresholds.
 */
export interface GetNgwafThresholdsOutputArgs {
    /**
     * The ID of the workspace.
     */
    workspaceId: pulumi.Input<string>;
}
