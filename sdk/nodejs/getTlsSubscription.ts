// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Use this data source to get information about a TLS subscription.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fastly from "@pulumi/fastly";
 *
 * const example = pulumi.output(fastly.getTlsSubscription({
 *     domains: ["example.com"],
 * }, { async: true }));
 * ```
 */
export function getTlsSubscription(args?: GetTlsSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetTlsSubscriptionResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("fastly:index/getTlsSubscription:getTlsSubscription", {
        "certificateAuthority": args.certificateAuthority,
        "configurationId": args.configurationId,
        "domains": args.domains,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getTlsSubscription.
 */
export interface GetTlsSubscriptionArgs {
    /**
     * The entity that issues and certifies the TLS certificates for the subscription.
     */
    readonly certificateAuthority?: string;
    /**
     * ID of TLS configuration used to terminate TLS traffic.
     */
    readonly configurationId?: string;
    /**
     * List of domains on which to enable TLS.
     */
    readonly domains?: string[];
    /**
     * ID of TLS subscription. Conflicts with all the other filters.
     */
    readonly id?: string;
}

/**
 * A collection of values returned by getTlsSubscription.
 */
export interface GetTlsSubscriptionResult {
    /**
     * The entity that issues and certifies the TLS certificates for the subscription.
     */
    readonly certificateAuthority: string;
    /**
     * The common name associated with the subscription generated by Fastly TLS.
     */
    readonly commonName: string;
    /**
     * ID of TLS configuration used to terminate TLS traffic.
     */
    readonly configurationId: string;
    /**
     * Timestamp (GMT) when subscription was created.
     */
    readonly createdAt: string;
    /**
     * List of domains on which to enable TLS.
     */
    readonly domains: string[];
    /**
     * ID of TLS subscription. Conflicts with all the other filters.
     */
    readonly id: string;
    /**
     * The current state of the subscription. The list of possible states are: `pending`, `processing`, `issued`, and `renewing`.
     */
    readonly state: string;
    /**
     * Timestamp (GMT) when subscription was last updated.
     */
    readonly updatedAt: string;
}
