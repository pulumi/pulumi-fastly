// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to get a Fastly Next-Gen WAF Alert Opsgenie integration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fastly from "@pulumi/fastly";
 *
 * const ngwafOpsgenieAlerts = fastly.getNgwafAlertOpsgenieIntegration({
 *     workspaceId: testRedactionsWorkspace.id,
 * });
 * export const ngwafOpsgenieAlertsAll = opsgenieAlerts;
 * ```
 */
export function getNgwafAlertOpsgenieIntegration(args: GetNgwafAlertOpsgenieIntegrationArgs, opts?: pulumi.InvokeOptions): Promise<GetNgwafAlertOpsgenieIntegrationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fastly:index/getNgwafAlertOpsgenieIntegration:getNgwafAlertOpsgenieIntegration", {
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNgwafAlertOpsgenieIntegration.
 */
export interface GetNgwafAlertOpsgenieIntegrationArgs {
    /**
     * The ID of the workspace.
     */
    workspaceId: string;
}

/**
 * A collection of values returned by getNgwafAlertOpsgenieIntegration.
 */
export interface GetNgwafAlertOpsgenieIntegrationResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of all Opsgenie alerts for a workspace.
     */
    readonly opsgenieAlerts: outputs.GetNgwafAlertOpsgenieIntegrationOpsgenieAlert[];
    /**
     * The ID of the workspace.
     */
    readonly workspaceId: string;
}
/**
 * Use this data source to get a Fastly Next-Gen WAF Alert Opsgenie integration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fastly from "@pulumi/fastly";
 *
 * const ngwafOpsgenieAlerts = fastly.getNgwafAlertOpsgenieIntegration({
 *     workspaceId: testRedactionsWorkspace.id,
 * });
 * export const ngwafOpsgenieAlertsAll = opsgenieAlerts;
 * ```
 */
export function getNgwafAlertOpsgenieIntegrationOutput(args: GetNgwafAlertOpsgenieIntegrationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNgwafAlertOpsgenieIntegrationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("fastly:index/getNgwafAlertOpsgenieIntegration:getNgwafAlertOpsgenieIntegration", {
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNgwafAlertOpsgenieIntegration.
 */
export interface GetNgwafAlertOpsgenieIntegrationOutputArgs {
    /**
     * The ID of the workspace.
     */
    workspaceId: pulumi.Input<string>;
}
