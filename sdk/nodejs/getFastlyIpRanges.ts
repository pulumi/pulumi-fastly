// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to get the [IP ranges](https://docs.fastly.com/guides/securing-communications/accessing-fastlys-ip-ranges) of Fastly edge nodes.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as fastly from "@pulumi/fastly";
 *
 * const fastlyFastlyIpRanges = pulumi.output(fastly.getFastlyIpRanges({ async: true }));
 * const fromFastly = new aws.ec2.SecurityGroup("from_fastly", {
 *     ingress: [{
 *         cidrBlocks: fastlyFastlyIpRanges.cidrBlocks,
 *         fromPort: 443,
 *         ipv6CidrBlocks: fastlyFastlyIpRanges.ipv6CidrBlocks,
 *         protocol: "tcp",
 *         toPort: 443,
 *     }],
 * });
 * ```
 */
export function getFastlyIpRanges(opts?: pulumi.InvokeOptions): Promise<GetFastlyIpRangesResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("fastly:index/getFastlyIpRanges:getFastlyIpRanges", {
    }, opts);
}

/**
 * A collection of values returned by getFastlyIpRanges.
 */
export interface GetFastlyIpRangesResult {
    /**
     * The lexically ordered list of ipv4 CIDR blocks.
     */
    readonly cidrBlocks: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The lexically ordered list of ipv6 CIDR blocks.
     */
    readonly ipv6CidrBlocks: string[];
}
