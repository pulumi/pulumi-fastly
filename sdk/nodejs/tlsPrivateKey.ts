// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Uploads a Custom TLS Private Key to Fastly. This can be combined with a `fastly.TlsCertificate` resource to provide a TLS Certificate able to be applied to a Fastly Service.
 *
 * The Private Key resource requires a key in PEM format, and a name to identify it.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fastly from "@pulumi/fastly";
 * import * as tls from "@pulumi/tls";
 *
 * const demo = new tls.index.PrivateKey("demo", {algorithm: "RSA"});
 * const demoTlsPrivateKey = new fastly.TlsPrivateKey("demo", {
 *     keyPem: demo.privateKeyPem,
 *     name: "tf-demo",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * A Private Key can be imported using its ID, e.g.
 *
 * ```sh
 * $ pulumi import fastly:index/tlsPrivateKey:TlsPrivateKey demo xxxxxxxxxxx
 * ```
 */
export class TlsPrivateKey extends pulumi.CustomResource {
    /**
     * Get an existing TlsPrivateKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TlsPrivateKeyState, opts?: pulumi.CustomResourceOptions): TlsPrivateKey {
        return new TlsPrivateKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fastly:index/tlsPrivateKey:TlsPrivateKey';

    /**
     * Returns true if the given object is an instance of TlsPrivateKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TlsPrivateKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TlsPrivateKey.__pulumiType;
    }

    /**
     * Time-stamp (GMT) when the private key was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The key length used to generate the private key.
     */
    public /*out*/ readonly keyLength!: pulumi.Output<number>;
    /**
     * Private key in PEM format.
     */
    public readonly keyPem!: pulumi.Output<string>;
    /**
     * The algorithm used to generate the private key. Must be RSA.
     */
    public /*out*/ readonly keyType!: pulumi.Output<string>;
    /**
     * Customisable name of the private key.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Useful for safely identifying the key.
     */
    public /*out*/ readonly publicKeySha1!: pulumi.Output<string>;
    /**
     * Whether Fastly recommends replacing this private key.
     */
    public /*out*/ readonly replace!: pulumi.Output<boolean>;

    /**
     * Create a TlsPrivateKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TlsPrivateKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TlsPrivateKeyArgs | TlsPrivateKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TlsPrivateKeyState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["keyLength"] = state ? state.keyLength : undefined;
            resourceInputs["keyPem"] = state ? state.keyPem : undefined;
            resourceInputs["keyType"] = state ? state.keyType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["publicKeySha1"] = state ? state.publicKeySha1 : undefined;
            resourceInputs["replace"] = state ? state.replace : undefined;
        } else {
            const args = argsOrState as TlsPrivateKeyArgs | undefined;
            if ((!args || args.keyPem === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyPem'");
            }
            resourceInputs["keyPem"] = args?.keyPem ? pulumi.secret(args.keyPem) : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["keyLength"] = undefined /*out*/;
            resourceInputs["keyType"] = undefined /*out*/;
            resourceInputs["publicKeySha1"] = undefined /*out*/;
            resourceInputs["replace"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["keyPem"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(TlsPrivateKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TlsPrivateKey resources.
 */
export interface TlsPrivateKeyState {
    /**
     * Time-stamp (GMT) when the private key was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The key length used to generate the private key.
     */
    keyLength?: pulumi.Input<number>;
    /**
     * Private key in PEM format.
     */
    keyPem?: pulumi.Input<string>;
    /**
     * The algorithm used to generate the private key. Must be RSA.
     */
    keyType?: pulumi.Input<string>;
    /**
     * Customisable name of the private key.
     */
    name?: pulumi.Input<string>;
    /**
     * Useful for safely identifying the key.
     */
    publicKeySha1?: pulumi.Input<string>;
    /**
     * Whether Fastly recommends replacing this private key.
     */
    replace?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a TlsPrivateKey resource.
 */
export interface TlsPrivateKeyArgs {
    /**
     * Private key in PEM format.
     */
    keyPem: pulumi.Input<string>;
    /**
     * Customisable name of the private key.
     */
    name?: pulumi.Input<string>;
}
