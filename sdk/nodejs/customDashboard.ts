// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a Custom Dashboard which can be viewed in the Fastly Control Panel.
 *
 * ## Import
 *
 * Fastly Custom Dashboards can be imported using their ID, e.g.
 *
 * ```sh
 * $ pulumi import fastly:index/customDashboard:CustomDashboard example xxxxxxxxxxxxxxxxxxxx
 * ```
 */
export class CustomDashboard extends pulumi.CustomResource {
    /**
     * Get an existing CustomDashboard resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomDashboardState, opts?: pulumi.CustomResourceOptions): CustomDashboard {
        return new CustomDashboard(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fastly:index/customDashboard:CustomDashboard';

    /**
     * Returns true if the given object is an instance of CustomDashboard.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomDashboard {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomDashboard.__pulumiType;
    }

    /**
     * A list of dashboard items.
     */
    public readonly dashboardItems!: pulumi.Output<outputs.CustomDashboardDashboardItem[] | undefined>;
    /**
     * A short description of the dashboard.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A human-readable name.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a CustomDashboard resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CustomDashboardArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomDashboardArgs | CustomDashboardState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomDashboardState | undefined;
            resourceInputs["dashboardItems"] = state ? state.dashboardItems : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as CustomDashboardArgs | undefined;
            resourceInputs["dashboardItems"] = args ? args.dashboardItems : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomDashboard.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomDashboard resources.
 */
export interface CustomDashboardState {
    /**
     * A list of dashboard items.
     */
    dashboardItems?: pulumi.Input<pulumi.Input<inputs.CustomDashboardDashboardItem>[]>;
    /**
     * A short description of the dashboard.
     */
    description?: pulumi.Input<string>;
    /**
     * A human-readable name.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomDashboard resource.
 */
export interface CustomDashboardArgs {
    /**
     * A list of dashboard items.
     */
    dashboardItems?: pulumi.Input<pulumi.Input<inputs.CustomDashboardDashboardItem>[]>;
    /**
     * A short description of the dashboard.
     */
    description?: pulumi.Input<string>;
    /**
     * A human-readable name.
     */
    name?: pulumi.Input<string>;
}
