// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * This is an example of the import command being applied to the resource named `fastly_service_waf_configuration.waf` The resource ID should be the WAF ID.
 *
 * ```sh
 *  $ pulumi import fastly:index/serviceWafConfiguration:ServiceWafConfiguration waf xxxxxxxxxxxxxxxxxxxx
 * ```
 *
 *  If Terraform is already managing a remote WAF configurations against a resource being imported then the user will be asked to remove it from the existing Terraform state. The following is an example of the Terraform state command to remove the resource named `fastly_service_waf_configuration.waf` from the Terraform state file. $ terraform state rm fastly_service_waf_configuration.waf
 */
export class ServiceWafConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing ServiceWafConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceWafConfigurationState, opts?: pulumi.CustomResourceOptions): ServiceWafConfiguration {
        return new ServiceWafConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fastly:index/serviceWafConfiguration:ServiceWafConfiguration';

    /**
     * Returns true if the given object is an instance of ServiceWafConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceWafConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceWafConfiguration.__pulumiType;
    }

    /**
     * Allowed HTTP versions.
     */
    public readonly allowedHttpVersions!: pulumi.Output<string>;
    /**
     * A space-separated list of HTTP method names.
     */
    public readonly allowedMethods!: pulumi.Output<string>;
    /**
     * Allowed request content types.
     */
    public readonly allowedRequestContentType!: pulumi.Output<string>;
    /**
     * Allowed request content type charset.
     */
    public readonly allowedRequestContentTypeCharset!: pulumi.Output<string>;
    /**
     * The maximum number of arguments allowed.
     */
    public readonly argLength!: pulumi.Output<number>;
    /**
     * The maximum allowed argument name length.
     */
    public readonly argNameLength!: pulumi.Output<number>;
    /**
     * The maximum allowed size of all files.
     */
    public readonly combinedFileSizes!: pulumi.Output<number>;
    /**
     * Score value to add for critical anomalies.
     */
    public readonly criticalAnomalyScore!: pulumi.Output<number>;
    /**
     * CRS validate UTF8 encoding.
     */
    public readonly crsValidateUtf8Encoding!: pulumi.Output<boolean>;
    /**
     * Score value to add for error anomalies.
     */
    public readonly errorAnomalyScore!: pulumi.Output<number>;
    /**
     * A space-separated list of country codes in ISO 3166-1 (two-letter) format.
     */
    public readonly highRiskCountryCodes!: pulumi.Output<string>;
    /**
     * HTTP violation threshold.
     */
    public readonly httpViolationScoreThreshold!: pulumi.Output<number>;
    /**
     * Inbound anomaly threshold.
     */
    public readonly inboundAnomalyScoreThreshold!: pulumi.Output<number>;
    /**
     * Local file inclusion attack threshold.
     */
    public readonly lfiScoreThreshold!: pulumi.Output<number>;
    /**
     * The maximum allowed file size, in bytes.
     */
    public readonly maxFileSize!: pulumi.Output<number>;
    /**
     * The maximum number of arguments allowed.
     */
    public readonly maxNumArgs!: pulumi.Output<number>;
    /**
     * Score value to add for notice anomalies.
     */
    public readonly noticeAnomalyScore!: pulumi.Output<number>;
    /**
     * The configured paranoia level.
     */
    public readonly paranoiaLevel!: pulumi.Output<number>;
    /**
     * PHP injection threshold.
     */
    public readonly phpInjectionScoreThreshold!: pulumi.Output<number>;
    /**
     * Remote code execution threshold.
     */
    public readonly rceScoreThreshold!: pulumi.Output<number>;
    /**
     * A space-separated list of allowed file extensions.
     */
    public readonly restrictedExtensions!: pulumi.Output<string>;
    /**
     * A space-separated list of allowed header names.
     */
    public readonly restrictedHeaders!: pulumi.Output<string>;
    /**
     * Remote file inclusion attack threshold.
     */
    public readonly rfiScoreThreshold!: pulumi.Output<number>;
    /**
     * The Web Application Firewall's rule exclusions. Defined below
     */
    public readonly ruleExclusions!: pulumi.Output<outputs.ServiceWafConfigurationRuleExclusion[] | undefined>;
    /**
     * The Web Application Firewall's active rules. Defined below
     */
    public readonly rules!: pulumi.Output<outputs.ServiceWafConfigurationRule[] | undefined>;
    /**
     * Session fixation attack threshold.
     */
    public readonly sessionFixationScoreThreshold!: pulumi.Output<number>;
    /**
     * SQL injection attack threshold.
     */
    public readonly sqlInjectionScoreThreshold!: pulumi.Output<number>;
    /**
     * The maximum size of argument names and values.
     */
    public readonly totalArgLength!: pulumi.Output<number>;
    /**
     * The ID of the Web Application Firewall that the configuration belongs to.
     */
    public readonly wafId!: pulumi.Output<string>;
    /**
     * Score value to add for warning anomalies.
     */
    public readonly warningAnomalyScore!: pulumi.Output<number>;
    /**
     * XSS attack threshold.
     */
    public readonly xssScoreThreshold!: pulumi.Output<number>;

    /**
     * Create a ServiceWafConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceWafConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceWafConfigurationArgs | ServiceWafConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceWafConfigurationState | undefined;
            inputs["allowedHttpVersions"] = state ? state.allowedHttpVersions : undefined;
            inputs["allowedMethods"] = state ? state.allowedMethods : undefined;
            inputs["allowedRequestContentType"] = state ? state.allowedRequestContentType : undefined;
            inputs["allowedRequestContentTypeCharset"] = state ? state.allowedRequestContentTypeCharset : undefined;
            inputs["argLength"] = state ? state.argLength : undefined;
            inputs["argNameLength"] = state ? state.argNameLength : undefined;
            inputs["combinedFileSizes"] = state ? state.combinedFileSizes : undefined;
            inputs["criticalAnomalyScore"] = state ? state.criticalAnomalyScore : undefined;
            inputs["crsValidateUtf8Encoding"] = state ? state.crsValidateUtf8Encoding : undefined;
            inputs["errorAnomalyScore"] = state ? state.errorAnomalyScore : undefined;
            inputs["highRiskCountryCodes"] = state ? state.highRiskCountryCodes : undefined;
            inputs["httpViolationScoreThreshold"] = state ? state.httpViolationScoreThreshold : undefined;
            inputs["inboundAnomalyScoreThreshold"] = state ? state.inboundAnomalyScoreThreshold : undefined;
            inputs["lfiScoreThreshold"] = state ? state.lfiScoreThreshold : undefined;
            inputs["maxFileSize"] = state ? state.maxFileSize : undefined;
            inputs["maxNumArgs"] = state ? state.maxNumArgs : undefined;
            inputs["noticeAnomalyScore"] = state ? state.noticeAnomalyScore : undefined;
            inputs["paranoiaLevel"] = state ? state.paranoiaLevel : undefined;
            inputs["phpInjectionScoreThreshold"] = state ? state.phpInjectionScoreThreshold : undefined;
            inputs["rceScoreThreshold"] = state ? state.rceScoreThreshold : undefined;
            inputs["restrictedExtensions"] = state ? state.restrictedExtensions : undefined;
            inputs["restrictedHeaders"] = state ? state.restrictedHeaders : undefined;
            inputs["rfiScoreThreshold"] = state ? state.rfiScoreThreshold : undefined;
            inputs["ruleExclusions"] = state ? state.ruleExclusions : undefined;
            inputs["rules"] = state ? state.rules : undefined;
            inputs["sessionFixationScoreThreshold"] = state ? state.sessionFixationScoreThreshold : undefined;
            inputs["sqlInjectionScoreThreshold"] = state ? state.sqlInjectionScoreThreshold : undefined;
            inputs["totalArgLength"] = state ? state.totalArgLength : undefined;
            inputs["wafId"] = state ? state.wafId : undefined;
            inputs["warningAnomalyScore"] = state ? state.warningAnomalyScore : undefined;
            inputs["xssScoreThreshold"] = state ? state.xssScoreThreshold : undefined;
        } else {
            const args = argsOrState as ServiceWafConfigurationArgs | undefined;
            if ((!args || args.wafId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'wafId'");
            }
            inputs["allowedHttpVersions"] = args ? args.allowedHttpVersions : undefined;
            inputs["allowedMethods"] = args ? args.allowedMethods : undefined;
            inputs["allowedRequestContentType"] = args ? args.allowedRequestContentType : undefined;
            inputs["allowedRequestContentTypeCharset"] = args ? args.allowedRequestContentTypeCharset : undefined;
            inputs["argLength"] = args ? args.argLength : undefined;
            inputs["argNameLength"] = args ? args.argNameLength : undefined;
            inputs["combinedFileSizes"] = args ? args.combinedFileSizes : undefined;
            inputs["criticalAnomalyScore"] = args ? args.criticalAnomalyScore : undefined;
            inputs["crsValidateUtf8Encoding"] = args ? args.crsValidateUtf8Encoding : undefined;
            inputs["errorAnomalyScore"] = args ? args.errorAnomalyScore : undefined;
            inputs["highRiskCountryCodes"] = args ? args.highRiskCountryCodes : undefined;
            inputs["httpViolationScoreThreshold"] = args ? args.httpViolationScoreThreshold : undefined;
            inputs["inboundAnomalyScoreThreshold"] = args ? args.inboundAnomalyScoreThreshold : undefined;
            inputs["lfiScoreThreshold"] = args ? args.lfiScoreThreshold : undefined;
            inputs["maxFileSize"] = args ? args.maxFileSize : undefined;
            inputs["maxNumArgs"] = args ? args.maxNumArgs : undefined;
            inputs["noticeAnomalyScore"] = args ? args.noticeAnomalyScore : undefined;
            inputs["paranoiaLevel"] = args ? args.paranoiaLevel : undefined;
            inputs["phpInjectionScoreThreshold"] = args ? args.phpInjectionScoreThreshold : undefined;
            inputs["rceScoreThreshold"] = args ? args.rceScoreThreshold : undefined;
            inputs["restrictedExtensions"] = args ? args.restrictedExtensions : undefined;
            inputs["restrictedHeaders"] = args ? args.restrictedHeaders : undefined;
            inputs["rfiScoreThreshold"] = args ? args.rfiScoreThreshold : undefined;
            inputs["ruleExclusions"] = args ? args.ruleExclusions : undefined;
            inputs["rules"] = args ? args.rules : undefined;
            inputs["sessionFixationScoreThreshold"] = args ? args.sessionFixationScoreThreshold : undefined;
            inputs["sqlInjectionScoreThreshold"] = args ? args.sqlInjectionScoreThreshold : undefined;
            inputs["totalArgLength"] = args ? args.totalArgLength : undefined;
            inputs["wafId"] = args ? args.wafId : undefined;
            inputs["warningAnomalyScore"] = args ? args.warningAnomalyScore : undefined;
            inputs["xssScoreThreshold"] = args ? args.xssScoreThreshold : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ServiceWafConfiguration.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceWafConfiguration resources.
 */
export interface ServiceWafConfigurationState {
    /**
     * Allowed HTTP versions.
     */
    readonly allowedHttpVersions?: pulumi.Input<string>;
    /**
     * A space-separated list of HTTP method names.
     */
    readonly allowedMethods?: pulumi.Input<string>;
    /**
     * Allowed request content types.
     */
    readonly allowedRequestContentType?: pulumi.Input<string>;
    /**
     * Allowed request content type charset.
     */
    readonly allowedRequestContentTypeCharset?: pulumi.Input<string>;
    /**
     * The maximum number of arguments allowed.
     */
    readonly argLength?: pulumi.Input<number>;
    /**
     * The maximum allowed argument name length.
     */
    readonly argNameLength?: pulumi.Input<number>;
    /**
     * The maximum allowed size of all files.
     */
    readonly combinedFileSizes?: pulumi.Input<number>;
    /**
     * Score value to add for critical anomalies.
     */
    readonly criticalAnomalyScore?: pulumi.Input<number>;
    /**
     * CRS validate UTF8 encoding.
     */
    readonly crsValidateUtf8Encoding?: pulumi.Input<boolean>;
    /**
     * Score value to add for error anomalies.
     */
    readonly errorAnomalyScore?: pulumi.Input<number>;
    /**
     * A space-separated list of country codes in ISO 3166-1 (two-letter) format.
     */
    readonly highRiskCountryCodes?: pulumi.Input<string>;
    /**
     * HTTP violation threshold.
     */
    readonly httpViolationScoreThreshold?: pulumi.Input<number>;
    /**
     * Inbound anomaly threshold.
     */
    readonly inboundAnomalyScoreThreshold?: pulumi.Input<number>;
    /**
     * Local file inclusion attack threshold.
     */
    readonly lfiScoreThreshold?: pulumi.Input<number>;
    /**
     * The maximum allowed file size, in bytes.
     */
    readonly maxFileSize?: pulumi.Input<number>;
    /**
     * The maximum number of arguments allowed.
     */
    readonly maxNumArgs?: pulumi.Input<number>;
    /**
     * Score value to add for notice anomalies.
     */
    readonly noticeAnomalyScore?: pulumi.Input<number>;
    /**
     * The configured paranoia level.
     */
    readonly paranoiaLevel?: pulumi.Input<number>;
    /**
     * PHP injection threshold.
     */
    readonly phpInjectionScoreThreshold?: pulumi.Input<number>;
    /**
     * Remote code execution threshold.
     */
    readonly rceScoreThreshold?: pulumi.Input<number>;
    /**
     * A space-separated list of allowed file extensions.
     */
    readonly restrictedExtensions?: pulumi.Input<string>;
    /**
     * A space-separated list of allowed header names.
     */
    readonly restrictedHeaders?: pulumi.Input<string>;
    /**
     * Remote file inclusion attack threshold.
     */
    readonly rfiScoreThreshold?: pulumi.Input<number>;
    /**
     * The Web Application Firewall's rule exclusions. Defined below
     */
    readonly ruleExclusions?: pulumi.Input<pulumi.Input<inputs.ServiceWafConfigurationRuleExclusion>[]>;
    /**
     * The Web Application Firewall's active rules. Defined below
     */
    readonly rules?: pulumi.Input<pulumi.Input<inputs.ServiceWafConfigurationRule>[]>;
    /**
     * Session fixation attack threshold.
     */
    readonly sessionFixationScoreThreshold?: pulumi.Input<number>;
    /**
     * SQL injection attack threshold.
     */
    readonly sqlInjectionScoreThreshold?: pulumi.Input<number>;
    /**
     * The maximum size of argument names and values.
     */
    readonly totalArgLength?: pulumi.Input<number>;
    /**
     * The ID of the Web Application Firewall that the configuration belongs to.
     */
    readonly wafId?: pulumi.Input<string>;
    /**
     * Score value to add for warning anomalies.
     */
    readonly warningAnomalyScore?: pulumi.Input<number>;
    /**
     * XSS attack threshold.
     */
    readonly xssScoreThreshold?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ServiceWafConfiguration resource.
 */
export interface ServiceWafConfigurationArgs {
    /**
     * Allowed HTTP versions.
     */
    readonly allowedHttpVersions?: pulumi.Input<string>;
    /**
     * A space-separated list of HTTP method names.
     */
    readonly allowedMethods?: pulumi.Input<string>;
    /**
     * Allowed request content types.
     */
    readonly allowedRequestContentType?: pulumi.Input<string>;
    /**
     * Allowed request content type charset.
     */
    readonly allowedRequestContentTypeCharset?: pulumi.Input<string>;
    /**
     * The maximum number of arguments allowed.
     */
    readonly argLength?: pulumi.Input<number>;
    /**
     * The maximum allowed argument name length.
     */
    readonly argNameLength?: pulumi.Input<number>;
    /**
     * The maximum allowed size of all files.
     */
    readonly combinedFileSizes?: pulumi.Input<number>;
    /**
     * Score value to add for critical anomalies.
     */
    readonly criticalAnomalyScore?: pulumi.Input<number>;
    /**
     * CRS validate UTF8 encoding.
     */
    readonly crsValidateUtf8Encoding?: pulumi.Input<boolean>;
    /**
     * Score value to add for error anomalies.
     */
    readonly errorAnomalyScore?: pulumi.Input<number>;
    /**
     * A space-separated list of country codes in ISO 3166-1 (two-letter) format.
     */
    readonly highRiskCountryCodes?: pulumi.Input<string>;
    /**
     * HTTP violation threshold.
     */
    readonly httpViolationScoreThreshold?: pulumi.Input<number>;
    /**
     * Inbound anomaly threshold.
     */
    readonly inboundAnomalyScoreThreshold?: pulumi.Input<number>;
    /**
     * Local file inclusion attack threshold.
     */
    readonly lfiScoreThreshold?: pulumi.Input<number>;
    /**
     * The maximum allowed file size, in bytes.
     */
    readonly maxFileSize?: pulumi.Input<number>;
    /**
     * The maximum number of arguments allowed.
     */
    readonly maxNumArgs?: pulumi.Input<number>;
    /**
     * Score value to add for notice anomalies.
     */
    readonly noticeAnomalyScore?: pulumi.Input<number>;
    /**
     * The configured paranoia level.
     */
    readonly paranoiaLevel?: pulumi.Input<number>;
    /**
     * PHP injection threshold.
     */
    readonly phpInjectionScoreThreshold?: pulumi.Input<number>;
    /**
     * Remote code execution threshold.
     */
    readonly rceScoreThreshold?: pulumi.Input<number>;
    /**
     * A space-separated list of allowed file extensions.
     */
    readonly restrictedExtensions?: pulumi.Input<string>;
    /**
     * A space-separated list of allowed header names.
     */
    readonly restrictedHeaders?: pulumi.Input<string>;
    /**
     * Remote file inclusion attack threshold.
     */
    readonly rfiScoreThreshold?: pulumi.Input<number>;
    /**
     * The Web Application Firewall's rule exclusions. Defined below
     */
    readonly ruleExclusions?: pulumi.Input<pulumi.Input<inputs.ServiceWafConfigurationRuleExclusion>[]>;
    /**
     * The Web Application Firewall's active rules. Defined below
     */
    readonly rules?: pulumi.Input<pulumi.Input<inputs.ServiceWafConfigurationRule>[]>;
    /**
     * Session fixation attack threshold.
     */
    readonly sessionFixationScoreThreshold?: pulumi.Input<number>;
    /**
     * SQL injection attack threshold.
     */
    readonly sqlInjectionScoreThreshold?: pulumi.Input<number>;
    /**
     * The maximum size of argument names and values.
     */
    readonly totalArgLength?: pulumi.Input<number>;
    /**
     * The ID of the Web Application Firewall that the configuration belongs to.
     */
    readonly wafId: pulumi.Input<string>;
    /**
     * Score value to add for warning anomalies.
     */
    readonly warningAnomalyScore?: pulumi.Input<number>;
    /**
     * XSS attack threshold.
     */
    readonly xssScoreThreshold?: pulumi.Input<number>;
}
