// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Defines a set of Web Application Firewall configuration options that can be used to populate a service WAF. This resource will configure rules, thresholds and other settings for a WAF.
 *
 * > **Warning:** This provider will take precedence over any changes you make in the UI or API. Such changes are likely to be reversed if you run the provider again.
 *
 * ## Adding a WAF to an existing service
 *
 * > **Warning:** A two-phase change is required when adding a WAF to an existing service
 *
 * When adding a `waf` to an existing `fastly.ServiceVcl` and at the same time adding a `fastly.ServiceWafConfiguration`
 * resource with `wafId = fastly_service_vcl.demo.waf[0].waf_id` might result with the in the following error:
 *
 * > fastly_service_vcl.demo.waf is empty list of object
 *
 * For this scenario, it's recommended to split the changes into two distinct steps:
 *
 * 1. Add the `waf` block to the `fastly.ServiceVcl` and apply the changes
 * 2. Add the `fastly.ServiceWafConfiguration` to the HCL and apply the changes
 *
 * ## Import
 *
 * This is an example of the import command being applied to the resource named `fastly_service_waf_configuration.waf` The resource ID should be the WAF ID.
 *
 * ```sh
 *  $ pulumi import fastly:index/serviceWafConfiguration:ServiceWafConfiguration waf xxxxxxxxxxxxxxxxxxxx
 * ```
 */
export class ServiceWafConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing ServiceWafConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceWafConfigurationState, opts?: pulumi.CustomResourceOptions): ServiceWafConfiguration {
        return new ServiceWafConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fastly:index/serviceWafConfiguration:ServiceWafConfiguration';

    /**
     * Returns true if the given object is an instance of ServiceWafConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceWafConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceWafConfiguration.__pulumiType;
    }

    /**
     * Conditionally prevents a new firewall version from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`
     */
    public readonly activate!: pulumi.Output<boolean | undefined>;
    /**
     * Whether a specific firewall version is currently deployed
     */
    public /*out*/ readonly active!: pulumi.Output<boolean>;
    /**
     * Allowed HTTP versions
     */
    public readonly allowedHttpVersions!: pulumi.Output<string>;
    /**
     * A space-separated list of HTTP method names
     */
    public readonly allowedMethods!: pulumi.Output<string>;
    /**
     * Allowed request content types
     */
    public readonly allowedRequestContentType!: pulumi.Output<string>;
    /**
     * Allowed request content type charset
     */
    public readonly allowedRequestContentTypeCharset!: pulumi.Output<string>;
    /**
     * The maximum number of arguments allowed
     */
    public readonly argLength!: pulumi.Output<number>;
    /**
     * The maximum allowed argument name length
     */
    public readonly argNameLength!: pulumi.Output<number>;
    /**
     * The latest cloned firewall version by the provider
     */
    public /*out*/ readonly clonedVersion!: pulumi.Output<number>;
    /**
     * The maximum allowed size of all files
     */
    public readonly combinedFileSizes!: pulumi.Output<number>;
    /**
     * Score value to add for critical anomalies
     */
    public readonly criticalAnomalyScore!: pulumi.Output<number>;
    /**
     * CRS validate UTF8 encoding
     */
    public readonly crsValidateUtf8Encoding!: pulumi.Output<boolean>;
    /**
     * Score value to add for error anomalies
     */
    public readonly errorAnomalyScore!: pulumi.Output<number>;
    /**
     * A space-separated list of country codes in ISO 3166-1 (two-letter) format
     */
    public readonly highRiskCountryCodes!: pulumi.Output<string>;
    /**
     * HTTP violation threshold
     */
    public readonly httpViolationScoreThreshold!: pulumi.Output<number>;
    /**
     * Inbound anomaly threshold
     */
    public readonly inboundAnomalyScoreThreshold!: pulumi.Output<number>;
    /**
     * Local file inclusion attack threshold
     */
    public readonly lfiScoreThreshold!: pulumi.Output<number>;
    /**
     * The maximum allowed file size, in bytes
     */
    public readonly maxFileSize!: pulumi.Output<number>;
    /**
     * The maximum number of arguments allowed
     */
    public readonly maxNumArgs!: pulumi.Output<number>;
    /**
     * Score value to add for notice anomalies
     */
    public readonly noticeAnomalyScore!: pulumi.Output<number>;
    /**
     * The WAF firewall version
     */
    public /*out*/ readonly number!: pulumi.Output<number>;
    /**
     * The configured paranoia level
     */
    public readonly paranoiaLevel!: pulumi.Output<number>;
    /**
     * PHP injection threshold
     */
    public readonly phpInjectionScoreThreshold!: pulumi.Output<number>;
    /**
     * Remote code execution threshold
     */
    public readonly rceScoreThreshold!: pulumi.Output<number>;
    /**
     * A space-separated list of allowed file extensions
     */
    public readonly restrictedExtensions!: pulumi.Output<string>;
    /**
     * A space-separated list of allowed header names
     */
    public readonly restrictedHeaders!: pulumi.Output<string>;
    /**
     * Remote file inclusion attack threshold
     */
    public readonly rfiScoreThreshold!: pulumi.Output<number>;
    public readonly ruleExclusions!: pulumi.Output<outputs.ServiceWafConfigurationRuleExclusion[] | undefined>;
    public readonly rules!: pulumi.Output<outputs.ServiceWafConfigurationRule[] | undefined>;
    /**
     * Session fixation attack threshold
     */
    public readonly sessionFixationScoreThreshold!: pulumi.Output<number>;
    /**
     * SQL injection attack threshold
     */
    public readonly sqlInjectionScoreThreshold!: pulumi.Output<number>;
    /**
     * The maximum size of argument names and values
     */
    public readonly totalArgLength!: pulumi.Output<number>;
    /**
     * The ID of the Web Application Firewall that the configuration belongs to
     */
    public readonly wafId!: pulumi.Output<string>;
    /**
     * Score value to add for warning anomalies
     */
    public readonly warningAnomalyScore!: pulumi.Output<number>;
    /**
     * XSS attack threshold
     */
    public readonly xssScoreThreshold!: pulumi.Output<number>;

    /**
     * Create a ServiceWafConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceWafConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceWafConfigurationArgs | ServiceWafConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceWafConfigurationState | undefined;
            resourceInputs["activate"] = state ? state.activate : undefined;
            resourceInputs["active"] = state ? state.active : undefined;
            resourceInputs["allowedHttpVersions"] = state ? state.allowedHttpVersions : undefined;
            resourceInputs["allowedMethods"] = state ? state.allowedMethods : undefined;
            resourceInputs["allowedRequestContentType"] = state ? state.allowedRequestContentType : undefined;
            resourceInputs["allowedRequestContentTypeCharset"] = state ? state.allowedRequestContentTypeCharset : undefined;
            resourceInputs["argLength"] = state ? state.argLength : undefined;
            resourceInputs["argNameLength"] = state ? state.argNameLength : undefined;
            resourceInputs["clonedVersion"] = state ? state.clonedVersion : undefined;
            resourceInputs["combinedFileSizes"] = state ? state.combinedFileSizes : undefined;
            resourceInputs["criticalAnomalyScore"] = state ? state.criticalAnomalyScore : undefined;
            resourceInputs["crsValidateUtf8Encoding"] = state ? state.crsValidateUtf8Encoding : undefined;
            resourceInputs["errorAnomalyScore"] = state ? state.errorAnomalyScore : undefined;
            resourceInputs["highRiskCountryCodes"] = state ? state.highRiskCountryCodes : undefined;
            resourceInputs["httpViolationScoreThreshold"] = state ? state.httpViolationScoreThreshold : undefined;
            resourceInputs["inboundAnomalyScoreThreshold"] = state ? state.inboundAnomalyScoreThreshold : undefined;
            resourceInputs["lfiScoreThreshold"] = state ? state.lfiScoreThreshold : undefined;
            resourceInputs["maxFileSize"] = state ? state.maxFileSize : undefined;
            resourceInputs["maxNumArgs"] = state ? state.maxNumArgs : undefined;
            resourceInputs["noticeAnomalyScore"] = state ? state.noticeAnomalyScore : undefined;
            resourceInputs["number"] = state ? state.number : undefined;
            resourceInputs["paranoiaLevel"] = state ? state.paranoiaLevel : undefined;
            resourceInputs["phpInjectionScoreThreshold"] = state ? state.phpInjectionScoreThreshold : undefined;
            resourceInputs["rceScoreThreshold"] = state ? state.rceScoreThreshold : undefined;
            resourceInputs["restrictedExtensions"] = state ? state.restrictedExtensions : undefined;
            resourceInputs["restrictedHeaders"] = state ? state.restrictedHeaders : undefined;
            resourceInputs["rfiScoreThreshold"] = state ? state.rfiScoreThreshold : undefined;
            resourceInputs["ruleExclusions"] = state ? state.ruleExclusions : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["sessionFixationScoreThreshold"] = state ? state.sessionFixationScoreThreshold : undefined;
            resourceInputs["sqlInjectionScoreThreshold"] = state ? state.sqlInjectionScoreThreshold : undefined;
            resourceInputs["totalArgLength"] = state ? state.totalArgLength : undefined;
            resourceInputs["wafId"] = state ? state.wafId : undefined;
            resourceInputs["warningAnomalyScore"] = state ? state.warningAnomalyScore : undefined;
            resourceInputs["xssScoreThreshold"] = state ? state.xssScoreThreshold : undefined;
        } else {
            const args = argsOrState as ServiceWafConfigurationArgs | undefined;
            if ((!args || args.wafId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'wafId'");
            }
            resourceInputs["activate"] = args ? args.activate : undefined;
            resourceInputs["allowedHttpVersions"] = args ? args.allowedHttpVersions : undefined;
            resourceInputs["allowedMethods"] = args ? args.allowedMethods : undefined;
            resourceInputs["allowedRequestContentType"] = args ? args.allowedRequestContentType : undefined;
            resourceInputs["allowedRequestContentTypeCharset"] = args ? args.allowedRequestContentTypeCharset : undefined;
            resourceInputs["argLength"] = args ? args.argLength : undefined;
            resourceInputs["argNameLength"] = args ? args.argNameLength : undefined;
            resourceInputs["combinedFileSizes"] = args ? args.combinedFileSizes : undefined;
            resourceInputs["criticalAnomalyScore"] = args ? args.criticalAnomalyScore : undefined;
            resourceInputs["crsValidateUtf8Encoding"] = args ? args.crsValidateUtf8Encoding : undefined;
            resourceInputs["errorAnomalyScore"] = args ? args.errorAnomalyScore : undefined;
            resourceInputs["highRiskCountryCodes"] = args ? args.highRiskCountryCodes : undefined;
            resourceInputs["httpViolationScoreThreshold"] = args ? args.httpViolationScoreThreshold : undefined;
            resourceInputs["inboundAnomalyScoreThreshold"] = args ? args.inboundAnomalyScoreThreshold : undefined;
            resourceInputs["lfiScoreThreshold"] = args ? args.lfiScoreThreshold : undefined;
            resourceInputs["maxFileSize"] = args ? args.maxFileSize : undefined;
            resourceInputs["maxNumArgs"] = args ? args.maxNumArgs : undefined;
            resourceInputs["noticeAnomalyScore"] = args ? args.noticeAnomalyScore : undefined;
            resourceInputs["paranoiaLevel"] = args ? args.paranoiaLevel : undefined;
            resourceInputs["phpInjectionScoreThreshold"] = args ? args.phpInjectionScoreThreshold : undefined;
            resourceInputs["rceScoreThreshold"] = args ? args.rceScoreThreshold : undefined;
            resourceInputs["restrictedExtensions"] = args ? args.restrictedExtensions : undefined;
            resourceInputs["restrictedHeaders"] = args ? args.restrictedHeaders : undefined;
            resourceInputs["rfiScoreThreshold"] = args ? args.rfiScoreThreshold : undefined;
            resourceInputs["ruleExclusions"] = args ? args.ruleExclusions : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["sessionFixationScoreThreshold"] = args ? args.sessionFixationScoreThreshold : undefined;
            resourceInputs["sqlInjectionScoreThreshold"] = args ? args.sqlInjectionScoreThreshold : undefined;
            resourceInputs["totalArgLength"] = args ? args.totalArgLength : undefined;
            resourceInputs["wafId"] = args ? args.wafId : undefined;
            resourceInputs["warningAnomalyScore"] = args ? args.warningAnomalyScore : undefined;
            resourceInputs["xssScoreThreshold"] = args ? args.xssScoreThreshold : undefined;
            resourceInputs["active"] = undefined /*out*/;
            resourceInputs["clonedVersion"] = undefined /*out*/;
            resourceInputs["number"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceWafConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceWafConfiguration resources.
 */
export interface ServiceWafConfigurationState {
    /**
     * Conditionally prevents a new firewall version from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`
     */
    activate?: pulumi.Input<boolean>;
    /**
     * Whether a specific firewall version is currently deployed
     */
    active?: pulumi.Input<boolean>;
    /**
     * Allowed HTTP versions
     */
    allowedHttpVersions?: pulumi.Input<string>;
    /**
     * A space-separated list of HTTP method names
     */
    allowedMethods?: pulumi.Input<string>;
    /**
     * Allowed request content types
     */
    allowedRequestContentType?: pulumi.Input<string>;
    /**
     * Allowed request content type charset
     */
    allowedRequestContentTypeCharset?: pulumi.Input<string>;
    /**
     * The maximum number of arguments allowed
     */
    argLength?: pulumi.Input<number>;
    /**
     * The maximum allowed argument name length
     */
    argNameLength?: pulumi.Input<number>;
    /**
     * The latest cloned firewall version by the provider
     */
    clonedVersion?: pulumi.Input<number>;
    /**
     * The maximum allowed size of all files
     */
    combinedFileSizes?: pulumi.Input<number>;
    /**
     * Score value to add for critical anomalies
     */
    criticalAnomalyScore?: pulumi.Input<number>;
    /**
     * CRS validate UTF8 encoding
     */
    crsValidateUtf8Encoding?: pulumi.Input<boolean>;
    /**
     * Score value to add for error anomalies
     */
    errorAnomalyScore?: pulumi.Input<number>;
    /**
     * A space-separated list of country codes in ISO 3166-1 (two-letter) format
     */
    highRiskCountryCodes?: pulumi.Input<string>;
    /**
     * HTTP violation threshold
     */
    httpViolationScoreThreshold?: pulumi.Input<number>;
    /**
     * Inbound anomaly threshold
     */
    inboundAnomalyScoreThreshold?: pulumi.Input<number>;
    /**
     * Local file inclusion attack threshold
     */
    lfiScoreThreshold?: pulumi.Input<number>;
    /**
     * The maximum allowed file size, in bytes
     */
    maxFileSize?: pulumi.Input<number>;
    /**
     * The maximum number of arguments allowed
     */
    maxNumArgs?: pulumi.Input<number>;
    /**
     * Score value to add for notice anomalies
     */
    noticeAnomalyScore?: pulumi.Input<number>;
    /**
     * The WAF firewall version
     */
    number?: pulumi.Input<number>;
    /**
     * The configured paranoia level
     */
    paranoiaLevel?: pulumi.Input<number>;
    /**
     * PHP injection threshold
     */
    phpInjectionScoreThreshold?: pulumi.Input<number>;
    /**
     * Remote code execution threshold
     */
    rceScoreThreshold?: pulumi.Input<number>;
    /**
     * A space-separated list of allowed file extensions
     */
    restrictedExtensions?: pulumi.Input<string>;
    /**
     * A space-separated list of allowed header names
     */
    restrictedHeaders?: pulumi.Input<string>;
    /**
     * Remote file inclusion attack threshold
     */
    rfiScoreThreshold?: pulumi.Input<number>;
    ruleExclusions?: pulumi.Input<pulumi.Input<inputs.ServiceWafConfigurationRuleExclusion>[]>;
    rules?: pulumi.Input<pulumi.Input<inputs.ServiceWafConfigurationRule>[]>;
    /**
     * Session fixation attack threshold
     */
    sessionFixationScoreThreshold?: pulumi.Input<number>;
    /**
     * SQL injection attack threshold
     */
    sqlInjectionScoreThreshold?: pulumi.Input<number>;
    /**
     * The maximum size of argument names and values
     */
    totalArgLength?: pulumi.Input<number>;
    /**
     * The ID of the Web Application Firewall that the configuration belongs to
     */
    wafId?: pulumi.Input<string>;
    /**
     * Score value to add for warning anomalies
     */
    warningAnomalyScore?: pulumi.Input<number>;
    /**
     * XSS attack threshold
     */
    xssScoreThreshold?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ServiceWafConfiguration resource.
 */
export interface ServiceWafConfigurationArgs {
    /**
     * Conditionally prevents a new firewall version from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`
     */
    activate?: pulumi.Input<boolean>;
    /**
     * Allowed HTTP versions
     */
    allowedHttpVersions?: pulumi.Input<string>;
    /**
     * A space-separated list of HTTP method names
     */
    allowedMethods?: pulumi.Input<string>;
    /**
     * Allowed request content types
     */
    allowedRequestContentType?: pulumi.Input<string>;
    /**
     * Allowed request content type charset
     */
    allowedRequestContentTypeCharset?: pulumi.Input<string>;
    /**
     * The maximum number of arguments allowed
     */
    argLength?: pulumi.Input<number>;
    /**
     * The maximum allowed argument name length
     */
    argNameLength?: pulumi.Input<number>;
    /**
     * The maximum allowed size of all files
     */
    combinedFileSizes?: pulumi.Input<number>;
    /**
     * Score value to add for critical anomalies
     */
    criticalAnomalyScore?: pulumi.Input<number>;
    /**
     * CRS validate UTF8 encoding
     */
    crsValidateUtf8Encoding?: pulumi.Input<boolean>;
    /**
     * Score value to add for error anomalies
     */
    errorAnomalyScore?: pulumi.Input<number>;
    /**
     * A space-separated list of country codes in ISO 3166-1 (two-letter) format
     */
    highRiskCountryCodes?: pulumi.Input<string>;
    /**
     * HTTP violation threshold
     */
    httpViolationScoreThreshold?: pulumi.Input<number>;
    /**
     * Inbound anomaly threshold
     */
    inboundAnomalyScoreThreshold?: pulumi.Input<number>;
    /**
     * Local file inclusion attack threshold
     */
    lfiScoreThreshold?: pulumi.Input<number>;
    /**
     * The maximum allowed file size, in bytes
     */
    maxFileSize?: pulumi.Input<number>;
    /**
     * The maximum number of arguments allowed
     */
    maxNumArgs?: pulumi.Input<number>;
    /**
     * Score value to add for notice anomalies
     */
    noticeAnomalyScore?: pulumi.Input<number>;
    /**
     * The configured paranoia level
     */
    paranoiaLevel?: pulumi.Input<number>;
    /**
     * PHP injection threshold
     */
    phpInjectionScoreThreshold?: pulumi.Input<number>;
    /**
     * Remote code execution threshold
     */
    rceScoreThreshold?: pulumi.Input<number>;
    /**
     * A space-separated list of allowed file extensions
     */
    restrictedExtensions?: pulumi.Input<string>;
    /**
     * A space-separated list of allowed header names
     */
    restrictedHeaders?: pulumi.Input<string>;
    /**
     * Remote file inclusion attack threshold
     */
    rfiScoreThreshold?: pulumi.Input<number>;
    ruleExclusions?: pulumi.Input<pulumi.Input<inputs.ServiceWafConfigurationRuleExclusion>[]>;
    rules?: pulumi.Input<pulumi.Input<inputs.ServiceWafConfigurationRule>[]>;
    /**
     * Session fixation attack threshold
     */
    sessionFixationScoreThreshold?: pulumi.Input<number>;
    /**
     * SQL injection attack threshold
     */
    sqlInjectionScoreThreshold?: pulumi.Input<number>;
    /**
     * The maximum size of argument names and values
     */
    totalArgLength?: pulumi.Input<number>;
    /**
     * The ID of the Web Application Firewall that the configuration belongs to
     */
    wafId: pulumi.Input<string>;
    /**
     * Score value to add for warning anomalies
     */
    warningAnomalyScore?: pulumi.Input<number>;
    /**
     * XSS attack threshold
     */
    xssScoreThreshold?: pulumi.Input<number>;
}
