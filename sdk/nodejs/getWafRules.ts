// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWafRules(args?: GetWafRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetWafRulesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fastly:index/getWafRules:getWafRules", {
        "excludeModsecRuleIds": args.excludeModsecRuleIds,
        "modsecRuleIds": args.modsecRuleIds,
        "publishers": args.publishers,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getWafRules.
 */
export interface GetWafRulesArgs {
    /**
     * Exclusion filter by WAF rule's ModSecurity ID.
     */
    excludeModsecRuleIds?: number[];
    /**
     * A list of modsecurity rules IDs to be used as filters for the data set.
     */
    modsecRuleIds?: number[];
    /**
     * Inclusion filter by WAF rule's publishers.
     */
    publishers?: string[];
    /**
     * Inclusion filter by WAF rule's tags.
     */
    tags?: string[];
}

/**
 * A collection of values returned by getWafRules.
 */
export interface GetWafRulesResult {
    /**
     * A list of modsecurity rules IDs to be excluded from the data set.
     */
    readonly excludeModsecRuleIds?: number[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of modsecurity rules IDs to be used as filters for the data set.
     */
    readonly modsecRuleIds?: number[];
    /**
     * A list of publishers to be used as filters for the data set.
     */
    readonly publishers?: string[];
    /**
     * The list of rules that results from any given combination of filters.
     */
    readonly rules: outputs.GetWafRulesRule[];
    /**
     * A list of tags to be used as filters for the data set.
     */
    readonly tags?: string[];
}
export function getWafRulesOutput(args?: GetWafRulesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetWafRulesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("fastly:index/getWafRules:getWafRules", {
        "excludeModsecRuleIds": args.excludeModsecRuleIds,
        "modsecRuleIds": args.modsecRuleIds,
        "publishers": args.publishers,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getWafRules.
 */
export interface GetWafRulesOutputArgs {
    /**
     * Exclusion filter by WAF rule's ModSecurity ID.
     */
    excludeModsecRuleIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * A list of modsecurity rules IDs to be used as filters for the data set.
     */
    modsecRuleIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Inclusion filter by WAF rule's publishers.
     */
    publishers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Inclusion filter by WAF rule's tags.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
