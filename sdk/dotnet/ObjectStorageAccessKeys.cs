// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly
{
    /// <summary>
    /// Provides an Object Storage Access Key, which can be used to manage resources in various clouds.
    /// 
    /// Implements the [Object Storage Access Key API functions](https://www.fastly.com/documentation/reference/api/services/resources/object-storage-access-keys/)
    /// 
    /// &gt; **Note:** Access Keys cannot be updated, so when you change a value in any of the editable fields the key is destroyed and remade
    /// 
    /// Basic usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fastly = Pulumi.Fastly;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var demo = new Fastly.ObjectStorageAccessKeys("demo", new()
    ///     {
    ///         Buckets = new[]
    ///         {
    ///             "bucket1",
    ///             "bucket2",
    ///         },
    ///         Description = "this is a bucket",
    ///         Permission = "",
    ///     });
    /// 
    /// });
    /// ```
    /// &gt; **Note:** Permissions can only be one of these values listed [here](https://quic.fastly.com/documentation/reference/api/services/resources/object-storage-access-keys/#permissions), any other values will return an error
    /// </summary>
    [FastlyResourceType("fastly:index/objectStorageAccessKeys:ObjectStorageAccessKeys")]
    public partial class ObjectStorageAccessKeys : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID for the object storage access token
        /// </summary>
        [Output("accessKeyId")]
        public Output<string> AccessKeyId { get; private set; } = null!;

        /// <summary>
        /// Optional list of buckets the access key will be associated with.  Example: `["bucket1", "bucket2"]`
        /// </summary>
        [Output("buckets")]
        public Output<ImmutableArray<string>> Buckets { get; private set; } = null!;

        /// <summary>
        /// The description of the access key
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The permissions of the access key
        /// </summary>
        [Output("permission")]
        public Output<string> Permission { get; private set; } = null!;

        /// <summary>
        /// Secret key for the object storage access token
        /// </summary>
        [Output("secretKey")]
        public Output<string> SecretKey { get; private set; } = null!;


        /// <summary>
        /// Create a ObjectStorageAccessKeys resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ObjectStorageAccessKeys(string name, ObjectStorageAccessKeysArgs args, CustomResourceOptions? options = null)
            : base("fastly:index/objectStorageAccessKeys:ObjectStorageAccessKeys", name, args ?? new ObjectStorageAccessKeysArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ObjectStorageAccessKeys(string name, Input<string> id, ObjectStorageAccessKeysState? state = null, CustomResourceOptions? options = null)
            : base("fastly:index/objectStorageAccessKeys:ObjectStorageAccessKeys", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "secretKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ObjectStorageAccessKeys resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ObjectStorageAccessKeys Get(string name, Input<string> id, ObjectStorageAccessKeysState? state = null, CustomResourceOptions? options = null)
        {
            return new ObjectStorageAccessKeys(name, id, state, options);
        }
    }

    public sealed class ObjectStorageAccessKeysArgs : global::Pulumi.ResourceArgs
    {
        [Input("buckets")]
        private InputList<string>? _buckets;

        /// <summary>
        /// Optional list of buckets the access key will be associated with.  Example: `["bucket1", "bucket2"]`
        /// </summary>
        public InputList<string> Buckets
        {
            get => _buckets ?? (_buckets = new InputList<string>());
            set => _buckets = value;
        }

        /// <summary>
        /// The description of the access key
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// The permissions of the access key
        /// </summary>
        [Input("permission", required: true)]
        public Input<string> Permission { get; set; } = null!;

        public ObjectStorageAccessKeysArgs()
        {
        }
        public static new ObjectStorageAccessKeysArgs Empty => new ObjectStorageAccessKeysArgs();
    }

    public sealed class ObjectStorageAccessKeysState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID for the object storage access token
        /// </summary>
        [Input("accessKeyId")]
        public Input<string>? AccessKeyId { get; set; }

        [Input("buckets")]
        private InputList<string>? _buckets;

        /// <summary>
        /// Optional list of buckets the access key will be associated with.  Example: `["bucket1", "bucket2"]`
        /// </summary>
        public InputList<string> Buckets
        {
            get => _buckets ?? (_buckets = new InputList<string>());
            set => _buckets = value;
        }

        /// <summary>
        /// The description of the access key
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The permissions of the access key
        /// </summary>
        [Input("permission")]
        public Input<string>? Permission { get; set; }

        [Input("secretKey")]
        private Input<string>? _secretKey;

        /// <summary>
        /// Secret key for the object storage access token
        /// </summary>
        public Input<string>? SecretKey
        {
            get => _secretKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secretKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public ObjectStorageAccessKeysState()
        {
        }
        public static new ObjectStorageAccessKeysState Empty => new ObjectStorageAccessKeysState();
    }
}
