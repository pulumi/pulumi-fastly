// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly.Outputs
{

    [OutputType]
    public sealed class Servicev1LoggingFtp
    {
        /// <summary>
        /// The FTP address to stream logs to
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// Apache-style string or VCL variables to use for log formatting.
        /// </summary>
        public readonly string? Format;
        /// <summary>
        /// The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2).
        /// </summary>
        public readonly int? FormatVersion;
        /// <summary>
        /// Gzip Compression level. Default `0`
        /// </summary>
        public readonly int? GzipLevel;
        /// <summary>
        /// How the message should be formatted (default: `classic`)
        /// </summary>
        public readonly string? MessageType;
        /// <summary>
        /// The unique name of the FTP logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The password for the server (for anonymous use an email address)
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// The path to upload log files to. If the path ends in `/` then it is treated as a directory
        /// </summary>
        public readonly string Path;
        /// <summary>
        /// How frequently the logs should be transferred, in seconds (Default `3600`)
        /// </summary>
        public readonly int? Period;
        /// <summary>
        /// Where in the generated VCL the logging call should be placed.
        /// </summary>
        public readonly string? Placement;
        /// <summary>
        /// The port number. Default: `21`
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// The PGP public key that Fastly will use to encrypt your log files before writing them to disk
        /// </summary>
        public readonly string? PublicKey;
        /// <summary>
        /// The name of the condition to apply.
        /// </summary>
        public readonly string? ResponseCondition;
        /// <summary>
        /// specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)
        /// </summary>
        public readonly string? TimestampFormat;
        /// <summary>
        /// The username for the server (can be `anonymous`)
        /// </summary>
        public readonly string User;

        [OutputConstructor]
        private Servicev1LoggingFtp(
            string address,

            string? format,

            int? formatVersion,

            int? gzipLevel,

            string? messageType,

            string name,

            string password,

            string path,

            int? period,

            string? placement,

            int? port,

            string? publicKey,

            string? responseCondition,

            string? timestampFormat,

            string user)
        {
            Address = address;
            Format = format;
            FormatVersion = formatVersion;
            GzipLevel = gzipLevel;
            MessageType = messageType;
            Name = name;
            Password = password;
            Path = path;
            Period = period;
            Placement = placement;
            Port = port;
            PublicKey = publicKey;
            ResponseCondition = responseCondition;
            TimestampFormat = timestampFormat;
            User = user;
        }
    }
}
