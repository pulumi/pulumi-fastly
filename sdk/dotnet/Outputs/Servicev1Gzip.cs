// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly.Outputs
{

    [OutputType]
    public sealed class Servicev1Gzip
    {
        /// <summary>
        /// Name of already defined `condition` to check after we have retrieved an object. If the condition passes then deliver this Request Object instead. This `condition` must be of type `CACHE`. For detailed information about Conditionals,
        /// see [Fastly's Documentation on Conditionals][fastly-conditionals].
        /// </summary>
        public readonly string? CacheCondition;
        /// <summary>
        /// The content-type for each type of content you wish to
        /// have dynamically gzip'ed. Example: `["text/html", "text/css"]`.
        /// </summary>
        public readonly ImmutableArray<string> ContentTypes;
        /// <summary>
        /// File extensions for each file type to dynamically
        /// gzip. Example: `["css", "js"]`.
        /// </summary>
        public readonly ImmutableArray<string> Extensions;
        /// <summary>
        /// A unique name to identify this dictionary.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private Servicev1Gzip(
            string? cacheCondition,

            ImmutableArray<string> contentTypes,

            ImmutableArray<string> extensions,

            string name)
        {
            CacheCondition = cacheCondition;
            ContentTypes = contentTypes;
            Extensions = extensions;
            Name = name;
        }
    }
}
