// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly.Outputs
{

    [OutputType]
    public sealed class ServiceVclCacheSetting
    {
        /// <summary>
        /// One of cache, pass, or restart, as defined on Fastly's documentation under "[Caching action descriptions](https://docs.fastly.com/en/guides/controlling-caching#caching-action-descriptions)"
        /// </summary>
        public readonly string? Action;
        /// <summary>
        /// Name of already defined `Condition` used to test whether this settings object should be used. This `Condition` must be of type `CACHE`
        /// </summary>
        public readonly string? CacheCondition;
        /// <summary>
        /// Unique name for this Cache Setting. It is important to note that changing this attribute will delete and recreate the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Max "Time To Live" for stale (unreachable) objects
        /// </summary>
        public readonly int? StaleTtl;
        /// <summary>
        /// The Time-To-Live (TTL) for the object
        /// </summary>
        public readonly int? Ttl;

        [OutputConstructor]
        private ServiceVclCacheSetting(
            string? action,

            string? cacheCondition,

            string name,

            int? staleTtl,

            int? ttl)
        {
            Action = action;
            CacheCondition = cacheCondition;
            Name = name;
            StaleTtl = staleTtl;
            Ttl = ttl;
        }
    }
}
