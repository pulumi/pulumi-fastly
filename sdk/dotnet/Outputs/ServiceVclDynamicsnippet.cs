// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly.Outputs
{

    [OutputType]
    public sealed class ServiceVclDynamicsnippet
    {
        /// <summary>
        /// The VCL code that specifies exactly what the snippet does
        /// </summary>
        public readonly string? Content;
        /// <summary>
        /// A name that is unique across "regular" and "dynamic" VCL Snippet configuration blocks. It is important to note that changing this attribute will delete and recreate the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Priority determines the ordering for multiple snippets. Lower numbers execute first. Defaults to `100`
        /// </summary>
        public readonly int? Priority;
        /// <summary>
        /// The ID of the dynamic snippet
        /// </summary>
        public readonly string? SnippetId;
        /// <summary>
        /// The location in generated VCL where the snippet should be placed (can be one of `Init`, `Recv`, `Hash`, `Hit`, `Miss`, `Pass`, `Fetch`, `Error`, `Deliver`, `Log` or `None`)
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ServiceVclDynamicsnippet(
            string? content,

            string name,

            int? priority,

            string? snippetId,

            string type)
        {
            Content = content;
            Name = name;
            Priority = priority;
            SnippetId = snippetId;
            Type = type;
        }
    }
}
