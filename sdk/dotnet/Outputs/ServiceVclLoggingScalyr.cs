// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly.Outputs
{

    [OutputType]
    public sealed class ServiceVclLoggingScalyr
    {
        /// <summary>
        /// Apache style log formatting.
        /// </summary>
        public readonly string? Format;
        /// <summary>
        /// The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2).
        /// </summary>
        public readonly int? FormatVersion;
        /// <summary>
        /// The unique name of the Scalyr logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Where in the generated VCL the logging call should be placed.
        /// </summary>
        public readonly string? Placement;
        /// <summary>
        /// The name of the logfile field sent to Scalyr
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// The region that log data will be sent to. One of `US` or `EU`. Defaults to `US` if undefined
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// The name of an existing condition in the configured endpoint, or leave blank to always execute.
        /// </summary>
        public readonly string? ResponseCondition;
        /// <summary>
        /// The token to use for authentication (https://www.scalyr.com/keys)
        /// </summary>
        public readonly string Token;

        [OutputConstructor]
        private ServiceVclLoggingScalyr(
            string? format,

            int? formatVersion,

            string name,

            string? placement,

            string? projectId,

            string? region,

            string? responseCondition,

            string token)
        {
            Format = format;
            FormatVersion = formatVersion;
            Name = name;
            Placement = placement;
            ProjectId = projectId;
            Region = region;
            ResponseCondition = responseCondition;
            Token = token;
        }
    }
}
