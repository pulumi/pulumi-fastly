// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly.Outputs
{

    [OutputType]
    public sealed class ServiceVclRateLimiter
    {
        /// <summary>
        /// The action to take when a rate limiter violation is detected (one of: log*only, log*only, response_object)
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// Comma-separated list of VCL variables used to generate a counter key to identify a client
        /// </summary>
        public readonly string ClientKey;
        /// <summary>
        /// Revision number of the rate limiting feature implementation
        /// </summary>
        public readonly int? FeatureRevision;
        /// <summary>
        /// Comma-separated list of HTTP methods to apply rate limiting to
        /// </summary>
        public readonly string HttpMethods;
        /// <summary>
        /// Name of the type of logging endpoint to be used when action is log_only (one of: azureblob, bigquery, cloudfiles, datadog, digitalocean, elasticsearch, ftp, gcs, googleanalytics, heroku, honeycomb, http, https, kafka, kinesis, logentries, loggly, logshuttle, newrelic, openstack, papertrail, pubsub, s3, scalyr, sftp, splunk, stackdriver, sumologic, syslog)
        /// </summary>
        public readonly string? LoggerType;
        /// <summary>
        /// A unique human readable name for the rate limiting rule
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Length of time in minutes that the rate limiter is in effect after the initial violation is detected
        /// </summary>
        public readonly int PenaltyBoxDuration;
        /// <summary>
        /// Alphanumeric string identifying the rate limiter
        /// </summary>
        public readonly string? RatelimiterId;
        /// <summary>
        /// Custom response to be sent when the rate limit is exceeded. Required if action is response
        /// </summary>
        public readonly Outputs.ServiceVclRateLimiterResponse? Response;
        /// <summary>
        /// Name of existing response object. Required if action is response_object
        /// </summary>
        public readonly string? ResponseObjectName;
        /// <summary>
        /// Upper limit of requests per second allowed by the rate limiter
        /// </summary>
        public readonly int RpsLimit;
        /// <summary>
        /// The name of an Edge Dictionary containing URIs as keys. If not defined or null, all origin URIs will be rate limited
        /// </summary>
        public readonly string? UriDictionaryName;
        /// <summary>
        /// Number of seconds during which the RPS limit must be exceeded in order to trigger a violation (one of: 1, 10, 60)
        /// </summary>
        public readonly int WindowSize;

        [OutputConstructor]
        private ServiceVclRateLimiter(
            string action,

            string clientKey,

            int? featureRevision,

            string httpMethods,

            string? loggerType,

            string name,

            int penaltyBoxDuration,

            string? ratelimiterId,

            Outputs.ServiceVclRateLimiterResponse? response,

            string? responseObjectName,

            int rpsLimit,

            string? uriDictionaryName,

            int windowSize)
        {
            Action = action;
            ClientKey = clientKey;
            FeatureRevision = featureRevision;
            HttpMethods = httpMethods;
            LoggerType = loggerType;
            Name = name;
            PenaltyBoxDuration = penaltyBoxDuration;
            RatelimiterId = ratelimiterId;
            Response = response;
            ResponseObjectName = responseObjectName;
            RpsLimit = rpsLimit;
            UriDictionaryName = uriDictionaryName;
            WindowSize = windowSize;
        }
    }
}
