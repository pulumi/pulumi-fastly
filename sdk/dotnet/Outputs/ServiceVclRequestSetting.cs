// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly.Outputs
{

    [OutputType]
    public sealed class ServiceVclRequestSetting
    {
        /// <summary>
        /// Allows you to terminate request handling and immediately perform an action. When set it can be `lookup` or `pass` (Ignore the cache completely)
        /// </summary>
        public readonly string? Action;
        /// <summary>
        /// Disable collapsed forwarding, so you don't wait for other objects to origin
        /// </summary>
        public readonly bool? BypassBusyWait;
        /// <summary>
        /// Sets the host header
        /// </summary>
        public readonly string? DefaultHost;
        /// <summary>
        /// Force a cache miss for the request. If specified, can be `true` or `false`
        /// </summary>
        public readonly bool? ForceMiss;
        /// <summary>
        /// Forces the request to use SSL (Redirects a non-SSL request to SSL)
        /// </summary>
        public readonly bool? ForceSsl;
        /// <summary>
        /// Comma separated list of varnish request object fields that should be in the hash key
        /// </summary>
        public readonly string? HashKeys;
        /// <summary>
        /// How old an object is allowed to be to serve `stale-if-error` or `stale-while-revalidate`, in seconds
        /// </summary>
        public readonly int? MaxStaleAge;
        /// <summary>
        /// Unique name to refer to this Request Setting. It is important to note that changing this attribute will delete and recreate the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Name of already defined `condition` to determine if this request setting should be applied (should be unique across multiple instances of `request_setting`)
        /// </summary>
        public readonly string? RequestCondition;
        /// <summary>
        /// Injects the X-Timer info into the request for viewing origin fetch durations
        /// </summary>
        public readonly bool? TimerSupport;
        /// <summary>
        /// X-Forwarded-For, should be `clear`, `leave`, `append`, `append_all`, or `overwrite`. Default `append`
        /// </summary>
        public readonly string? Xff;

        [OutputConstructor]
        private ServiceVclRequestSetting(
            string? action,

            bool? bypassBusyWait,

            string? defaultHost,

            bool? forceMiss,

            bool? forceSsl,

            string? hashKeys,

            int? maxStaleAge,

            string name,

            string? requestCondition,

            bool? timerSupport,

            string? xff)
        {
            Action = action;
            BypassBusyWait = bypassBusyWait;
            DefaultHost = defaultHost;
            ForceMiss = forceMiss;
            ForceSsl = forceSsl;
            HashKeys = hashKeys;
            MaxStaleAge = maxStaleAge;
            Name = name;
            RequestCondition = requestCondition;
            TimerSupport = timerSupport;
            Xff = xff;
        }
    }
}
