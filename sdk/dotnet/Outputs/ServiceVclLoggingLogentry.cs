// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly.Outputs
{

    [OutputType]
    public sealed class ServiceVclLoggingLogentry
    {
        /// <summary>
        /// Apache-style string or VCL variables to use for log formatting
        /// </summary>
        public readonly string? Format;
        /// <summary>
        /// The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (Default: 2)
        /// </summary>
        public readonly int? FormatVersion;
        /// <summary>
        /// The unique name of the Logentries logging endpoint. It is important to note that changing this attribute will delete and recreate the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Where in the generated VCL the logging call should be placed (ignored).
        /// </summary>
        public readonly string? Placement;
        /// <summary>
        /// The port number configured in Logentries
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// Name of blockAttributes condition to apply this logging.
        /// </summary>
        public readonly string? ResponseCondition;
        /// <summary>
        /// Use token based authentication (https://logentries.com/doc/input-token/)
        /// </summary>
        public readonly string Token;
        /// <summary>
        /// Whether to use TLS for secure logging
        /// </summary>
        public readonly bool? UseTls;

        [OutputConstructor]
        private ServiceVclLoggingLogentry(
            string? format,

            int? formatVersion,

            string name,

            string? placement,

            int? port,

            string? responseCondition,

            string token,

            bool? useTls)
        {
            Format = format;
            FormatVersion = formatVersion;
            Name = name;
            Placement = placement;
            Port = port;
            ResponseCondition = responseCondition;
            Token = token;
            UseTls = useTls;
        }
    }
}
