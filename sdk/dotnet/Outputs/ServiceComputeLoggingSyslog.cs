// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly.Outputs
{

    [OutputType]
    public sealed class ServiceComputeLoggingSyslog
    {
        /// <summary>
        /// A hostname or IPv4 address of the Syslog endpoint
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// How the message should be formatted. Can be either `Classic`, `Loggly`, `Logplex` or `Blank`. Default is `Classic`
        /// </summary>
        public readonly string? MessageType;
        /// <summary>
        /// A unique name to identify this Syslog endpoint. It is important to note that changing this attribute will delete and recreate the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The port associated with the address where the Syslog endpoint can be accessed. Default `514`
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// Region where logs will be processed before streaming to BigQuery. Valid values are 'none', 'us' and 'eu'.
        /// </summary>
        public readonly string? ProcessingRegion;
        /// <summary>
        /// A secure certificate to authenticate the server with. Must be in PEM format. You can provide this certificate via an environment variable, `FASTLY_SYSLOG_CA_CERT`
        /// </summary>
        public readonly string? TlsCaCert;
        /// <summary>
        /// The client certificate used to make authenticated requests. Must be in PEM format. You can provide this certificate via an environment variable, `FASTLY_SYSLOG_CLIENT_CERT`
        /// </summary>
        public readonly string? TlsClientCert;
        /// <summary>
        /// The client private key used to make authenticated requests. Must be in PEM format. You can provide this key via an environment variable, `FASTLY_SYSLOG_CLIENT_KEY`
        /// </summary>
        public readonly string? TlsClientKey;
        /// <summary>
        /// Used during the TLS handshake to validate the certificate
        /// </summary>
        public readonly string? TlsHostname;
        /// <summary>
        /// Whether to prepend each message with a specific token
        /// </summary>
        public readonly string? Token;
        /// <summary>
        /// Whether to use TLS for secure logging. Default `False`
        /// </summary>
        public readonly bool? UseTls;

        [OutputConstructor]
        private ServiceComputeLoggingSyslog(
            string address,

            string? messageType,

            string name,

            int? port,

            string? processingRegion,

            string? tlsCaCert,

            string? tlsClientCert,

            string? tlsClientKey,

            string? tlsHostname,

            string? token,

            bool? useTls)
        {
            Address = address;
            MessageType = messageType;
            Name = name;
            Port = port;
            ProcessingRegion = processingRegion;
            TlsCaCert = tlsCaCert;
            TlsClientCert = tlsClientCert;
            TlsClientKey = tlsClientKey;
            TlsHostname = tlsHostname;
            Token = token;
            UseTls = useTls;
        }
    }
}
