// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly.Outputs
{

    [OutputType]
    public sealed class CustomDashboardDashboardItem
    {
        /// <summary>
        /// An object which describes the data to display.
        /// </summary>
        public readonly Outputs.CustomDashboardDashboardItemDataSource DataSource;
        /// <summary>
        /// Dashboard item identifier (alphanumeric). Must be unique, relative to other items in the same dashboard.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The number of columns for the dashboard item to span. Dashboards are rendered on a 12-column grid on "desktop" screen sizes.
        /// </summary>
        public readonly int? Span;
        /// <summary>
        /// A human-readable subtitle for the dashboard item. Often a description of the visualization.
        /// </summary>
        public readonly string Subtitle;
        /// <summary>
        /// A human-readable title for the dashboard item.
        /// </summary>
        public readonly string Title;
        /// <summary>
        /// An object which describes the data visualization to display.
        /// </summary>
        public readonly Outputs.CustomDashboardDashboardItemVisualization Visualization;

        [OutputConstructor]
        private CustomDashboardDashboardItem(
            Outputs.CustomDashboardDashboardItemDataSource dataSource,

            string id,

            int? span,

            string subtitle,

            string title,

            Outputs.CustomDashboardDashboardItemVisualization visualization)
        {
            DataSource = dataSource;
            Id = id;
            Span = span;
            Subtitle = subtitle;
            Title = title;
            Visualization = visualization;
        }
    }
}
