// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly
{
    public static class GetNgwafAlertSlackIntegration
    {
        /// <summary>
        /// Use this data source to get a Fastly Next-Gen WAF Alert Slack integration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fastly = Pulumi.Fastly;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ngwafSlackAlerts = Fastly.GetNgwafAlertSlackIntegration.Invoke(new()
        ///     {
        ///         WorkspaceId = example.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["ngwafSlackAlertsAll"] = ngwafSlackAlerts,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetNgwafAlertSlackIntegrationResult> InvokeAsync(GetNgwafAlertSlackIntegrationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNgwafAlertSlackIntegrationResult>("fastly:index/getNgwafAlertSlackIntegration:getNgwafAlertSlackIntegration", args ?? new GetNgwafAlertSlackIntegrationArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get a Fastly Next-Gen WAF Alert Slack integration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fastly = Pulumi.Fastly;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ngwafSlackAlerts = Fastly.GetNgwafAlertSlackIntegration.Invoke(new()
        ///     {
        ///         WorkspaceId = example.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["ngwafSlackAlertsAll"] = ngwafSlackAlerts,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetNgwafAlertSlackIntegrationResult> Invoke(GetNgwafAlertSlackIntegrationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNgwafAlertSlackIntegrationResult>("fastly:index/getNgwafAlertSlackIntegration:getNgwafAlertSlackIntegration", args ?? new GetNgwafAlertSlackIntegrationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get a Fastly Next-Gen WAF Alert Slack integration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fastly = Pulumi.Fastly;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ngwafSlackAlerts = Fastly.GetNgwafAlertSlackIntegration.Invoke(new()
        ///     {
        ///         WorkspaceId = example.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["ngwafSlackAlertsAll"] = ngwafSlackAlerts,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetNgwafAlertSlackIntegrationResult> Invoke(GetNgwafAlertSlackIntegrationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNgwafAlertSlackIntegrationResult>("fastly:index/getNgwafAlertSlackIntegration:getNgwafAlertSlackIntegration", args ?? new GetNgwafAlertSlackIntegrationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNgwafAlertSlackIntegrationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the workspace.
        /// </summary>
        [Input("workspaceId", required: true)]
        public string WorkspaceId { get; set; } = null!;

        public GetNgwafAlertSlackIntegrationArgs()
        {
        }
        public static new GetNgwafAlertSlackIntegrationArgs Empty => new GetNgwafAlertSlackIntegrationArgs();
    }

    public sealed class GetNgwafAlertSlackIntegrationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the workspace.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public GetNgwafAlertSlackIntegrationInvokeArgs()
        {
        }
        public static new GetNgwafAlertSlackIntegrationInvokeArgs Empty => new GetNgwafAlertSlackIntegrationInvokeArgs();
    }


    [OutputType]
    public sealed class GetNgwafAlertSlackIntegrationResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of all Slack alerts for a workspace.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNgwafAlertSlackIntegrationSlackAlertResult> SlackAlerts;
        /// <summary>
        /// The ID of the workspace.
        /// </summary>
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetNgwafAlertSlackIntegrationResult(
            string id,

            ImmutableArray<Outputs.GetNgwafAlertSlackIntegrationSlackAlertResult> slackAlerts,

            string workspaceId)
        {
            Id = id;
            SlackAlerts = slackAlerts;
            WorkspaceId = workspaceId;
        }
    }
}
