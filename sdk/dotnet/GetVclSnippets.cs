// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly
{
    public static class GetVclSnippets
    {
        /// <summary>
        /// VCL Snippets are blocks of VCL logic inserted into your service's configuration that don't require custom VCL.
        /// 
        /// Use this data source to get a list of [Fastly VCL Snippets](https://www.fastly.com/documentation/reference/api/vcl-services/snippet/) for the specified service/version.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fastly = Pulumi.Fastly;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleServiceVcl = new Fastly.ServiceVcl("example", new()
        ///     {
        ///         Name = "Example Service",
        ///         Domains = new[]
        ///         {
        ///             new Fastly.Inputs.ServiceVclDomainArgs
        ///             {
        ///                 Name = "example.com",
        ///             },
        ///         },
        ///         ForceDestroy = true,
        ///     });
        /// 
        ///     var example = Fastly.GetVclSnippets.Invoke(new()
        ///     {
        ///         ServiceId = exampleServiceVcl.Id,
        ///         ServiceVersion = exampleServiceVcl.ActiveVersion,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["serviceVclSnippets"] = example,
        ///     };
        /// });
        /// ```
        /// 
        /// [1]: https://www.fastly.com/documentation/reference/api/vcl-services/snippet/
        /// </summary>
        public static Task<GetVclSnippetsResult> InvokeAsync(GetVclSnippetsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVclSnippetsResult>("fastly:index/getVclSnippets:getVclSnippets", args ?? new GetVclSnippetsArgs(), options.WithDefaults());

        /// <summary>
        /// VCL Snippets are blocks of VCL logic inserted into your service's configuration that don't require custom VCL.
        /// 
        /// Use this data source to get a list of [Fastly VCL Snippets](https://www.fastly.com/documentation/reference/api/vcl-services/snippet/) for the specified service/version.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fastly = Pulumi.Fastly;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleServiceVcl = new Fastly.ServiceVcl("example", new()
        ///     {
        ///         Name = "Example Service",
        ///         Domains = new[]
        ///         {
        ///             new Fastly.Inputs.ServiceVclDomainArgs
        ///             {
        ///                 Name = "example.com",
        ///             },
        ///         },
        ///         ForceDestroy = true,
        ///     });
        /// 
        ///     var example = Fastly.GetVclSnippets.Invoke(new()
        ///     {
        ///         ServiceId = exampleServiceVcl.Id,
        ///         ServiceVersion = exampleServiceVcl.ActiveVersion,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["serviceVclSnippets"] = example,
        ///     };
        /// });
        /// ```
        /// 
        /// [1]: https://www.fastly.com/documentation/reference/api/vcl-services/snippet/
        /// </summary>
        public static Output<GetVclSnippetsResult> Invoke(GetVclSnippetsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVclSnippetsResult>("fastly:index/getVclSnippets:getVclSnippets", args ?? new GetVclSnippetsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// VCL Snippets are blocks of VCL logic inserted into your service's configuration that don't require custom VCL.
        /// 
        /// Use this data source to get a list of [Fastly VCL Snippets](https://www.fastly.com/documentation/reference/api/vcl-services/snippet/) for the specified service/version.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fastly = Pulumi.Fastly;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleServiceVcl = new Fastly.ServiceVcl("example", new()
        ///     {
        ///         Name = "Example Service",
        ///         Domains = new[]
        ///         {
        ///             new Fastly.Inputs.ServiceVclDomainArgs
        ///             {
        ///                 Name = "example.com",
        ///             },
        ///         },
        ///         ForceDestroy = true,
        ///     });
        /// 
        ///     var example = Fastly.GetVclSnippets.Invoke(new()
        ///     {
        ///         ServiceId = exampleServiceVcl.Id,
        ///         ServiceVersion = exampleServiceVcl.ActiveVersion,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["serviceVclSnippets"] = example,
        ///     };
        /// });
        /// ```
        /// 
        /// [1]: https://www.fastly.com/documentation/reference/api/vcl-services/snippet/
        /// </summary>
        public static Output<GetVclSnippetsResult> Invoke(GetVclSnippetsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVclSnippetsResult>("fastly:index/getVclSnippets:getVclSnippets", args ?? new GetVclSnippetsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVclSnippetsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Alphanumeric string identifying the service.
        /// </summary>
        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        /// <summary>
        /// Integer identifying a service version.
        /// </summary>
        [Input("serviceVersion", required: true)]
        public int ServiceVersion { get; set; }

        public GetVclSnippetsArgs()
        {
        }
        public static new GetVclSnippetsArgs Empty => new GetVclSnippetsArgs();
    }

    public sealed class GetVclSnippetsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Alphanumeric string identifying the service.
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        /// <summary>
        /// Integer identifying a service version.
        /// </summary>
        [Input("serviceVersion", required: true)]
        public Input<int> ServiceVersion { get; set; } = null!;

        public GetVclSnippetsInvokeArgs()
        {
        }
        public static new GetVclSnippetsInvokeArgs Empty => new GetVclSnippetsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVclSnippetsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Alphanumeric string identifying the service.
        /// </summary>
        public readonly string ServiceId;
        /// <summary>
        /// Integer identifying a service version.
        /// </summary>
        public readonly int ServiceVersion;
        /// <summary>
        /// List of all VCL snippets for the version of the service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVclSnippetsVclSnippetResult> VclSnippets;

        [OutputConstructor]
        private GetVclSnippetsResult(
            string id,

            string serviceId,

            int serviceVersion,

            ImmutableArray<Outputs.GetVclSnippetsVclSnippetResult> vclSnippets)
        {
            Id = id;
            ServiceId = serviceId;
            ServiceVersion = serviceVersion;
            VclSnippets = vclSnippets;
        }
    }
}
