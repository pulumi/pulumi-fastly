// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly
{
    /// <summary>
    /// This resource represents a successful validation of a Fastly TLS Subscription in concert with other resources.
    /// 
    /// Most commonly, this resource is used together with a resource for a DNS record and `fastly.TlsSubscription` to request a DNS validated certificate, deploy the required validation records and wait for validation to complete.
    /// 
    /// &gt; **Warning:** This resource implements a part of the validation workflow. It does not represent a real-world entity in Fastly, therefore changing or deleting this resource on its own has no immediate effect.
    /// </summary>
    [FastlyResourceType("fastly:index/tlsSubscriptionValidation:TlsSubscriptionValidation")]
    public partial class TlsSubscriptionValidation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the TLS Subscription that should be validated.
        /// </summary>
        [Output("subscriptionId")]
        public Output<string> SubscriptionId { get; private set; } = null!;


        /// <summary>
        /// Create a TlsSubscriptionValidation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TlsSubscriptionValidation(string name, TlsSubscriptionValidationArgs args, CustomResourceOptions? options = null)
            : base("fastly:index/tlsSubscriptionValidation:TlsSubscriptionValidation", name, args ?? new TlsSubscriptionValidationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TlsSubscriptionValidation(string name, Input<string> id, TlsSubscriptionValidationState? state = null, CustomResourceOptions? options = null)
            : base("fastly:index/tlsSubscriptionValidation:TlsSubscriptionValidation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TlsSubscriptionValidation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TlsSubscriptionValidation Get(string name, Input<string> id, TlsSubscriptionValidationState? state = null, CustomResourceOptions? options = null)
        {
            return new TlsSubscriptionValidation(name, id, state, options);
        }
    }

    public sealed class TlsSubscriptionValidationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the TLS Subscription that should be validated.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        public TlsSubscriptionValidationArgs()
        {
        }
        public static new TlsSubscriptionValidationArgs Empty => new TlsSubscriptionValidationArgs();
    }

    public sealed class TlsSubscriptionValidationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the TLS Subscription that should be validated.
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        public TlsSubscriptionValidationState()
        {
        }
        public static new TlsSubscriptionValidationState Empty => new TlsSubscriptionValidationState();
    }
}
