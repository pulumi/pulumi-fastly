// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly
{
    public static class GetDictionaries
    {
        /// <summary>
        /// Use this data source to get a list of [Fastly dictionaries](https://developer.fastly.com/reference/api/dictionaries/) for the specified service/version.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fastly = Pulumi.Fastly;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleServiceVcl = new Fastly.ServiceVcl("exampleServiceVcl", new()
        ///     {
        ///         Domains = new[]
        ///         {
        ///             new Fastly.Inputs.ServiceVclDomainArgs
        ///             {
        ///                 Name = "example.com",
        ///             },
        ///         },
        ///         Dictionaries = new[]
        ///         {
        ///             new Fastly.Inputs.ServiceVclDictionaryArgs
        ///             {
        ///                 Name = "example_1",
        ///             },
        ///             new Fastly.Inputs.ServiceVclDictionaryArgs
        ///             {
        ///                 Name = "example_2",
        ///             },
        ///             new Fastly.Inputs.ServiceVclDictionaryArgs
        ///             {
        ///                 Name = "example_3",
        ///             },
        ///         },
        ///         ForceDestroy = true,
        ///     });
        /// 
        ///     var exampleDictionaries = Fastly.GetDictionaries.Invoke(new()
        ///     {
        ///         ServiceId = exampleServiceVcl.Id,
        ///         ServiceVersion = exampleServiceVcl.ActiveVersion,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["serviceDictionaries"] = exampleDictionaries,
        ///     };
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// [1]: https://developer.fastly.com/reference/api/dictionaries/
        /// </summary>
        public static Task<GetDictionariesResult> InvokeAsync(GetDictionariesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDictionariesResult>("fastly:index/getDictionaries:getDictionaries", args ?? new GetDictionariesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get a list of [Fastly dictionaries](https://developer.fastly.com/reference/api/dictionaries/) for the specified service/version.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fastly = Pulumi.Fastly;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleServiceVcl = new Fastly.ServiceVcl("exampleServiceVcl", new()
        ///     {
        ///         Domains = new[]
        ///         {
        ///             new Fastly.Inputs.ServiceVclDomainArgs
        ///             {
        ///                 Name = "example.com",
        ///             },
        ///         },
        ///         Dictionaries = new[]
        ///         {
        ///             new Fastly.Inputs.ServiceVclDictionaryArgs
        ///             {
        ///                 Name = "example_1",
        ///             },
        ///             new Fastly.Inputs.ServiceVclDictionaryArgs
        ///             {
        ///                 Name = "example_2",
        ///             },
        ///             new Fastly.Inputs.ServiceVclDictionaryArgs
        ///             {
        ///                 Name = "example_3",
        ///             },
        ///         },
        ///         ForceDestroy = true,
        ///     });
        /// 
        ///     var exampleDictionaries = Fastly.GetDictionaries.Invoke(new()
        ///     {
        ///         ServiceId = exampleServiceVcl.Id,
        ///         ServiceVersion = exampleServiceVcl.ActiveVersion,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["serviceDictionaries"] = exampleDictionaries,
        ///     };
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// [1]: https://developer.fastly.com/reference/api/dictionaries/
        /// </summary>
        public static Output<GetDictionariesResult> Invoke(GetDictionariesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDictionariesResult>("fastly:index/getDictionaries:getDictionaries", args ?? new GetDictionariesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDictionariesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Alphanumeric string identifying the service.
        /// </summary>
        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        /// <summary>
        /// Integer identifying a service version.
        /// </summary>
        [Input("serviceVersion", required: true)]
        public int ServiceVersion { get; set; }

        public GetDictionariesArgs()
        {
        }
        public static new GetDictionariesArgs Empty => new GetDictionariesArgs();
    }

    public sealed class GetDictionariesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Alphanumeric string identifying the service.
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        /// <summary>
        /// Integer identifying a service version.
        /// </summary>
        [Input("serviceVersion", required: true)]
        public Input<int> ServiceVersion { get; set; } = null!;

        public GetDictionariesInvokeArgs()
        {
        }
        public static new GetDictionariesInvokeArgs Empty => new GetDictionariesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDictionariesResult
    {
        /// <summary>
        /// List of all dictionaries for the version of the service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDictionariesDictionaryResult> Dictionaries;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Alphanumeric string identifying the service.
        /// </summary>
        public readonly string ServiceId;
        /// <summary>
        /// Integer identifying a service version.
        /// </summary>
        public readonly int ServiceVersion;

        [OutputConstructor]
        private GetDictionariesResult(
            ImmutableArray<Outputs.GetDictionariesDictionaryResult> dictionaries,

            string id,

            string serviceId,

            int serviceVersion)
        {
            Dictionaries = dictionaries;
            Id = id;
            ServiceId = serviceId;
            ServiceVersion = serviceVersion;
        }
    }
}
