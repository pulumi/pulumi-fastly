// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly
{
    /// <summary>
    /// Provides a Custom Dashboard which can be viewed in the Fastly Control Panel.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fastly = Pulumi.Fastly;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Fastly.CustomDashboard("example", new()
    ///     {
    ///         Name = "Example Custom Dashboard",
    ///         Description = "This is an example custom dashboard. A few dashboard items are provided to help you get started.",
    ///         DashboardItems = new[]
    ///         {
    ///             new Fastly.Inputs.CustomDashboardDashboardItemArgs
    ///             {
    ///                 Id = "example1",
    ///                 Title = "Total Requests",
    ///                 Subtitle = "Number of requests processed.",
    ///                 DataSource = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceArgs
    ///                 {
    ///                     Type = "stats.edge",
    ///                     Config = 
    ///                     {
    ///                         { "metrics", new[]
    ///                         {
    ///                             "requests",
    ///                         } },
    ///                     }[0],
    ///                 },
    ///                 Visualization = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationArgs
    ///                 {
    ///                     Type = "chart",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationConfigArgs
    ///                     {
    ///                         Format = "requests",
    ///                         PlotType = "line",
    ///                     },
    ///                 },
    ///             },
    ///             new Fastly.Inputs.CustomDashboardDashboardItemArgs
    ///             {
    ///                 Id = "example2",
    ///                 Title = "Hit Ratio",
    ///                 Subtitle = "Ratio of requests served from Fastly.",
    ///                 DataSource = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceArgs
    ///                 {
    ///                     Type = "stats.edge",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceConfigArgs
    ///                     {
    ///                         Metrics = new[]
    ///                         {
    ///                             "hit_ratio",
    ///                         },
    ///                     },
    ///                 },
    ///                 Visualization = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationArgs
    ///                 {
    ///                     Type = "chart",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationConfigArgs
    ///                     {
    ///                         Format = "percent",
    ///                         PlotType = "donut",
    ///                         CalculationMethod = "latest",
    ///                     },
    ///                 },
    ///             },
    ///             new Fastly.Inputs.CustomDashboardDashboardItemArgs
    ///             {
    ///                 Id = "example3",
    ///                 Title = "Client &amp; Server Errors",
    ///                 Subtitle = "Total errors served from the client or server.",
    ///                 DataSource = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceArgs
    ///                 {
    ///                     Type = "stats.edge",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceConfigArgs
    ///                     {
    ///                         Metrics = new[]
    ///                         {
    ///                             "status_4xx",
    ///                             "status_5xx",
    ///                         },
    ///                     },
    ///                 },
    ///                 Visualization = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationArgs
    ///                 {
    ///                     Type = "chart",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationConfigArgs
    ///                     {
    ///                         Format = "requests",
    ///                         PlotType = "bar",
    ///                     },
    ///                 },
    ///             },
    ///             new Fastly.Inputs.CustomDashboardDashboardItemArgs
    ///             {
    ///                 Id = "example4",
    ///                 Title = "Domain Requests",
    ///                 Subtitle = "Requests by Domain.",
    ///                 Span = 6,
    ///                 DataSource = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceArgs
    ///                 {
    ///                     Type = "stats.domain",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceConfigArgs
    ///                     {
    ///                         Metrics = new[]
    ///                         {
    ///                             "requests",
    ///                         },
    ///                     },
    ///                 },
    ///                 Visualization = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationArgs
    ///                 {
    ///                     Type = "chart",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationConfigArgs
    ///                     {
    ///                         Format = "requests",
    ///                         PlotType = "line",
    ///                     },
    ///                 },
    ///             },
    ///             new Fastly.Inputs.CustomDashboardDashboardItemArgs
    ///             {
    ///                 Id = "example5",
    ///                 Title = "Origin Responses",
    ///                 Subtitle = "Responses by Origin.",
    ///                 Span = 6,
    ///                 DataSource = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceArgs
    ///                 {
    ///                     Type = "stats.origin",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceConfigArgs
    ///                     {
    ///                         Metrics = new[]
    ///                         {
    ///                             "all_responses",
    ///                         },
    ///                     },
    ///                 },
    ///                 Visualization = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationArgs
    ///                 {
    ///                     Type = "chart",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationConfigArgs
    ///                     {
    ///                         PlotType = "line",
    ///                     },
    ///                 },
    ///             },
    ///             new Fastly.Inputs.CustomDashboardDashboardItemArgs
    ///             {
    ///                 Id = "example6",
    ///                 Title = "Total Bandwidth",
    ///                 Subtitle = "Total bandwidth served.",
    ///                 Span = 12,
    ///                 DataSource = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceArgs
    ///                 {
    ///                     Type = "stats.edge",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceConfigArgs
    ///                     {
    ///                         Metrics = new[]
    ///                         {
    ///                             "bandwidth",
    ///                         },
    ///                     },
    ///                 },
    ///                 Visualization = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationArgs
    ///                 {
    ///                     Type = "chart",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationConfigArgs
    ///                     {
    ///                         Format = "bytes",
    ///                         PlotType = "bar",
    ///                     },
    ///                 },
    ///             },
    ///             new Fastly.Inputs.CustomDashboardDashboardItemArgs
    ///             {
    ///                 Id = "example7",
    ///                 Title = "Products - Image Optimizer &amp; Real-Time Log Streaming",
    ///                 Subtitle = "Total IO images served and log statements sent.",
    ///                 Span = 8,
    ///                 DataSource = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceArgs
    ///                 {
    ///                     Type = "stats.edge",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceConfigArgs
    ///                     {
    ///                         Metrics = new[]
    ///                         {
    ///                             "imgopto",
    ///                             "log",
    ///                         },
    ///                     },
    ///                 },
    ///                 Visualization = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationArgs
    ///                 {
    ///                     Type = "chart",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationConfigArgs
    ///                     {
    ///                         PlotType = "line",
    ///                     },
    ///                 },
    ///             },
    ///             new Fastly.Inputs.CustomDashboardDashboardItemArgs
    ///             {
    ///                 Id = "example8",
    ///                 Title = "Transport Protocols &amp; Security",
    ///                 Subtitle = "HTTP Protocols &amp; TLS.",
    ///                 DataSource = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceArgs
    ///                 {
    ///                     Type = "stats.edge",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceConfigArgs
    ///                     {
    ///                         Metrics = new[]
    ///                         {
    ///                             "http1",
    ///                             "http2",
    ///                             "http3",
    ///                             "tls_v10",
    ///                             "tls_v11",
    ///                             "tls_v12",
    ///                             "tls_v13",
    ///                         },
    ///                     },
    ///                 },
    ///                 Visualization = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationArgs
    ///                 {
    ///                     Type = "chart",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationConfigArgs
    ///                     {
    ///                         Format = "requests",
    ///                         PlotType = "line",
    ///                     },
    ///                 },
    ///             },
    ///             new Fastly.Inputs.CustomDashboardDashboardItemArgs
    ///             {
    ///                 Id = "example9",
    ///                 Title = "Origin Miss Latency",
    ///                 Subtitle = "Miss latency times for your origins.",
    ///                 Span = 12,
    ///                 DataSource = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceArgs
    ///                 {
    ///                     Type = "stats.edge",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceConfigArgs
    ///                     {
    ///                         Metrics = new[]
    ///                         {
    ///                             "origin_latency",
    ///                         },
    ///                     },
    ///                 },
    ///                 Visualization = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationArgs
    ///                 {
    ///                     Type = "chart",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationConfigArgs
    ///                     {
    ///                         Format = "milliseconds",
    ///                         PlotType = "line",
    ///                     },
    ///                 },
    ///             },
    ///             new Fastly.Inputs.CustomDashboardDashboardItemArgs
    ///             {
    ///                 Id = "example10",
    ///                 Title = "DDoS - Request Flood Attempts",
    ///                 Subtitle = "Number of connections the limit-streams action was applied.",
    ///                 Span = 6,
    ///                 DataSource = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceArgs
    ///                 {
    ///                     Type = "stats.edge",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceConfigArgs
    ///                     {
    ///                         Metrics = new[]
    ///                         {
    ///                             "ddos_action_limit_streams_connections",
    ///                             "ddos_action_limit_streams_requests",
    ///                         },
    ///                     },
    ///                 },
    ///                 Visualization = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationArgs
    ///                 {
    ///                     Type = "chart",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationConfigArgs
    ///                     {
    ///                         Format = "requests",
    ///                         PlotType = "line",
    ///                     },
    ///                 },
    ///             },
    ///             new Fastly.Inputs.CustomDashboardDashboardItemArgs
    ///             {
    ///                 Id = "example11",
    ///                 Title = "DDoS - Malicious Bot Attack",
    ///                 Subtitle = "Number of times the blackhole action was taken.",
    ///                 Span = 6,
    ///                 DataSource = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceArgs
    ///                 {
    ///                     Type = "stats.edge",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemDataSourceConfigArgs
    ///                     {
    ///                         Metrics = new[]
    ///                         {
    ///                             "ddos_action_close",
    ///                             "ddos_action_blackhole",
    ///                         },
    ///                     },
    ///                 },
    ///                 Visualization = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationArgs
    ///                 {
    ///                     Type = "chart",
    ///                     Config = new Fastly.Inputs.CustomDashboardDashboardItemVisualizationConfigArgs
    ///                     {
    ///                         Format = "number",
    ///                         PlotType = "line",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Fastly Custom Dashboards can be imported using their ID, e.g.
    /// 
    /// ```sh
    /// $ pulumi import fastly:index/customDashboard:CustomDashboard example xxxxxxxxxxxxxxxxxxxx
    /// ```
    /// </summary>
    [FastlyResourceType("fastly:index/customDashboard:CustomDashboard")]
    public partial class CustomDashboard : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A list of dashboard items.
        /// </summary>
        [Output("dashboardItems")]
        public Output<ImmutableArray<Outputs.CustomDashboardDashboardItem>> DashboardItems { get; private set; } = null!;

        /// <summary>
        /// A short description of the dashboard.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A human-readable name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a CustomDashboard resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomDashboard(string name, CustomDashboardArgs? args = null, CustomResourceOptions? options = null)
            : base("fastly:index/customDashboard:CustomDashboard", name, args ?? new CustomDashboardArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomDashboard(string name, Input<string> id, CustomDashboardState? state = null, CustomResourceOptions? options = null)
            : base("fastly:index/customDashboard:CustomDashboard", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomDashboard resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomDashboard Get(string name, Input<string> id, CustomDashboardState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomDashboard(name, id, state, options);
        }
    }

    public sealed class CustomDashboardArgs : global::Pulumi.ResourceArgs
    {
        [Input("dashboardItems")]
        private InputList<Inputs.CustomDashboardDashboardItemArgs>? _dashboardItems;

        /// <summary>
        /// A list of dashboard items.
        /// </summary>
        public InputList<Inputs.CustomDashboardDashboardItemArgs> DashboardItems
        {
            get => _dashboardItems ?? (_dashboardItems = new InputList<Inputs.CustomDashboardDashboardItemArgs>());
            set => _dashboardItems = value;
        }

        /// <summary>
        /// A short description of the dashboard.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A human-readable name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public CustomDashboardArgs()
        {
        }
        public static new CustomDashboardArgs Empty => new CustomDashboardArgs();
    }

    public sealed class CustomDashboardState : global::Pulumi.ResourceArgs
    {
        [Input("dashboardItems")]
        private InputList<Inputs.CustomDashboardDashboardItemGetArgs>? _dashboardItems;

        /// <summary>
        /// A list of dashboard items.
        /// </summary>
        public InputList<Inputs.CustomDashboardDashboardItemGetArgs> DashboardItems
        {
            get => _dashboardItems ?? (_dashboardItems = new InputList<Inputs.CustomDashboardDashboardItemGetArgs>());
            set => _dashboardItems = value;
        }

        /// <summary>
        /// A short description of the dashboard.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A human-readable name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public CustomDashboardState()
        {
        }
        public static new CustomDashboardState Empty => new CustomDashboardState();
    }
}
