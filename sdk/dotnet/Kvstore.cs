// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// Basic usage:
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fastly = Pulumi.Fastly;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // IMPORTANT: Deleting a KV Store requires first deleting its resource_link.
    ///     // This requires a two-step `pulumi up` as we can't guarantee deletion order.
    ///     // e.g. resource_link deletion within fastly_service_compute might not finish first.
    ///     var exampleKvstore = new Fastly.Kvstore("example", new()
    ///     {
    ///         Name = "my_kv_store",
    ///     });
    /// 
    ///     var example = Fastly.GetPackageHash.Invoke(new()
    ///     {
    ///         Filename = "package.tar.gz",
    ///     });
    /// 
    ///     var exampleServiceCompute = new Fastly.ServiceCompute("example", new()
    ///     {
    ///         Name = "my_compute_service",
    ///         Domains = new[]
    ///         {
    ///             new Fastly.Inputs.ServiceComputeDomainArgs
    ///             {
    ///                 Name = "demo.example.com",
    ///             },
    ///         },
    ///         Package = new Fastly.Inputs.ServiceComputePackageArgs
    ///         {
    ///             Filename = "package.tar.gz",
    ///             SourceCodeHash = example.Apply(getPackageHashResult =&gt; getPackageHashResult.Hash),
    ///         },
    ///         ResourceLinks = new[]
    ///         {
    ///             new Fastly.Inputs.ServiceComputeResourceLinkArgs
    ///             {
    ///                 Name = "my_resource_link",
    ///                 ResourceId = exampleKvstore.Id,
    ///             },
    ///         },
    ///         ForceDestroy = true,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Fastly KV Stores can be imported using their Store ID, e.g.
    /// 
    /// ```sh
    /// $ pulumi import fastly:index/kvstore:Kvstore example xxxxxxxxxxxxxxxxxxxx
    /// ```
    /// </summary>
    [FastlyResourceType("fastly:index/kvstore:Kvstore")]
    public partial class Kvstore : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Allow the KV Store to be deleted, even if it contains entries. Defaults to false.
        /// </summary>
        [Output("forceDestroy")]
        public Output<bool?> ForceDestroy { get; private set; } = null!;

        /// <summary>
        /// The regional location of the KV Store. Valid values are `US`, `EU`, `ASIA`, and `AUS`.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// A unique name to identify the KV Store. It is important to note that changing this attribute will delete and recreate the KV Store, and discard the current entries. You MUST first delete the associated resource_link block from your service before modifying this field.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a Kvstore resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Kvstore(string name, KvstoreArgs? args = null, CustomResourceOptions? options = null)
            : base("fastly:index/kvstore:Kvstore", name, args ?? new KvstoreArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Kvstore(string name, Input<string> id, KvstoreState? state = null, CustomResourceOptions? options = null)
            : base("fastly:index/kvstore:Kvstore", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Kvstore resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Kvstore Get(string name, Input<string> id, KvstoreState? state = null, CustomResourceOptions? options = null)
        {
            return new Kvstore(name, id, state, options);
        }
    }

    public sealed class KvstoreArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allow the KV Store to be deleted, even if it contains entries. Defaults to false.
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        /// <summary>
        /// The regional location of the KV Store. Valid values are `US`, `EU`, `ASIA`, and `AUS`.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A unique name to identify the KV Store. It is important to note that changing this attribute will delete and recreate the KV Store, and discard the current entries. You MUST first delete the associated resource_link block from your service before modifying this field.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public KvstoreArgs()
        {
        }
        public static new KvstoreArgs Empty => new KvstoreArgs();
    }

    public sealed class KvstoreState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allow the KV Store to be deleted, even if it contains entries. Defaults to false.
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        /// <summary>
        /// The regional location of the KV Store. Valid values are `US`, `EU`, `ASIA`, and `AUS`.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A unique name to identify the KV Store. It is important to note that changing this attribute will delete and recreate the KV Store, and discard the current entries. You MUST first delete the associated resource_link block from your service before modifying this field.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public KvstoreState()
        {
        }
        public static new KvstoreState Empty => new KvstoreState();
    }
}
