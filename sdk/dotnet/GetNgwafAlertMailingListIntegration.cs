// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly
{
    public static class GetNgwafAlertMailingListIntegration
    {
        /// <summary>
        /// Use this data source to get a Fastly Next-Gen WAF Alert Mailing List integration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fastly = Pulumi.Fastly;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ngwafJiraAlerts = Fastly.GetNgwafAlertJiraIntegration.Invoke(new()
        ///     {
        ///         WorkspaceId = testRedactionsWorkspace.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["ngwafJiraAlertsAll"] = jiraAlerts,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetNgwafAlertMailingListIntegrationResult> InvokeAsync(GetNgwafAlertMailingListIntegrationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNgwafAlertMailingListIntegrationResult>("fastly:index/getNgwafAlertMailingListIntegration:getNgwafAlertMailingListIntegration", args ?? new GetNgwafAlertMailingListIntegrationArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get a Fastly Next-Gen WAF Alert Mailing List integration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fastly = Pulumi.Fastly;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ngwafJiraAlerts = Fastly.GetNgwafAlertJiraIntegration.Invoke(new()
        ///     {
        ///         WorkspaceId = testRedactionsWorkspace.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["ngwafJiraAlertsAll"] = jiraAlerts,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetNgwafAlertMailingListIntegrationResult> Invoke(GetNgwafAlertMailingListIntegrationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNgwafAlertMailingListIntegrationResult>("fastly:index/getNgwafAlertMailingListIntegration:getNgwafAlertMailingListIntegration", args ?? new GetNgwafAlertMailingListIntegrationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get a Fastly Next-Gen WAF Alert Mailing List integration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fastly = Pulumi.Fastly;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ngwafJiraAlerts = Fastly.GetNgwafAlertJiraIntegration.Invoke(new()
        ///     {
        ///         WorkspaceId = testRedactionsWorkspace.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["ngwafJiraAlertsAll"] = jiraAlerts,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetNgwafAlertMailingListIntegrationResult> Invoke(GetNgwafAlertMailingListIntegrationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNgwafAlertMailingListIntegrationResult>("fastly:index/getNgwafAlertMailingListIntegration:getNgwafAlertMailingListIntegration", args ?? new GetNgwafAlertMailingListIntegrationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNgwafAlertMailingListIntegrationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the workspace.
        /// </summary>
        [Input("workspaceId", required: true)]
        public string WorkspaceId { get; set; } = null!;

        public GetNgwafAlertMailingListIntegrationArgs()
        {
        }
        public static new GetNgwafAlertMailingListIntegrationArgs Empty => new GetNgwafAlertMailingListIntegrationArgs();
    }

    public sealed class GetNgwafAlertMailingListIntegrationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the workspace.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public GetNgwafAlertMailingListIntegrationInvokeArgs()
        {
        }
        public static new GetNgwafAlertMailingListIntegrationInvokeArgs Empty => new GetNgwafAlertMailingListIntegrationInvokeArgs();
    }


    [OutputType]
    public sealed class GetNgwafAlertMailingListIntegrationResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of all Mailing List alerts for a workspace.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNgwafAlertMailingListIntegrationMailingListAlertResult> MailingListAlerts;
        /// <summary>
        /// The ID of the workspace.
        /// </summary>
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetNgwafAlertMailingListIntegrationResult(
            string id,

            ImmutableArray<Outputs.GetNgwafAlertMailingListIntegrationMailingListAlertResult> mailingListAlerts,

            string workspaceId)
        {
            Id = id;
            MailingListAlerts = mailingListAlerts;
            WorkspaceId = workspaceId;
        }
    }
}
