// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly
{
    public static class GetNgwafThresholds
    {
        public static Task<GetNgwafThresholdsResult> InvokeAsync(GetNgwafThresholdsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNgwafThresholdsResult>("fastly:index/getNgwafThresholds:getNgwafThresholds", args ?? new GetNgwafThresholdsArgs(), options.WithDefaults());

        public static Output<GetNgwafThresholdsResult> Invoke(GetNgwafThresholdsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNgwafThresholdsResult>("fastly:index/getNgwafThresholds:getNgwafThresholds", args ?? new GetNgwafThresholdsInvokeArgs(), options.WithDefaults());

        public static Output<GetNgwafThresholdsResult> Invoke(GetNgwafThresholdsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNgwafThresholdsResult>("fastly:index/getNgwafThresholds:getNgwafThresholds", args ?? new GetNgwafThresholdsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNgwafThresholdsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the workspace.
        /// </summary>
        [Input("workspaceId", required: true)]
        public string WorkspaceId { get; set; } = null!;

        public GetNgwafThresholdsArgs()
        {
        }
        public static new GetNgwafThresholdsArgs Empty => new GetNgwafThresholdsArgs();
    }

    public sealed class GetNgwafThresholdsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the workspace.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public GetNgwafThresholdsInvokeArgs()
        {
        }
        public static new GetNgwafThresholdsInvokeArgs Empty => new GetNgwafThresholdsInvokeArgs();
    }


    [OutputType]
    public sealed class GetNgwafThresholdsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of all thresholds for a given workspace.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNgwafThresholdsThresholdResult> Thresholds;
        /// <summary>
        /// The ID of the workspace.
        /// </summary>
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetNgwafThresholdsResult(
            string id,

            ImmutableArray<Outputs.GetNgwafThresholdsThresholdResult> thresholds,

            string workspaceId)
        {
            Id = id;
            Thresholds = thresholds;
            WorkspaceId = workspaceId;
        }
    }
}
