// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly.Inputs
{

    public sealed class ServiceVclCacheSettingGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// One of cache, pass, or restart, as defined on Fastly's documentation under "[Caching action descriptions](https://docs.fastly.com/en/guides/controlling-caching#caching-action-descriptions)"
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// Name of already defined `Condition` used to test whether this settings object should be used. This `Condition` must be of type `CACHE`
        /// </summary>
        [Input("cacheCondition")]
        public Input<string>? CacheCondition { get; set; }

        /// <summary>
        /// Unique name for this Cache Setting. It is important to note that changing this attribute will delete and recreate the resource
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Max "Time To Live" for stale (unreachable) objects
        /// </summary>
        [Input("staleTtl")]
        public Input<int>? StaleTtl { get; set; }

        /// <summary>
        /// The Time-To-Live (TTL) for the object
        /// </summary>
        [Input("ttl")]
        public Input<int>? Ttl { get; set; }

        public ServiceVclCacheSettingGetArgs()
        {
        }
        public static new ServiceVclCacheSettingGetArgs Empty => new ServiceVclCacheSettingGetArgs();
    }
}
