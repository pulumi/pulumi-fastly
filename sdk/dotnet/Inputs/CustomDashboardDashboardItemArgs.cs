// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly.Inputs
{

    public sealed class CustomDashboardDashboardItemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An object which describes the data to display.
        /// </summary>
        [Input("dataSource", required: true)]
        public Input<Inputs.CustomDashboardDashboardItemDataSourceArgs> DataSource { get; set; } = null!;

        /// <summary>
        /// Dashboard item identifier (alphanumeric). Must be unique, relative to other items in the same dashboard.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// The number of columns for the dashboard item to span. Dashboards are rendered on a 12-column grid on "desktop" screen sizes.
        /// </summary>
        [Input("span")]
        public Input<int>? Span { get; set; }

        /// <summary>
        /// A human-readable subtitle for the dashboard item. Often a description of the visualization.
        /// </summary>
        [Input("subtitle", required: true)]
        public Input<string> Subtitle { get; set; } = null!;

        /// <summary>
        /// A human-readable title for the dashboard item.
        /// </summary>
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        /// <summary>
        /// An object which describes the data visualization to display.
        /// </summary>
        [Input("visualization", required: true)]
        public Input<Inputs.CustomDashboardDashboardItemVisualizationArgs> Visualization { get; set; } = null!;

        public CustomDashboardDashboardItemArgs()
        {
        }
        public static new CustomDashboardDashboardItemArgs Empty => new CustomDashboardDashboardItemArgs();
    }
}
