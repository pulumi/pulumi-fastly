// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly
{
    public static class GetWafRules
    {
        /// <summary>
        /// Use this data source to get the [WAF rules](https://developer.fastly.com/reference/api/waf/rules/) of Fastly. A set of third-party rules from the OWASP Core Ruleset, commercial sources, and open source, in addition to Fastly-generated rules.
        /// They offer protection from injection attacks and cross site scripting amongst other key application-layer attacks.
        /// </summary>
        public static Task<GetWafRulesResult> InvokeAsync(GetWafRulesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWafRulesResult>("fastly:index/getWafRules:getWafRules", args ?? new GetWafRulesArgs(), options.WithVersion());
    }


    public sealed class GetWafRulesArgs : Pulumi.InvokeArgs
    {
        [Input("excludeModsecRuleIds")]
        private List<int>? _excludeModsecRuleIds;

        /// <summary>
        /// Exclusion filter by WAF rule's ModSecurity ID.
        /// </summary>
        public List<int> ExcludeModsecRuleIds
        {
            get => _excludeModsecRuleIds ?? (_excludeModsecRuleIds = new List<int>());
            set => _excludeModsecRuleIds = value;
        }

        [Input("publishers")]
        private List<string>? _publishers;

        /// <summary>
        /// Inclusion filter by WAF rule's publishers.
        /// </summary>
        public List<string> Publishers
        {
            get => _publishers ?? (_publishers = new List<string>());
            set => _publishers = value;
        }

        [Input("tags")]
        private List<string>? _tags;

        /// <summary>
        /// Inclusion filter by WAF rule's tags.
        /// </summary>
        public List<string> Tags
        {
            get => _tags ?? (_tags = new List<string>());
            set => _tags = value;
        }

        public GetWafRulesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWafRulesResult
    {
        /// <summary>
        /// A list of modsecurity rules IDs to be excluded from the data set.
        /// </summary>
        public readonly ImmutableArray<int> ExcludeModsecRuleIds;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of publishers to be used as filters for the data set.
        /// </summary>
        public readonly ImmutableArray<string> Publishers;
        /// <summary>
        /// The list of rules that results from any given combination of filters.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWafRulesRuleResult> Rules;
        /// <summary>
        /// A list of tags to be used as filters for the data set.
        /// </summary>
        public readonly ImmutableArray<string> Tags;

        [OutputConstructor]
        private GetWafRulesResult(
            ImmutableArray<int> excludeModsecRuleIds,

            string id,

            ImmutableArray<string> publishers,

            ImmutableArray<Outputs.GetWafRulesRuleResult> rules,

            ImmutableArray<string> tags)
        {
            ExcludeModsecRuleIds = excludeModsecRuleIds;
            Id = id;
            Publishers = publishers;
            Rules = rules;
            Tags = tags;
        }
    }
}
