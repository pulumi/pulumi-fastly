// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Fastly
{
    public static class GetWafRules
    {
        public static Task<GetWafRulesResult> InvokeAsync(GetWafRulesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWafRulesResult>("fastly:index/getWafRules:getWafRules", args ?? new GetWafRulesArgs(), options.WithVersion());

        public static Output<GetWafRulesResult> Invoke(GetWafRulesInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetWafRulesResult>("fastly:index/getWafRules:getWafRules", args ?? new GetWafRulesInvokeArgs(), options.WithVersion());
    }


    public sealed class GetWafRulesArgs : Pulumi.InvokeArgs
    {
        [Input("excludeModsecRuleIds")]
        private List<int>? _excludeModsecRuleIds;

        /// <summary>
        /// Exclusion filter by WAF rule's ModSecurity ID.
        /// </summary>
        public List<int> ExcludeModsecRuleIds
        {
            get => _excludeModsecRuleIds ?? (_excludeModsecRuleIds = new List<int>());
            set => _excludeModsecRuleIds = value;
        }

        [Input("modsecRuleIds")]
        private List<int>? _modsecRuleIds;

        /// <summary>
        /// A list of modsecurity rules IDs to be used as filters for the data set.
        /// </summary>
        public List<int> ModsecRuleIds
        {
            get => _modsecRuleIds ?? (_modsecRuleIds = new List<int>());
            set => _modsecRuleIds = value;
        }

        [Input("publishers")]
        private List<string>? _publishers;

        /// <summary>
        /// Inclusion filter by WAF rule's publishers.
        /// </summary>
        public List<string> Publishers
        {
            get => _publishers ?? (_publishers = new List<string>());
            set => _publishers = value;
        }

        [Input("tags")]
        private List<string>? _tags;

        /// <summary>
        /// Inclusion filter by WAF rule's tags.
        /// </summary>
        public List<string> Tags
        {
            get => _tags ?? (_tags = new List<string>());
            set => _tags = value;
        }

        public GetWafRulesArgs()
        {
        }
    }

    public sealed class GetWafRulesInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("excludeModsecRuleIds")]
        private InputList<int>? _excludeModsecRuleIds;

        /// <summary>
        /// Exclusion filter by WAF rule's ModSecurity ID.
        /// </summary>
        public InputList<int> ExcludeModsecRuleIds
        {
            get => _excludeModsecRuleIds ?? (_excludeModsecRuleIds = new InputList<int>());
            set => _excludeModsecRuleIds = value;
        }

        [Input("modsecRuleIds")]
        private InputList<int>? _modsecRuleIds;

        /// <summary>
        /// A list of modsecurity rules IDs to be used as filters for the data set.
        /// </summary>
        public InputList<int> ModsecRuleIds
        {
            get => _modsecRuleIds ?? (_modsecRuleIds = new InputList<int>());
            set => _modsecRuleIds = value;
        }

        [Input("publishers")]
        private InputList<string>? _publishers;

        /// <summary>
        /// Inclusion filter by WAF rule's publishers.
        /// </summary>
        public InputList<string> Publishers
        {
            get => _publishers ?? (_publishers = new InputList<string>());
            set => _publishers = value;
        }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Inclusion filter by WAF rule's tags.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public GetWafRulesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWafRulesResult
    {
        /// <summary>
        /// A list of modsecurity rules IDs to be excluded from the data set.
        /// </summary>
        public readonly ImmutableArray<int> ExcludeModsecRuleIds;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of modsecurity rules IDs to be used as filters for the data set.
        /// </summary>
        public readonly ImmutableArray<int> ModsecRuleIds;
        /// <summary>
        /// A list of publishers to be used as filters for the data set.
        /// </summary>
        public readonly ImmutableArray<string> Publishers;
        /// <summary>
        /// The list of rules that results from any given combination of filters.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWafRulesRuleResult> Rules;
        /// <summary>
        /// A list of tags to be used as filters for the data set.
        /// </summary>
        public readonly ImmutableArray<string> Tags;

        [OutputConstructor]
        private GetWafRulesResult(
            ImmutableArray<int> excludeModsecRuleIds,

            string id,

            ImmutableArray<int> modsecRuleIds,

            ImmutableArray<string> publishers,

            ImmutableArray<Outputs.GetWafRulesRuleResult> rules,

            ImmutableArray<string> tags)
        {
            ExcludeModsecRuleIds = excludeModsecRuleIds;
            Id = id;
            ModsecRuleIds = modsecRuleIds;
            Publishers = publishers;
            Rules = rules;
            Tags = tags;
        }
    }
}
