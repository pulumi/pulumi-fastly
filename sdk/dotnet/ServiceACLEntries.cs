// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Fastly
{
    /// <summary>
    /// ## Import
    /// 
    /// This is an example of the import command being applied to the resource named `fastly_service_acl_entries.entries`
    /// 
    /// The resource ID is a combined value of the `service_id` and `acl_id` separated by a forward slash.
    /// 
    /// ```sh
    /// $ pulumi import fastly:index/serviceACLEntries:ServiceACLEntries entries xxxxxxxxxxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxx
    /// ```
    /// 
    /// If Terraform is already managing remote acl entries against a resource being imported then the user will be asked to remove it from the existing Terraform state.
    /// 
    /// The following is an example of the Terraform state command to remove the resource named `fastly_service_acl_entries.entries` from the Terraform state file.
    /// 
    /// $ terraform state rm fastly_service_acl_entries.entries
    /// </summary>
    [FastlyResourceType("fastly:index/serviceACLEntries:ServiceACLEntries")]
    public partial class ServiceACLEntries : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the ACL that the items belong to
        /// </summary>
        [Output("aclId")]
        public Output<string> AclId { get; private set; } = null!;

        /// <summary>
        /// ACL Entries
        /// </summary>
        [Output("entries")]
        public Output<ImmutableArray<Outputs.ServiceACLEntriesEntry>> Entries { get; private set; } = null!;

        /// <summary>
        /// Whether to reapply changes if the state of the entries drifts, i.e. if entries are managed externally
        /// </summary>
        [Output("manageEntries")]
        public Output<bool?> ManageEntries { get; private set; } = null!;

        /// <summary>
        /// The ID of the Service that the ACL belongs to
        /// </summary>
        [Output("serviceId")]
        public Output<string> ServiceId { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceACLEntries resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceACLEntries(string name, ServiceACLEntriesArgs args, CustomResourceOptions? options = null)
            : base("fastly:index/serviceACLEntries:ServiceACLEntries", name, args ?? new ServiceACLEntriesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceACLEntries(string name, Input<string> id, ServiceACLEntriesState? state = null, CustomResourceOptions? options = null)
            : base("fastly:index/serviceACLEntries:ServiceACLEntries", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceACLEntries resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceACLEntries Get(string name, Input<string> id, ServiceACLEntriesState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceACLEntries(name, id, state, options);
        }
    }

    public sealed class ServiceACLEntriesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the ACL that the items belong to
        /// </summary>
        [Input("aclId", required: true)]
        public Input<string> AclId { get; set; } = null!;

        [Input("entries")]
        private InputList<Inputs.ServiceACLEntriesEntryArgs>? _entries;

        /// <summary>
        /// ACL Entries
        /// </summary>
        public InputList<Inputs.ServiceACLEntriesEntryArgs> Entries
        {
            get => _entries ?? (_entries = new InputList<Inputs.ServiceACLEntriesEntryArgs>());
            set => _entries = value;
        }

        /// <summary>
        /// Whether to reapply changes if the state of the entries drifts, i.e. if entries are managed externally
        /// </summary>
        [Input("manageEntries")]
        public Input<bool>? ManageEntries { get; set; }

        /// <summary>
        /// The ID of the Service that the ACL belongs to
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public ServiceACLEntriesArgs()
        {
        }
        public static new ServiceACLEntriesArgs Empty => new ServiceACLEntriesArgs();
    }

    public sealed class ServiceACLEntriesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the ACL that the items belong to
        /// </summary>
        [Input("aclId")]
        public Input<string>? AclId { get; set; }

        [Input("entries")]
        private InputList<Inputs.ServiceACLEntriesEntryGetArgs>? _entries;

        /// <summary>
        /// ACL Entries
        /// </summary>
        public InputList<Inputs.ServiceACLEntriesEntryGetArgs> Entries
        {
            get => _entries ?? (_entries = new InputList<Inputs.ServiceACLEntriesEntryGetArgs>());
            set => _entries = value;
        }

        /// <summary>
        /// Whether to reapply changes if the state of the entries drifts, i.e. if entries are managed externally
        /// </summary>
        [Input("manageEntries")]
        public Input<bool>? ManageEntries { get; set; }

        /// <summary>
        /// The ID of the Service that the ACL belongs to
        /// </summary>
        [Input("serviceId")]
        public Input<string>? ServiceId { get; set; }

        public ServiceACLEntriesState()
        {
        }
        public static new ServiceACLEntriesState Empty => new ServiceACLEntriesState();
    }
}
